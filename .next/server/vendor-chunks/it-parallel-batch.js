"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/it-parallel-batch";
exports.ids = ["vendor-chunks/it-parallel-batch"];
exports.modules = {

/***/ "(rsc)/./node_modules/it-parallel-batch/index.js":
/*!*************************************************!*\
  !*** ./node_modules/it-parallel-batch/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst batch = __webpack_require__(/*! it-batch */ \"(rsc)/./node_modules/it-batch/index.js\")\n\n/**\n * @template T\n * @typedef {{ok:true, value:T}} Success\n */\n\n/**\n * @typedef {{ok:false, err:Error}} Failure\n */\n\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n *\n * @template T\n * @param {AsyncIterable<() => Promise<T>>|Iterable<() => Promise<T>>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T>}\n */\nasync function * parallelBatch (source, size = 1) {\n  for await (const tasks of batch(source, size)) {\n    /** @type {Promise<Success<T>|Failure>[]} */\n    const things = tasks.map(\n      /**\n       * @param {() => Promise<T>} p\n       */\n      p => {\n        return p().then(value => ({ ok: true, value }), err => ({ ok: false, err }))\n      })\n\n    for (let i = 0; i < things.length; i++) {\n      const result = await things[i]\n\n      if (result.ok) {\n        yield result.value\n      } else {\n        throw result.err\n      }\n    }\n  }\n}\n\nmodule.exports = parallelBatch\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXQtcGFyYWxsZWwtYmF0Y2gvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVosY0FBYyxtQkFBTyxDQUFDLHdEQUFVOztBQUVoQztBQUNBO0FBQ0EsY0FBYyxtQkFBbUI7QUFDakM7O0FBRUE7QUFDQSxjQUFjLHNCQUFzQjtBQUNwQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDREQUE0RDtBQUN2RSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0JBQStCO0FBQzlDO0FBQ0E7QUFDQSxpQkFBaUIsa0JBQWtCO0FBQ25DO0FBQ0E7QUFDQSxvQ0FBb0MsaUJBQWlCLGFBQWEsZ0JBQWdCO0FBQ2xGLE9BQU87O0FBRVAsb0JBQW9CLG1CQUFtQjtBQUN2Qzs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIi9ob21lL2FsdGNvaW4tZGFkZHkvRG93bmxvYWRzL293bmx5L25vZGVfbW9kdWxlcy9pdC1wYXJhbGxlbC1iYXRjaC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3QgYmF0Y2ggPSByZXF1aXJlKCdpdC1iYXRjaCcpXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEB0eXBlZGVmIHt7b2s6dHJ1ZSwgdmFsdWU6VH19IFN1Y2Nlc3NcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHt7b2s6ZmFsc2UsIGVycjpFcnJvcn19IEZhaWx1cmVcbiAqL1xuXG4vKipcbiAqIFRha2VzIGFuIChhc3luYykgaXRlcmF0b3IgdGhhdCBlbWl0cyBwcm9taXNlLXJldHVybmluZyBmdW5jdGlvbnMsXG4gKiBpbnZva2VzIHRoZW0gaW4gcGFyYWxsZWwgYW5kIGVtaXRzIHRoZSByZXN1bHRzIGFzIHRoZXkgYmVjb21lIGF2YWlsYWJsZSBidXRcbiAqIGluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZSBpbnB1dFxuICpcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0FzeW5jSXRlcmFibGU8KCkgPT4gUHJvbWlzZTxUPj58SXRlcmFibGU8KCkgPT4gUHJvbWlzZTxUPj59IHNvdXJjZVxuICogQHBhcmFtIHtudW1iZXJ9IFtzaXplPTFdXG4gKiBAcmV0dXJucyB7QXN5bmNJdGVyYWJsZTxUPn1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gKiBwYXJhbGxlbEJhdGNoIChzb3VyY2UsIHNpemUgPSAxKSB7XG4gIGZvciBhd2FpdCAoY29uc3QgdGFza3Mgb2YgYmF0Y2goc291cmNlLCBzaXplKSkge1xuICAgIC8qKiBAdHlwZSB7UHJvbWlzZTxTdWNjZXNzPFQ+fEZhaWx1cmU+W119ICovXG4gICAgY29uc3QgdGhpbmdzID0gdGFza3MubWFwKFxuICAgICAgLyoqXG4gICAgICAgKiBAcGFyYW0geygpID0+IFByb21pc2U8VD59IHBcbiAgICAgICAqL1xuICAgICAgcCA9PiB7XG4gICAgICAgIHJldHVybiBwKCkudGhlbih2YWx1ZSA9PiAoeyBvazogdHJ1ZSwgdmFsdWUgfSksIGVyciA9PiAoeyBvazogZmFsc2UsIGVyciB9KSlcbiAgICAgIH0pXG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaW5ncy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpbmdzW2ldXG5cbiAgICAgIGlmIChyZXN1bHQub2spIHtcbiAgICAgICAgeWllbGQgcmVzdWx0LnZhbHVlXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyByZXN1bHQuZXJyXG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcGFyYWxsZWxCYXRjaFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/it-parallel-batch/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/it-parallel-batch/index.js":
/*!*************************************************!*\
  !*** ./node_modules/it-parallel-batch/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst batch = __webpack_require__(/*! it-batch */ \"(ssr)/./node_modules/it-batch/index.js\")\n\n/**\n * @template T\n * @typedef {{ok:true, value:T}} Success\n */\n\n/**\n * @typedef {{ok:false, err:Error}} Failure\n */\n\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n *\n * @template T\n * @param {AsyncIterable<() => Promise<T>>|Iterable<() => Promise<T>>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T>}\n */\nasync function * parallelBatch (source, size = 1) {\n  for await (const tasks of batch(source, size)) {\n    /** @type {Promise<Success<T>|Failure>[]} */\n    const things = tasks.map(\n      /**\n       * @param {() => Promise<T>} p\n       */\n      p => {\n        return p().then(value => ({ ok: true, value }), err => ({ ok: false, err }))\n      })\n\n    for (let i = 0; i < things.length; i++) {\n      const result = await things[i]\n\n      if (result.ok) {\n        yield result.value\n      } else {\n        throw result.err\n      }\n    }\n  }\n}\n\nmodule.exports = parallelBatch\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXQtcGFyYWxsZWwtYmF0Y2gvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVosY0FBYyxtQkFBTyxDQUFDLHdEQUFVOztBQUVoQztBQUNBO0FBQ0EsY0FBYyxtQkFBbUI7QUFDakM7O0FBRUE7QUFDQSxjQUFjLHNCQUFzQjtBQUNwQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDREQUE0RDtBQUN2RSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0JBQStCO0FBQzlDO0FBQ0E7QUFDQSxpQkFBaUIsa0JBQWtCO0FBQ25DO0FBQ0E7QUFDQSxvQ0FBb0MsaUJBQWlCLGFBQWEsZ0JBQWdCO0FBQ2xGLE9BQU87O0FBRVAsb0JBQW9CLG1CQUFtQjtBQUN2Qzs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIi9ob21lL2FsdGNvaW4tZGFkZHkvRG93bmxvYWRzL293bmx5L25vZGVfbW9kdWxlcy9pdC1wYXJhbGxlbC1iYXRjaC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3QgYmF0Y2ggPSByZXF1aXJlKCdpdC1iYXRjaCcpXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEB0eXBlZGVmIHt7b2s6dHJ1ZSwgdmFsdWU6VH19IFN1Y2Nlc3NcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHt7b2s6ZmFsc2UsIGVycjpFcnJvcn19IEZhaWx1cmVcbiAqL1xuXG4vKipcbiAqIFRha2VzIGFuIChhc3luYykgaXRlcmF0b3IgdGhhdCBlbWl0cyBwcm9taXNlLXJldHVybmluZyBmdW5jdGlvbnMsXG4gKiBpbnZva2VzIHRoZW0gaW4gcGFyYWxsZWwgYW5kIGVtaXRzIHRoZSByZXN1bHRzIGFzIHRoZXkgYmVjb21lIGF2YWlsYWJsZSBidXRcbiAqIGluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZSBpbnB1dFxuICpcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0FzeW5jSXRlcmFibGU8KCkgPT4gUHJvbWlzZTxUPj58SXRlcmFibGU8KCkgPT4gUHJvbWlzZTxUPj59IHNvdXJjZVxuICogQHBhcmFtIHtudW1iZXJ9IFtzaXplPTFdXG4gKiBAcmV0dXJucyB7QXN5bmNJdGVyYWJsZTxUPn1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gKiBwYXJhbGxlbEJhdGNoIChzb3VyY2UsIHNpemUgPSAxKSB7XG4gIGZvciBhd2FpdCAoY29uc3QgdGFza3Mgb2YgYmF0Y2goc291cmNlLCBzaXplKSkge1xuICAgIC8qKiBAdHlwZSB7UHJvbWlzZTxTdWNjZXNzPFQ+fEZhaWx1cmU+W119ICovXG4gICAgY29uc3QgdGhpbmdzID0gdGFza3MubWFwKFxuICAgICAgLyoqXG4gICAgICAgKiBAcGFyYW0geygpID0+IFByb21pc2U8VD59IHBcbiAgICAgICAqL1xuICAgICAgcCA9PiB7XG4gICAgICAgIHJldHVybiBwKCkudGhlbih2YWx1ZSA9PiAoeyBvazogdHJ1ZSwgdmFsdWUgfSksIGVyciA9PiAoeyBvazogZmFsc2UsIGVyciB9KSlcbiAgICAgIH0pXG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaW5ncy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpbmdzW2ldXG5cbiAgICAgIGlmIChyZXN1bHQub2spIHtcbiAgICAgICAgeWllbGQgcmVzdWx0LnZhbHVlXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyByZXN1bHQuZXJyXG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcGFyYWxsZWxCYXRjaFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/it-parallel-batch/index.js\n");

/***/ })

};
;