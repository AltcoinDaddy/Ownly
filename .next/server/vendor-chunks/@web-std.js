/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@web-std";
exports.ids = ["vendor-chunks/@web-std"];
exports.modules = {

/***/ "(rsc)/./node_modules/@web-std/blob/src/blob.js":
/*!************************************************!*\
  !*** ./node_modules/@web-std/blob/src/blob.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* binding */ Blob),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.ReadableStream),\n/* harmony export */   TextDecoder: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.TextDecoder),\n/* harmony export */   TextEncoder: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.TextEncoder)\n/* harmony export */ });\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(rsc)/./node_modules/@web-std/blob/src/package.js\");\n\n\n/**\n * @implements {globalThis.Blob}\n */\nconst WebBlob = class Blob {\n  /**\n   * @param {BlobPart[]} [init]\n   * @param {BlobPropertyBag} [options]\n   */\n  constructor(init = [], options = {}) {\n    /** @type {Uint8Array[]} */\n    const parts = []\n\n    let size = 0\n    for (const part of init) {\n      if (typeof part === \"string\") {\n        const bytes = new _package_js__WEBPACK_IMPORTED_MODULE_0__.TextEncoder().encode(part)\n        parts.push(bytes)\n        size += bytes.byteLength\n      } else if (part instanceof WebBlob) {\n        size += part.size\n        // @ts-ignore - `_parts` is marked private so TS will complain about\n        // accessing it.\n        parts.push(...part._parts)\n      } else if (part instanceof ArrayBuffer) {\n        parts.push(new Uint8Array(part))\n        size += part.byteLength\n      } else if (part instanceof Uint8Array) {\n        parts.push(part)\n        size += part.byteLength\n      } else if (ArrayBuffer.isView(part)) {\n        const { buffer, byteOffset, byteLength } = part\n        parts.push(new Uint8Array(buffer, byteOffset, byteLength))\n        size += byteLength\n      } else {\n        const bytes = new _package_js__WEBPACK_IMPORTED_MODULE_0__.TextEncoder().encode(String(part))\n        parts.push(bytes)\n        size += bytes.byteLength\n      }\n    }\n\n    /** @private */\n    this._size = size\n    /** @private */\n    this._type = readType(options.type)\n    /** @private */\n    this._parts = parts\n\n    Object.defineProperties(this, {\n      _size: { enumerable: false },\n      _type: { enumerable: false },\n      _parts: { enumerable: false },\n    })\n  }\n\n  /**\n   * A string indicating the MIME type of the data contained in the Blob.\n   * If the type is unknown, this string is empty.\n   * @type {string}\n   */\n  get type() {\n    return this._type\n  }\n  /**\n   * The size, in bytes, of the data contained in the Blob object.\n   * @type {number}\n   */\n  get size() {\n    return this._size\n  }\n\n  /**\n   * Returns a new Blob object containing the data in the specified range of\n   * bytes of the blob on which it's called.\n   * @param {number} [start=0] - An index into the Blob indicating the first\n   * byte to include in the new Blob. If you specify a negative value, it's\n   * treated as an offset from the end of the Blob toward the beginning. For\n   * example, `-10` would be the 10th from last byte in the Blob. The default\n   * value is `0`. If you specify a value for start that is larger than the\n   * size of the source Blob, the returned Blob has size 0 and contains no\n   * data.\n   * @param {number} [end] - An index into the `Blob` indicating the first byte\n   *  that will *not* be included in the new `Blob` (i.e. the byte exactly at\n   * this index is not included). If you specify a negative value, it's treated\n   * as an offset from the end of the Blob toward the beginning. For example,\n   * `-10` would be the 10th from last byte in the `Blob`. The default value is\n   * size.\n   * @param {string} [type] - The content type to assign to the new Blob;\n   * this will be the value of its type property. The default value is an empty\n   * string.\n   * @returns {Blob}\n   */\n  slice(start = 0, end = this.size, type = \"\") {\n    const { size, _parts } = this\n    let offset = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n\n    let limit = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n    const span = Math.max(limit - offset, 0)\n    const blob = new Blob([], { type })\n\n    if (span === 0) {\n      return blob\n    }\n\n    let blobSize = 0\n    const blobParts = []\n    for (const part of _parts) {\n      const { byteLength } = part\n      if (offset > 0 && byteLength <= offset) {\n        offset -= byteLength\n        limit -= byteLength\n      } else {\n        const chunk = part.subarray(offset, Math.min(byteLength, limit))\n        blobParts.push(chunk)\n        blobSize += chunk.byteLength\n        // no longer need to take that into account\n        offset = 0\n\n        // don't add the overflow to new blobParts\n        if (blobSize >= span) {\n          break\n        }\n      }\n    }\n\n    blob._parts = blobParts\n    blob._size = blobSize\n\n    return blob\n  }\n\n  /**\n   * Returns a promise that resolves with an ArrayBuffer containing the entire\n   * contents of the Blob as binary data.\n   * @returns {Promise<ArrayBuffer>}\n   */\n  // eslint-disable-next-line require-await\n  async arrayBuffer() {\n    const buffer = new ArrayBuffer(this.size)\n    const bytes = new Uint8Array(buffer)\n    let offset = 0\n    for (const part of this._parts) {\n      bytes.set(part, offset)\n      offset += part.byteLength\n    }\n    return buffer\n  }\n\n  /**\n   * Returns a promise that resolves with a USVString containing the entire\n   * contents of the Blob interpreted as UTF-8 text.\n   * @returns {Promise<string>}\n   */\n  // eslint-disable-next-line require-await\n  async text() {\n    const decoder = new _package_js__WEBPACK_IMPORTED_MODULE_0__.TextDecoder()\n    let text = \"\"\n    for (const part of this._parts) {\n      text += decoder.decode(part)\n    }\n    return text\n  }\n\n  /**\n   * @returns {BlobStream}\n   */\n  stream() {\n    return new BlobStream(this._parts)\n  }\n\n  /**\n   * @returns {string}\n   */\n  toString() {\n    return \"[object Blob]\"\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"Blob\"\n  }\n}\n\n// Marking export as a DOM File object instead of custom class.\n/** @type {typeof globalThis.Blob} */\nconst Blob = WebBlob\n\n/**\n * Blob stream is a `ReadableStream` extension optimized to have minimal\n * overhead when consumed as `AsyncIterable<Uint8Array>`.\n * @extends {ReadableStream<Uint8Array>}\n * @implements {AsyncIterable<Uint8Array>}\n */\nclass BlobStream extends _package_js__WEBPACK_IMPORTED_MODULE_0__.ReadableStream {\n  /**\n   * @param {Uint8Array[]} chunks\n   */\n  constructor(chunks) {\n    // @ts-ignore\n    super(new BlobStreamController(chunks.values()), { type: \"bytes\" })\n    /** @private */\n    this._chunks = chunks\n  }\n\n  /**\n   * @param {Object} [_options]\n   * @property {boolean} [_options.preventCancel]\n   * @returns {AsyncIterator<Uint8Array>}\n   */\n  async *[Symbol.asyncIterator](_options) {\n    const reader = this.getReader()\n    yield* this._chunks\n    reader.releaseLock()\n  }\n}\n\nclass BlobStreamController {\n  /**\n   * @param {Iterator<Uint8Array>} chunks\n   */\n  constructor(chunks) {\n    this.chunks = chunks\n  }\n\n  /**\n   * @param {ReadableStreamDefaultController} controller\n   */\n  start(controller) {\n    this.work(controller)\n    this.isWorking = false\n    this.isCancelled = false\n  }\n  /**\n   *\n   * @param {ReadableStreamDefaultController} controller\n   */\n  async work(controller) {\n    const { chunks } = this\n\n    this.isWorking = true\n    while (!this.isCancelled && (controller.desiredSize || 0) > 0) {\n      let next = null\n      try {\n        next = chunks.next()\n      } catch (error) {\n        controller.error(error)\n        break\n      }\n\n      if (next) {\n        if (!next.done && !this.isCancelled) {\n          controller.enqueue(next.value)\n        } else {\n          controller.close()\n        }\n      }\n    }\n\n    this.isWorking = false\n  }\n\n  /**\n   * @param {ReadableStreamDefaultController} controller\n   */\n  pull(controller) {\n    if (!this.isWorking) {\n      this.work(controller)\n    }\n  }\n  cancel() {\n    this.isCancelled = true\n  }\n}\n\n/**\n * @param {string} [input]\n * @returns {string}\n */\nconst readType = (input = \"\") => {\n  const type = String(input).toLowerCase()\n  return /[^\\u0020-\\u007E]/.test(type) ? \"\" : type\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvYmxvYi9zcmMvYmxvYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF1RTs7QUFFdkU7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsYUFBYSxZQUFZO0FBQ3pCLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0EscUNBQXFDO0FBQ3JDLGVBQWUsY0FBYztBQUM3Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsb0RBQVc7QUFDckM7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxRQUFRO0FBQ1IsZ0JBQWdCLGlDQUFpQztBQUNqRDtBQUNBO0FBQ0EsUUFBUTtBQUNSLDBCQUEwQixvREFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlLG1CQUFtQjtBQUNsQyxlQUFlLG1CQUFtQjtBQUNsQyxnQkFBZ0IsbUJBQW1CO0FBQ25DLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxZQUFZLGVBQWU7QUFDM0I7O0FBRUE7QUFDQTtBQUNBLGdDQUFnQyxNQUFNOztBQUV0QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxhQUFhO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG9EQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsd0JBQXdCO0FBQ25DOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixnQkFBZ0I7QUFDaEI7QUFDQSx5QkFBeUIsdURBQWM7QUFDdkM7QUFDQSxhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGVBQWU7QUFDdEU7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGdCQUFnQixTQUFTO0FBQ3pCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLGlDQUFpQztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxpQ0FBaUM7QUFDOUM7QUFDQTtBQUNBLFlBQVksU0FBUzs7QUFFckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLGlDQUFpQztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFeUQiLCJzb3VyY2VzIjpbIi9ob21lL2FsdGNvaW4tZGFkZHkvRG93bmxvYWRzL293bmx5L25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9ibG9iL3NyYy9ibG9iLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlYWRhYmxlU3RyZWFtLCBUZXh0RW5jb2RlciwgVGV4dERlY29kZXIgfSBmcm9tIFwiLi9wYWNrYWdlLmpzXCJcblxuLyoqXG4gKiBAaW1wbGVtZW50cyB7Z2xvYmFsVGhpcy5CbG9ifVxuICovXG5jb25zdCBXZWJCbG9iID0gY2xhc3MgQmxvYiB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0Jsb2JQYXJ0W119IFtpbml0XVxuICAgKiBAcGFyYW0ge0Jsb2JQcm9wZXJ0eUJhZ30gW29wdGlvbnNdXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihpbml0ID0gW10sIG9wdGlvbnMgPSB7fSkge1xuICAgIC8qKiBAdHlwZSB7VWludDhBcnJheVtdfSAqL1xuICAgIGNvbnN0IHBhcnRzID0gW11cblxuICAgIGxldCBzaXplID0gMFxuICAgIGZvciAoY29uc3QgcGFydCBvZiBpbml0KSB7XG4gICAgICBpZiAodHlwZW9mIHBhcnQgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY29uc3QgYnl0ZXMgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUocGFydClcbiAgICAgICAgcGFydHMucHVzaChieXRlcylcbiAgICAgICAgc2l6ZSArPSBieXRlcy5ieXRlTGVuZ3RoXG4gICAgICB9IGVsc2UgaWYgKHBhcnQgaW5zdGFuY2VvZiBXZWJCbG9iKSB7XG4gICAgICAgIHNpemUgKz0gcGFydC5zaXplXG4gICAgICAgIC8vIEB0cy1pZ25vcmUgLSBgX3BhcnRzYCBpcyBtYXJrZWQgcHJpdmF0ZSBzbyBUUyB3aWxsIGNvbXBsYWluIGFib3V0XG4gICAgICAgIC8vIGFjY2Vzc2luZyBpdC5cbiAgICAgICAgcGFydHMucHVzaCguLi5wYXJ0Ll9wYXJ0cylcbiAgICAgIH0gZWxzZSBpZiAocGFydCBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgICAgIHBhcnRzLnB1c2gobmV3IFVpbnQ4QXJyYXkocGFydCkpXG4gICAgICAgIHNpemUgKz0gcGFydC5ieXRlTGVuZ3RoXG4gICAgICB9IGVsc2UgaWYgKHBhcnQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIHBhcnRzLnB1c2gocGFydClcbiAgICAgICAgc2l6ZSArPSBwYXJ0LmJ5dGVMZW5ndGhcbiAgICAgIH0gZWxzZSBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KHBhcnQpKSB7XG4gICAgICAgIGNvbnN0IHsgYnVmZmVyLCBieXRlT2Zmc2V0LCBieXRlTGVuZ3RoIH0gPSBwYXJ0XG4gICAgICAgIHBhcnRzLnB1c2gobmV3IFVpbnQ4QXJyYXkoYnVmZmVyLCBieXRlT2Zmc2V0LCBieXRlTGVuZ3RoKSlcbiAgICAgICAgc2l6ZSArPSBieXRlTGVuZ3RoXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBieXRlcyA9IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShTdHJpbmcocGFydCkpXG4gICAgICAgIHBhcnRzLnB1c2goYnl0ZXMpXG4gICAgICAgIHNpemUgKz0gYnl0ZXMuYnl0ZUxlbmd0aFxuICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIHRoaXMuX3NpemUgPSBzaXplXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgdGhpcy5fdHlwZSA9IHJlYWRUeXBlKG9wdGlvbnMudHlwZSlcbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICB0aGlzLl9wYXJ0cyA9IHBhcnRzXG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgICBfc2l6ZTogeyBlbnVtZXJhYmxlOiBmYWxzZSB9LFxuICAgICAgX3R5cGU6IHsgZW51bWVyYWJsZTogZmFsc2UgfSxcbiAgICAgIF9wYXJ0czogeyBlbnVtZXJhYmxlOiBmYWxzZSB9LFxuICAgIH0pXG4gIH1cblxuICAvKipcbiAgICogQSBzdHJpbmcgaW5kaWNhdGluZyB0aGUgTUlNRSB0eXBlIG9mIHRoZSBkYXRhIGNvbnRhaW5lZCBpbiB0aGUgQmxvYi5cbiAgICogSWYgdGhlIHR5cGUgaXMgdW5rbm93biwgdGhpcyBzdHJpbmcgaXMgZW1wdHkuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqL1xuICBnZXQgdHlwZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fdHlwZVxuICB9XG4gIC8qKlxuICAgKiBUaGUgc2l6ZSwgaW4gYnl0ZXMsIG9mIHRoZSBkYXRhIGNvbnRhaW5lZCBpbiB0aGUgQmxvYiBvYmplY3QuXG4gICAqIEB0eXBlIHtudW1iZXJ9XG4gICAqL1xuICBnZXQgc2l6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fc2l6ZVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBuZXcgQmxvYiBvYmplY3QgY29udGFpbmluZyB0aGUgZGF0YSBpbiB0aGUgc3BlY2lmaWVkIHJhbmdlIG9mXG4gICAqIGJ5dGVzIG9mIHRoZSBibG9iIG9uIHdoaWNoIGl0J3MgY2FsbGVkLlxuICAgKiBAcGFyYW0ge251bWJlcn0gW3N0YXJ0PTBdIC0gQW4gaW5kZXggaW50byB0aGUgQmxvYiBpbmRpY2F0aW5nIHRoZSBmaXJzdFxuICAgKiBieXRlIHRvIGluY2x1ZGUgaW4gdGhlIG5ldyBCbG9iLiBJZiB5b3Ugc3BlY2lmeSBhIG5lZ2F0aXZlIHZhbHVlLCBpdCdzXG4gICAqIHRyZWF0ZWQgYXMgYW4gb2Zmc2V0IGZyb20gdGhlIGVuZCBvZiB0aGUgQmxvYiB0b3dhcmQgdGhlIGJlZ2lubmluZy4gRm9yXG4gICAqIGV4YW1wbGUsIGAtMTBgIHdvdWxkIGJlIHRoZSAxMHRoIGZyb20gbGFzdCBieXRlIGluIHRoZSBCbG9iLiBUaGUgZGVmYXVsdFxuICAgKiB2YWx1ZSBpcyBgMGAuIElmIHlvdSBzcGVjaWZ5IGEgdmFsdWUgZm9yIHN0YXJ0IHRoYXQgaXMgbGFyZ2VyIHRoYW4gdGhlXG4gICAqIHNpemUgb2YgdGhlIHNvdXJjZSBCbG9iLCB0aGUgcmV0dXJuZWQgQmxvYiBoYXMgc2l6ZSAwIGFuZCBjb250YWlucyBub1xuICAgKiBkYXRhLlxuICAgKiBAcGFyYW0ge251bWJlcn0gW2VuZF0gLSBBbiBpbmRleCBpbnRvIHRoZSBgQmxvYmAgaW5kaWNhdGluZyB0aGUgZmlyc3QgYnl0ZVxuICAgKiAgdGhhdCB3aWxsICpub3QqIGJlIGluY2x1ZGVkIGluIHRoZSBuZXcgYEJsb2JgIChpLmUuIHRoZSBieXRlIGV4YWN0bHkgYXRcbiAgICogdGhpcyBpbmRleCBpcyBub3QgaW5jbHVkZWQpLiBJZiB5b3Ugc3BlY2lmeSBhIG5lZ2F0aXZlIHZhbHVlLCBpdCdzIHRyZWF0ZWRcbiAgICogYXMgYW4gb2Zmc2V0IGZyb20gdGhlIGVuZCBvZiB0aGUgQmxvYiB0b3dhcmQgdGhlIGJlZ2lubmluZy4gRm9yIGV4YW1wbGUsXG4gICAqIGAtMTBgIHdvdWxkIGJlIHRoZSAxMHRoIGZyb20gbGFzdCBieXRlIGluIHRoZSBgQmxvYmAuIFRoZSBkZWZhdWx0IHZhbHVlIGlzXG4gICAqIHNpemUuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBbdHlwZV0gLSBUaGUgY29udGVudCB0eXBlIHRvIGFzc2lnbiB0byB0aGUgbmV3IEJsb2I7XG4gICAqIHRoaXMgd2lsbCBiZSB0aGUgdmFsdWUgb2YgaXRzIHR5cGUgcHJvcGVydHkuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGFuIGVtcHR5XG4gICAqIHN0cmluZy5cbiAgICogQHJldHVybnMge0Jsb2J9XG4gICAqL1xuICBzbGljZShzdGFydCA9IDAsIGVuZCA9IHRoaXMuc2l6ZSwgdHlwZSA9IFwiXCIpIHtcbiAgICBjb25zdCB7IHNpemUsIF9wYXJ0cyB9ID0gdGhpc1xuICAgIGxldCBvZmZzZXQgPSBzdGFydCA8IDAgPyBNYXRoLm1heChzaXplICsgc3RhcnQsIDApIDogTWF0aC5taW4oc3RhcnQsIHNpemUpXG5cbiAgICBsZXQgbGltaXQgPSBlbmQgPCAwID8gTWF0aC5tYXgoc2l6ZSArIGVuZCwgMCkgOiBNYXRoLm1pbihlbmQsIHNpemUpXG4gICAgY29uc3Qgc3BhbiA9IE1hdGgubWF4KGxpbWl0IC0gb2Zmc2V0LCAwKVxuICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbXSwgeyB0eXBlIH0pXG5cbiAgICBpZiAoc3BhbiA9PT0gMCkge1xuICAgICAgcmV0dXJuIGJsb2JcbiAgICB9XG5cbiAgICBsZXQgYmxvYlNpemUgPSAwXG4gICAgY29uc3QgYmxvYlBhcnRzID0gW11cbiAgICBmb3IgKGNvbnN0IHBhcnQgb2YgX3BhcnRzKSB7XG4gICAgICBjb25zdCB7IGJ5dGVMZW5ndGggfSA9IHBhcnRcbiAgICAgIGlmIChvZmZzZXQgPiAwICYmIGJ5dGVMZW5ndGggPD0gb2Zmc2V0KSB7XG4gICAgICAgIG9mZnNldCAtPSBieXRlTGVuZ3RoXG4gICAgICAgIGxpbWl0IC09IGJ5dGVMZW5ndGhcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGNodW5rID0gcGFydC5zdWJhcnJheShvZmZzZXQsIE1hdGgubWluKGJ5dGVMZW5ndGgsIGxpbWl0KSlcbiAgICAgICAgYmxvYlBhcnRzLnB1c2goY2h1bmspXG4gICAgICAgIGJsb2JTaXplICs9IGNodW5rLmJ5dGVMZW5ndGhcbiAgICAgICAgLy8gbm8gbG9uZ2VyIG5lZWQgdG8gdGFrZSB0aGF0IGludG8gYWNjb3VudFxuICAgICAgICBvZmZzZXQgPSAwXG5cbiAgICAgICAgLy8gZG9uJ3QgYWRkIHRoZSBvdmVyZmxvdyB0byBuZXcgYmxvYlBhcnRzXG4gICAgICAgIGlmIChibG9iU2l6ZSA+PSBzcGFuKSB7XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGJsb2IuX3BhcnRzID0gYmxvYlBhcnRzXG4gICAgYmxvYi5fc2l6ZSA9IGJsb2JTaXplXG5cbiAgICByZXR1cm4gYmxvYlxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhbiBBcnJheUJ1ZmZlciBjb250YWluaW5nIHRoZSBlbnRpcmVcbiAgICogY29udGVudHMgb2YgdGhlIEJsb2IgYXMgYmluYXJ5IGRhdGEuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPEFycmF5QnVmZmVyPn1cbiAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZXF1aXJlLWF3YWl0XG4gIGFzeW5jIGFycmF5QnVmZmVyKCkge1xuICAgIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcih0aGlzLnNpemUpXG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShidWZmZXIpXG4gICAgbGV0IG9mZnNldCA9IDBcbiAgICBmb3IgKGNvbnN0IHBhcnQgb2YgdGhpcy5fcGFydHMpIHtcbiAgICAgIGJ5dGVzLnNldChwYXJ0LCBvZmZzZXQpXG4gICAgICBvZmZzZXQgKz0gcGFydC5ieXRlTGVuZ3RoXG4gICAgfVxuICAgIHJldHVybiBidWZmZXJcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggYSBVU1ZTdHJpbmcgY29udGFpbmluZyB0aGUgZW50aXJlXG4gICAqIGNvbnRlbnRzIG9mIHRoZSBCbG9iIGludGVycHJldGVkIGFzIFVURi04IHRleHQuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHN0cmluZz59XG4gICAqL1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVxdWlyZS1hd2FpdFxuICBhc3luYyB0ZXh0KCkge1xuICAgIGNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKVxuICAgIGxldCB0ZXh0ID0gXCJcIlxuICAgIGZvciAoY29uc3QgcGFydCBvZiB0aGlzLl9wYXJ0cykge1xuICAgICAgdGV4dCArPSBkZWNvZGVyLmRlY29kZShwYXJ0KVxuICAgIH1cbiAgICByZXR1cm4gdGV4dFxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtCbG9iU3RyZWFtfVxuICAgKi9cbiAgc3RyZWFtKCkge1xuICAgIHJldHVybiBuZXcgQmxvYlN0cmVhbSh0aGlzLl9wYXJ0cylcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgKi9cbiAgdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIFwiW29iamVjdCBCbG9iXVwiXG4gIH1cblxuICBnZXQgW1N5bWJvbC50b1N0cmluZ1RhZ10oKSB7XG4gICAgcmV0dXJuIFwiQmxvYlwiXG4gIH1cbn1cblxuLy8gTWFya2luZyBleHBvcnQgYXMgYSBET00gRmlsZSBvYmplY3QgaW5zdGVhZCBvZiBjdXN0b20gY2xhc3MuXG4vKiogQHR5cGUge3R5cGVvZiBnbG9iYWxUaGlzLkJsb2J9ICovXG5jb25zdCBCbG9iID0gV2ViQmxvYlxuXG4vKipcbiAqIEJsb2Igc3RyZWFtIGlzIGEgYFJlYWRhYmxlU3RyZWFtYCBleHRlbnNpb24gb3B0aW1pemVkIHRvIGhhdmUgbWluaW1hbFxuICogb3ZlcmhlYWQgd2hlbiBjb25zdW1lZCBhcyBgQXN5bmNJdGVyYWJsZTxVaW50OEFycmF5PmAuXG4gKiBAZXh0ZW5kcyB7UmVhZGFibGVTdHJlYW08VWludDhBcnJheT59XG4gKiBAaW1wbGVtZW50cyB7QXN5bmNJdGVyYWJsZTxVaW50OEFycmF5Pn1cbiAqL1xuY2xhc3MgQmxvYlN0cmVhbSBleHRlbmRzIFJlYWRhYmxlU3RyZWFtIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7VWludDhBcnJheVtdfSBjaHVua3NcbiAgICovXG4gIGNvbnN0cnVjdG9yKGNodW5rcykge1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBzdXBlcihuZXcgQmxvYlN0cmVhbUNvbnRyb2xsZXIoY2h1bmtzLnZhbHVlcygpKSwgeyB0eXBlOiBcImJ5dGVzXCIgfSlcbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICB0aGlzLl9jaHVua3MgPSBjaHVua3NcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gW19vcHRpb25zXVxuICAgKiBAcHJvcGVydHkge2Jvb2xlYW59IFtfb3B0aW9ucy5wcmV2ZW50Q2FuY2VsXVxuICAgKiBAcmV0dXJucyB7QXN5bmNJdGVyYXRvcjxVaW50OEFycmF5Pn1cbiAgICovXG4gIGFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKF9vcHRpb25zKSB7XG4gICAgY29uc3QgcmVhZGVyID0gdGhpcy5nZXRSZWFkZXIoKVxuICAgIHlpZWxkKiB0aGlzLl9jaHVua3NcbiAgICByZWFkZXIucmVsZWFzZUxvY2soKVxuICB9XG59XG5cbmNsYXNzIEJsb2JTdHJlYW1Db250cm9sbGVyIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7SXRlcmF0b3I8VWludDhBcnJheT59IGNodW5rc1xuICAgKi9cbiAgY29uc3RydWN0b3IoY2h1bmtzKSB7XG4gICAgdGhpcy5jaHVua3MgPSBjaHVua3NcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1JlYWRhYmxlU3RyZWFtRGVmYXVsdENvbnRyb2xsZXJ9IGNvbnRyb2xsZXJcbiAgICovXG4gIHN0YXJ0KGNvbnRyb2xsZXIpIHtcbiAgICB0aGlzLndvcmsoY29udHJvbGxlcilcbiAgICB0aGlzLmlzV29ya2luZyA9IGZhbHNlXG4gICAgdGhpcy5pc0NhbmNlbGxlZCA9IGZhbHNlXG4gIH1cbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSB7UmVhZGFibGVTdHJlYW1EZWZhdWx0Q29udHJvbGxlcn0gY29udHJvbGxlclxuICAgKi9cbiAgYXN5bmMgd29yayhjb250cm9sbGVyKSB7XG4gICAgY29uc3QgeyBjaHVua3MgfSA9IHRoaXNcblxuICAgIHRoaXMuaXNXb3JraW5nID0gdHJ1ZVxuICAgIHdoaWxlICghdGhpcy5pc0NhbmNlbGxlZCAmJiAoY29udHJvbGxlci5kZXNpcmVkU2l6ZSB8fCAwKSA+IDApIHtcbiAgICAgIGxldCBuZXh0ID0gbnVsbFxuICAgICAgdHJ5IHtcbiAgICAgICAgbmV4dCA9IGNodW5rcy5uZXh0KClcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnRyb2xsZXIuZXJyb3IoZXJyb3IpXG4gICAgICAgIGJyZWFrXG4gICAgICB9XG5cbiAgICAgIGlmIChuZXh0KSB7XG4gICAgICAgIGlmICghbmV4dC5kb25lICYmICF0aGlzLmlzQ2FuY2VsbGVkKSB7XG4gICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKG5leHQudmFsdWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmlzV29ya2luZyA9IGZhbHNlXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtSZWFkYWJsZVN0cmVhbURlZmF1bHRDb250cm9sbGVyfSBjb250cm9sbGVyXG4gICAqL1xuICBwdWxsKGNvbnRyb2xsZXIpIHtcbiAgICBpZiAoIXRoaXMuaXNXb3JraW5nKSB7XG4gICAgICB0aGlzLndvcmsoY29udHJvbGxlcilcbiAgICB9XG4gIH1cbiAgY2FuY2VsKCkge1xuICAgIHRoaXMuaXNDYW5jZWxsZWQgPSB0cnVlXG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gW2lucHV0XVxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuY29uc3QgcmVhZFR5cGUgPSAoaW5wdXQgPSBcIlwiKSA9PiB7XG4gIGNvbnN0IHR5cGUgPSBTdHJpbmcoaW5wdXQpLnRvTG93ZXJDYXNlKClcbiAgcmV0dXJuIC9bXlxcdTAwMjAtXFx1MDA3RV0vLnRlc3QodHlwZSkgPyBcIlwiIDogdHlwZVxufVxuXG5leHBvcnQgeyBCbG9iLCBSZWFkYWJsZVN0cmVhbSwgVGV4dEVuY29kZXIsIFRleHREZWNvZGVyIH1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/blob/src/blob.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/blob/src/lib.node.js":
/*!****************************************************!*\
  !*** ./node_modules/@web-std/blob/src/lib.node.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* binding */ Blob),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.ReadableStream),\n/* harmony export */   TextDecoder: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.TextDecoder),\n/* harmony export */   TextEncoder: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.TextEncoder)\n/* harmony export */ });\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(rsc)/./node_modules/@web-std/blob/src/package.js\");\n/* harmony import */ var _blob_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blob.js */ \"(rsc)/./node_modules/@web-std/blob/src/blob.js\");\n\n// import { Blob as NodeBlob } from \"./blob.node.js\"\n;\n\n/** @type {typeof globalThis.Blob} */\n// Our first choise is to use global `Blob` because it may be available e.g. in\n// electron renderrer process. If not available fall back to node native\n// implementation, if also not available use our implementation.\nconst Blob =\n  globalThis.Blob || \n  // Disable node native blob until impractical perf issue is fixed\n  // @see https://github.com/nodejs/node/issues/42108\n  // NodeBlob ||\n  _blob_js__WEBPACK_IMPORTED_MODULE_1__.Blob\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvYmxvYi9zcmMvbGliLm5vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVFO0FBQ3ZFLFlBQVksbUJBQW1CO0FBQy9CLENBQTJDOztBQUUzQyxXQUFXLHdCQUF3QjtBQUNuQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSwwQ0FBTyIsInNvdXJjZXMiOlsiL2hvbWUvYWx0Y29pbi1kYWRkeS9Eb3dubG9hZHMvb3dubHkvbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2Jsb2Ivc3JjL2xpYi5ub2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IFRleHRFbmNvZGVyLCBUZXh0RGVjb2RlciwgUmVhZGFibGVTdHJlYW0gfSBmcm9tIFwiLi9wYWNrYWdlLmpzXCJcbi8vIGltcG9ydCB7IEJsb2IgYXMgTm9kZUJsb2IgfSBmcm9tIFwiLi9ibG9iLm5vZGUuanNcIlxuaW1wb3J0IHsgQmxvYiBhcyBXZWJCbG9iIH0gZnJvbSBcIi4vYmxvYi5qc1wiXG5cbi8qKiBAdHlwZSB7dHlwZW9mIGdsb2JhbFRoaXMuQmxvYn0gKi9cbi8vIE91ciBmaXJzdCBjaG9pc2UgaXMgdG8gdXNlIGdsb2JhbCBgQmxvYmAgYmVjYXVzZSBpdCBtYXkgYmUgYXZhaWxhYmxlIGUuZy4gaW5cbi8vIGVsZWN0cm9uIHJlbmRlcnJlciBwcm9jZXNzLiBJZiBub3QgYXZhaWxhYmxlIGZhbGwgYmFjayB0byBub2RlIG5hdGl2ZVxuLy8gaW1wbGVtZW50YXRpb24sIGlmIGFsc28gbm90IGF2YWlsYWJsZSB1c2Ugb3VyIGltcGxlbWVudGF0aW9uLlxuZXhwb3J0IGNvbnN0IEJsb2IgPVxuICBnbG9iYWxUaGlzLkJsb2IgfHwgXG4gIC8vIERpc2FibGUgbm9kZSBuYXRpdmUgYmxvYiB1bnRpbCBpbXByYWN0aWNhbCBwZXJmIGlzc3VlIGlzIGZpeGVkXG4gIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2lzc3Vlcy80MjEwOFxuICAvLyBOb2RlQmxvYiB8fFxuICBXZWJCbG9iXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/blob/src/lib.node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/blob/src/package.js":
/*!***************************************************!*\
  !*** ./node_modules/@web-std/blob/src/package.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _web_std_stream__WEBPACK_IMPORTED_MODULE_1__.ReadableStream),\n/* harmony export */   TextDecoder: () => (/* reexport safe */ web_encoding__WEBPACK_IMPORTED_MODULE_0__.TextDecoder),\n/* harmony export */   TextEncoder: () => (/* reexport safe */ web_encoding__WEBPACK_IMPORTED_MODULE_0__.TextEncoder)\n/* harmony export */ });\n/* harmony import */ var web_encoding__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web-encoding */ \"(rsc)/./node_modules/web-encoding/src/lib.mjs\");\n/* harmony import */ var _web_std_stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web-std/stream */ \"(rsc)/./node_modules/@web-std/stream/src/lib.node.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvYmxvYi9zcmMvcGFja2FnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF1RDtBQUNQIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvYmxvYi9zcmMvcGFja2FnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBUZXh0RW5jb2RlciwgVGV4dERlY29kZXIgfSBmcm9tIFwid2ViLWVuY29kaW5nXCJcbmV4cG9ydCB7IFJlYWRhYmxlU3RyZWFtIH0gZnJvbSBcIkB3ZWItc3RkL3N0cmVhbVwiXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/blob/src/package.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/fetch/src/body.js":
/*!*************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/body.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   \"default\": () => (/* binding */ Body),\n/* harmony export */   extractContentType: () => (/* binding */ extractContentType),\n/* harmony export */   fromAsyncIterable: () => (/* binding */ fromAsyncIterable),\n/* harmony export */   fromStream: () => (/* binding */ fromStream),\n/* harmony export */   getTotalBytes: () => (/* binding */ getTotalBytes),\n/* harmony export */   streamIterator: () => (/* binding */ streamIterator),\n/* harmony export */   writeToStream: () => (/* binding */ writeToStream)\n/* harmony export */ });\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./package.js */ \"(rsc)/./node_modules/@web-std/blob/src/lib.node.js\");\n/* harmony import */ var _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./errors/fetch-error.js */ \"(rsc)/./node_modules/@web-std/fetch/src/errors/fetch-error.js\");\n/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./errors/base.js */ \"(rsc)/./node_modules/@web-std/fetch/src/errors/base.js\");\n/* harmony import */ var _utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/form-data.js */ \"(rsc)/./node_modules/@web-std/fetch/src/utils/form-data.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/is.js */ \"(rsc)/./node_modules/@web-std/fetch/src/utils/is.js\");\n/* harmony import */ var _utils_utf8_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/utf8.js */ \"(rsc)/./node_modules/@web-std/fetch/src/utils/utf8.js\");\n// @ts-check\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\n\n\n\n\n\n\n\n\n\n\nconst {readableHighWaterMark} = new stream__WEBPACK_IMPORTED_MODULE_0__.Readable();\n\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n * @implements {globalThis.Body}\n */\n\nclass Body {\n\t/**\n\t * @param {BodyInit|Stream|null} body\n\t * @param {{size?:number}} options\n\t */\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tconst state = {\n\t\t\t/** @type {null|ReadableStream<Uint8Array>} */\n\t\t\tbody: null,\n\t\t\t/** @type {string|null} */\n\t\t\ttype: null,\n\t\t\t/** @type {number|null} */\n\t\t\tsize: null,\n\t\t\t/** @type {null|string} */\n\t\t\tboundary: null,\n\t\t\tdisturbed: false,\n\t\t\t/** @type {null|Error} */\n\t\t\terror: null\n\t\t};\n\t\t/** @private */\n\t\tthis[INTERNALS] = state;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tstate.body = null;\n\t\t\tstate.size = 0;\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isURLSearchParameters)(body)) {\n\t\t// Body is a URLSearchParams\n\t\t\tconst bytes = _utils_utf8_js__WEBPACK_IMPORTED_MODULE_3__.encode(body.toString());\n\t\t\tstate.body = fromBytes(bytes);\n\t\t\tstate.size = bytes.byteLength;\n\t\t\tstate.type = 'application/x-www-form-urlencoded;charset=UTF-8';\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(body)) {\n\t\t\t// Body is blob\n\t\t\tstate.size = body.size;\n\t\t\tstate.type = body.type || null;\n\t\t\tstate.body = body.stream();\n\t\t} else if (body instanceof Uint8Array) {\n\t\t\t// Body is Buffer\n\t\t\tstate.body = fromBytes(body);\n\t\t\tstate.size = body.byteLength;\n\t\t} else if (util__WEBPACK_IMPORTED_MODULE_1__.types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tconst bytes = new Uint8Array(body);\n\t\t\tstate.body = fromBytes(bytes);\n\t\t\tstate.size = bytes.byteLength;\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tconst bytes = new Uint8Array(body.buffer, body.byteOffset, body.byteLength);\n\t\t\tstate.body = fromBytes(bytes);\n\t\t\tstate.size = bytes.byteLength;\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isReadableStream)(body)) {\n\t\t\t// Body is stream\n\t\t\tstate.body = body;\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isFormData)(body)) {\n\t\t\t// Body is an instance of formdata-node\n\t\t\tconst boundary = `NodeFetchFormDataBoundary${(0,_utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__.getBoundary)()}`;\n\t\t\tstate.type = `multipart/form-data; boundary=${boundary}`;\n\t\t\tstate.size = (0,_utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__.getFormDataLength)(body, boundary);\n\t\t\tstate.body = fromAsyncIterable((0,_utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__.formDataIterator)(body, boundary));\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isMultipartFormDataStream)(body)) {\n\t\t\tstate.type = `multipart/form-data; boundary=${body.getBoundary()}`;\n\t\t\tstate.size = body.hasKnownLength() ? body.getLengthSync() : null;\n\t\t\tstate.body = fromStream(body);\n\t\t} else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {\n\t\t\tstate.body = fromStream(body);\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tconst bytes = _utils_utf8_js__WEBPACK_IMPORTED_MODULE_3__.encode(String(body));\n\t\t\tstate.type = 'text/plain;charset=UTF-8';\n\t\t\tstate.size = bytes.byteLength;\n\t\t\tstate.body = fromBytes(bytes);\n\t\t}\n\n\t\tthis.size = size;\n\n\t\t// if (body instanceof Stream) {\n\t\t// \tbody.on('error', err => {\n\t\t// \t\tconst error = err instanceof FetchBaseError ?\n\t\t// \t\t\terr :\n\t\t// \t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${err.message}`, 'system', err);\n\t\t// \t\tthis[INTERNALS].error = error;\n\t\t// \t});\n\t\t// }\n\t}\n\n\t/** @type {Headers} */\n\t/* c8 ignore next 3 */\n\tget headers() {\n\t\tthrow new TypeError(`'get headers' called on an object that does not implements interface.`)\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].type) || '';\n\t\tconst buf = await consumeBody(this);\n\n\t\treturn new _package_js__WEBPACK_IMPORTED_MODULE_5__.Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\treturn JSON.parse(await this.text());\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn _utils_utf8_js__WEBPACK_IMPORTED_MODULE_3__.decode(buffer);\n\t}\n\n\t/**\n\t * @returns {Promise<FormData>}\n\t */\n\n\tasync formData() {\n\t\treturn (0,_utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__.toFormData)(this)\n\t}\n}\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tformData: {enumerable: true}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @param {Body & {url?:string}} data\n * @return {Promise<Uint8Array>}\n */\nasync function consumeBody(data) {\n\tconst state = data[INTERNALS];\n\tif (state.disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tstate.disturbed = true;\n\n\tif (state.error) {\n\t\tthrow state.error;\n\t}\n\n\tconst {body} = state;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn new Uint8Array(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\t/** @type {[Uint8Array|null, Uint8Array[], number]} */\n\tconst [buffer, chunks, limit] = data.size > 0 ?\n\t\t[new Uint8Array(data.size), [], data.size] :\n\t\t[null, [], Infinity];\n\tlet offset = 0;\n\n\tconst source = streamIterator(body);\n\ttry {\n\t\tfor await (const chunk of source) {\n\t\t\tconst bytes = chunk instanceof Uint8Array ?\n\t\t\t\tchunk :\n\t\t\t\tBuffer.from(chunk);\n\n\t\t\tif (offset + bytes.byteLength > limit) {\n\t\t\t\tconst error = new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_6__.FetchError(`content size at ${data.url} over limit: ${limit}`, 'max-size');\n\t\t\t\tsource.throw(error);\n\t\t\t\tthrow error;\n\t\t\t} else if (buffer) {\n\t\t\t\tbuffer.set(bytes, offset);\n\t\t\t} else {\n\t\t\t\tchunks.push(bytes);\n\t\t\t}\n\n\t\t\toffset += bytes.byteLength;\n\t\t}\n\n\t\tif (buffer) {\n\t\t\tif (offset < buffer.byteLength) {\n\t\t\t\tthrow new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_6__.FetchError(`Premature close of server response while trying to fetch ${data.url}`, 'premature-close');\n\t\t\t} else {\n\t\t\t\treturn buffer;\n\t\t\t}\n\t\t} else {\n\t\t\treturn writeBytes(new Uint8Array(offset), chunks);\n\t\t}\n\t} catch (error) {\n\t\tif (error instanceof _errors_base_js__WEBPACK_IMPORTED_MODULE_7__.FetchBaseError) {\n\t\t\tthrow error;\n\t\t// @ts-expect-error - we know it will have a name\n\t\t} else if (error && error.name === 'AbortError') {\n\t\t\tthrow error;\n\t\t} else {\n\t\t\tconst e = /** @type {import('./errors/fetch-error').SystemError} */(error)\n\t\t\t// Other errors, such as incorrect content-encoding\n\t\t\tthrow new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_6__.FetchError(`Invalid response body while trying to fetch ${data.url}: ${e.message}`, 'system', e);\n\t\t}\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param {Body} instance       Response or Request instance\n * @return {ReadableStream<Uint8Array> | null}\n */\nconst clone = instance => {\n\tconst {body} = instance;\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\tif (!body) {\n\t\treturn null;\n\t}\n\n\tconst [left, right] = body.tee();\n\tinstance[INTERNALS].body = left;\n\treturn right;\n};\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {Body} source Any options.body input\n * @returns {string | null}\n */\nconst extractContentType = source => source[INTERNALS].type;\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {Body} source - Body object from the Body instance.\n * @returns {number | null}\n */\nconst getTotalBytes = source => source[INTERNALS].size;\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest - The stream to write to.\n * @param {Body} source - Body object from the Body instance.\n * @returns {void}\n */\nconst writeToStream = (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\tstream__WEBPACK_IMPORTED_MODULE_0__.Readable.from(streamIterator(body)).pipe(dest);\n\t}\n};\n\n/**\n * @template T\n * @implements {AsyncGenerator<T, void, void>}\n */\nclass StreamIterableIterator {\n\t/**\n\t * @param {ReadableStream<T>} stream\n\t */\n\tconstructor(stream) {\n\t\tthis.stream = stream;\n\t\tthis.reader = null;\n\t}\n\n\t/**\n\t * @returns {AsyncGenerator<T, void, void>}\n\t */\n\t[Symbol.asyncIterator]() {\n\t\treturn this;\n\t}\n\n\tgetReader() {\n\t\tif (this.reader) {\n\t\t\treturn this.reader;\n\t\t}\n\n\t\tconst reader = this.stream.getReader();\n\t\tthis.reader = reader;\n\t\treturn reader;\n\t}\n\n\t/**\n\t * @returns {Promise<IteratorResult<T, void>>}\n\t */\n\tnext() {\n\t\treturn /** @type {Promise<IteratorResult<T, void>>} */ (this.getReader().read());\n\t}\n\n\t/**\n\t * @returns {Promise<IteratorResult<T, void>>}\n\t */\n\tasync return() {\n\t\tif (this.reader) {\n\t\t\tawait this.reader.cancel();\n\t\t}\n\n\t\treturn {done: true, value: undefined};\n\t}\n\n\t/**\n\t * \n\t * @param {any} error \n\t * @returns {Promise<IteratorResult<T, void>>}\n\t */\n\tasync throw(error) {\n\t\tawait this.getReader().cancel(error);\n\t\treturn {done: true, value: undefined};\n\t}\n}\n\n/**\n * @template T\n * @param {ReadableStream<T>} stream\n */\nconst streamIterator = stream => new StreamIterableIterator(stream);\n\n/**\n * @param {Uint8Array} buffer\n * @param {Uint8Array[]} chunks\n */\nconst writeBytes = (buffer, chunks) => {\n\tlet offset = 0;\n\tfor (const chunk of chunks) {\n\t\tbuffer.set(chunk, offset);\n\t\toffset += chunk.byteLength;\n\t}\n\n\treturn buffer;\n};\n\n/**\n * @param {Uint8Array} bytes\n * @returns {ReadableStream<Uint8Array>}\n */\n// @ts-ignore\nconst fromBytes = bytes => new _package_js__WEBPACK_IMPORTED_MODULE_5__.ReadableStream({\n\tstart(controller) {\n\t\tcontroller.enqueue(bytes);\n\t\tcontroller.close();\n\t}\n});\n\n/**\n * @param {AsyncIterable<Uint8Array>} content\n * @returns {ReadableStream<Uint8Array>}\n */\nconst fromAsyncIterable = content =>\n\t// @ts-ignore\n\tnew _package_js__WEBPACK_IMPORTED_MODULE_5__.ReadableStream(new AsyncIterablePump(content));\n\n/**\n * @implements {UnderlyingSource<Uint8Array>}\n */\nclass AsyncIterablePump {\n\t/**\n\t * @param {AsyncIterable<Uint8Array>} source\n\t */\n\tconstructor(source) {\n\t\tthis.source = source[Symbol.asyncIterator]();\n\t}\n\n\t/**\n\t * @param {ReadableStreamController<Uint8Array>} controller\n\t */\n\tasync pull(controller) {\n\t\ttry {\n\t\t\twhile (controller.desiredSize || 0 > 0) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst next = await this.source.next();\n\t\t\t\tif (next.done) {\n\t\t\t\t\tcontroller.close();\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tcontroller.enqueue(next.value);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcontroller.error(error);\n\t\t}\n\t}\n\n\t/**\n\t * @param {any} [reason]\n\t */\n\tcancel(reason) {\n\t\tif (reason) {\n\t\t\tif (typeof this.source.throw === 'function') {\n\t\t\t\tthis.source.throw(reason);\n\t\t\t} else if (typeof this.source.return === 'function') {\n\t\t\t\tthis.source.return();\n\t\t\t}\n\t\t} else if (typeof this.source.return === 'function') {\n\t\t\tthis.source.return();\n\t\t}\n\t}\n}\n\n/**\n * @param {Stream & {readableHighWaterMark?:number}} source\n * @returns {ReadableStream<Uint8Array>}\n */\nconst fromStream = source => {\n\tconst pump = new StreamPump(source);\n\tconst stream = new _package_js__WEBPACK_IMPORTED_MODULE_5__.ReadableStream(pump, pump);\n\treturn stream;\n};\n\n/**\n * @implements {UnderlyingSource<Uint8Array>}\n * @implements {QueuingStrategy<Uint8Array>}\n */\nclass StreamPump {\n\t/**\n\t * @param {Stream & {\n\t * \treadableHighWaterMark?: number\n\t * \treadable?:boolean,\n\t * \tresume?: () => void,\n\t * \tpause?: () => void\n\t * \tdestroy?: (error?:Error) => void\n\t * }} stream\n\t */\n\tconstructor(stream) {\n\t\tthis.highWaterMark = stream.readableHighWaterMark || readableHighWaterMark;\n\t\tthis.accumalatedSize = 0;\n\t\tthis.stream = stream;\n\t\tthis.enqueue = this.enqueue.bind(this);\n\t\tthis.error = this.error.bind(this);\n\t\tthis.close = this.close.bind(this);\n\t}\n\n\t/**\n\t * @param {Uint8Array} [chunk]\n\t */\n\tsize(chunk) {\n\t\treturn chunk?.byteLength || 0;\n\t}\n\n\t/**\n\t * @param {ReadableStreamController<Uint8Array>} controller\n\t */\n\tstart(controller) {\n\t\tthis.controller = controller;\n\t\tthis.stream.on('data', this.enqueue);\n\t\tthis.stream.once('error', this.error);\n\t\tthis.stream.once('end', this.close);\n\t\tthis.stream.once('close', this.close);\n\t}\n\n\tpull() {\n\t\tthis.resume();\n\t}\n\n\t/**\n\t * @param {any} [reason]\n\t */\n\tcancel(reason) {\n\t\tif (this.stream.destroy) {\n\t\t\tthis.stream.destroy(reason);\n\t\t}\n\n\t\tthis.stream.off('data', this.enqueue);\n\t\tthis.stream.off('error', this.error);\n\t\tthis.stream.off('end', this.close);\n\t\tthis.stream.off('close', this.close);\n\t}\n\n\t/**\n\t * @param {Uint8Array|string} chunk\n\t */\n\tenqueue(chunk) {\n\t\tif (this.controller) {\n\t\t\ttry {\n\t\t\t\tconst bytes = chunk instanceof Uint8Array ?\n\t\t\t\t\tchunk :\n\t\t\t\t\tBuffer.from(chunk);\n\n\t\t\t\tconst available = (this.controller.desiredSize || 0) - bytes.byteLength;\n\t\t\t\tthis.controller.enqueue(bytes);\n\t\t\t\tif (available <= 0) {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tthis.controller.error(new Error('Could not create Buffer, chunk must be of type string or an instance of Buffer, ArrayBuffer, or Array or an Array-like Object'));\n\t\t\t\tthis.cancel();\n\t\t\t}\n\t\t}\n\t}\n\n\tpause() {\n\t\tif (this.stream.pause) {\n\t\t\tthis.stream.pause();\n\t\t}\n\t}\n\n\tresume() {\n\t\tif (this.stream.readable && this.stream.resume) {\n\t\t\tthis.stream.resume();\n\t\t}\n\t}\n\n\tclose() {\n\t\tif (this.controller) {\n\t\t\tthis.controller.close();\n\t\t\tdelete this.controller;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Error} error \n\t */\n\terror(error) {\n\t\tif (this.controller) {\n\t\t\tthis.controller.error(error);\n\t\t\tdelete this.controller;\n\t\t}\n\t}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2JvZHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEI7QUFDRDs7QUFFdUI7O0FBRUM7QUFDSDtBQUNrRDtBQUNtQjtBQUM3RTtBQUN4QyxPQUFPLHVCQUF1QixNQUFNLDRDQUFlOztBQUVuRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjs7QUFFZTtBQUNmO0FBQ0EsWUFBWSxzQkFBc0I7QUFDbEMsYUFBYSxlQUFlO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLEdBQUcsSUFBSTtBQUNQO0FBQ0EsY0FBYyxpQ0FBaUM7QUFDL0M7QUFDQSxjQUFjLGFBQWE7QUFDM0I7QUFDQSxjQUFjLGFBQWE7QUFDM0I7QUFDQSxjQUFjLGFBQWE7QUFDM0I7QUFDQTtBQUNBLGNBQWMsWUFBWTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksU0FBUyxtRUFBcUI7QUFDbEM7QUFDQSxpQkFBaUIsa0RBQVc7QUFDNUI7QUFDQTtBQUNBLG1EQUFtRDtBQUNuRCxJQUFJLFNBQVMsb0RBQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSSxTQUFTLHVDQUFLO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxTQUFTLDhEQUFnQjtBQUM3QjtBQUNBO0FBQ0EsSUFBSSxTQUFTLHdEQUFVO0FBQ3ZCO0FBQ0EsZ0RBQWdELGdFQUFXLEdBQUc7QUFDOUQsc0NBQXNDLFdBQVcsU0FBUztBQUMxRCxnQkFBZ0Isc0VBQWlCO0FBQ2pDLGtDQUFrQyxxRUFBZ0I7QUFDbEQsSUFBSSxTQUFTLHVFQUF5QjtBQUN0QyxzQ0FBc0MsV0FBVyxtQkFBbUI7QUFDcEU7QUFDQTtBQUNBLElBQUkseUJBQXlCLG1DQUFNO0FBQ25DO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxpQkFBaUIsa0RBQVc7QUFDNUIsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRSxTQUFTLElBQUksWUFBWTtBQUMvRjtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBLFlBQVksU0FBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUyxnQ0FBZ0M7QUFDekM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsNkNBQUk7QUFDakI7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsa0RBQVc7QUFDcEI7O0FBRUE7QUFDQSxjQUFjO0FBQ2Q7O0FBRUE7QUFDQSxTQUFTLCtEQUFVO0FBQ25CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFFBQVEsaUJBQWlCO0FBQ3pCLFlBQVksaUJBQWlCO0FBQzdCLGVBQWUsaUJBQWlCO0FBQ2hDLFFBQVEsaUJBQWlCO0FBQ3pCLFFBQVEsaUJBQWlCO0FBQ3pCLFFBQVEsaUJBQWlCO0FBQ3pCLFlBQVk7QUFDWixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVEsY0FBYztBQUNqQyxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsU0FBUztBQUN6RDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxNQUFNOztBQUVkO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZLHlDQUF5QztBQUNyRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxzQkFBc0IsOERBQVUsb0JBQW9CLFVBQVUsY0FBYyxNQUFNO0FBQ2xGO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxjQUFjLDhEQUFVLDZEQUE2RCxTQUFTO0FBQzlGLEtBQUs7QUFDTDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsdUJBQXVCLDJEQUFjO0FBQ3JDO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0osd0JBQXdCLDRDQUE0QztBQUNwRTtBQUNBLGFBQWEsOERBQVUsZ0RBQWdELFNBQVMsSUFBSSxVQUFVO0FBQzlGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsWUFBWTtBQUNaO0FBQ087QUFDUCxRQUFRLE1BQU07O0FBRWQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLGFBQWE7QUFDYjtBQUNPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQixhQUFhO0FBQ2I7QUFDTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QixXQUFXLE1BQU07QUFDakIsYUFBYTtBQUNiO0FBQ08sOEJBQThCLEtBQUs7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILEVBQUUsNENBQWU7QUFDakI7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLFlBQVksbUJBQW1CO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLG9CQUFvQixrQ0FBa0M7QUFDdEQ7O0FBRUE7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxVQUFVO0FBQ1Y7O0FBRUE7QUFDQTtBQUNBLFlBQVksS0FBSztBQUNqQixjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsbUJBQW1CO0FBQzlCO0FBQ087O0FBRVA7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxjQUFjO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsYUFBYTtBQUNiO0FBQ0E7QUFDQSwrQkFBK0IsdURBQWM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0EsV0FBVywyQkFBMkI7QUFDdEMsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBLEtBQUssdURBQWM7O0FBRW5CO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkJBQTJCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWSxzQ0FBc0M7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxZQUFZLEtBQUs7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxVQUFVLGdDQUFnQztBQUNyRCxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0Esb0JBQW9CLHVEQUFjO0FBQ2xDO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0I7QUFDaEIsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVksWUFBWTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVksc0NBQXNDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWSxLQUFLO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVksbUJBQW1CO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL2FsdGNvaW4tZGFkZHkvRG93bmxvYWRzL293bmx5L25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9mZXRjaC9zcmMvYm9keS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtY2hlY2tcbi8qKlxuICogQm9keS5qc1xuICpcbiAqIEJvZHkgaW50ZXJmYWNlIHByb3ZpZGVzIGNvbW1vbiBtZXRob2RzIGZvciBSZXF1ZXN0IGFuZCBSZXNwb25zZVxuICovXG5cbmltcG9ydCBTdHJlYW0gZnJvbSAnc3RyZWFtJztcbmltcG9ydCB7dHlwZXN9IGZyb20gJ3V0aWwnO1xuXG5pbXBvcnQge0Jsb2IsIFJlYWRhYmxlU3RyZWFtfSBmcm9tICcuL3BhY2thZ2UuanMnO1xuXG5pbXBvcnQge0ZldGNoRXJyb3J9IGZyb20gJy4vZXJyb3JzL2ZldGNoLWVycm9yLmpzJztcbmltcG9ydCB7RmV0Y2hCYXNlRXJyb3J9IGZyb20gJy4vZXJyb3JzL2Jhc2UuanMnO1xuaW1wb3J0IHtmb3JtRGF0YUl0ZXJhdG9yLCBnZXRCb3VuZGFyeSwgZ2V0Rm9ybURhdGFMZW5ndGgsIHRvRm9ybURhdGF9IGZyb20gJy4vdXRpbHMvZm9ybS1kYXRhLmpzJztcbmltcG9ydCB7aXNCbG9iLCBpc1VSTFNlYXJjaFBhcmFtZXRlcnMsIGlzRm9ybURhdGEsIGlzTXVsdGlwYXJ0Rm9ybURhdGFTdHJlYW0sIGlzUmVhZGFibGVTdHJlYW19IGZyb20gJy4vdXRpbHMvaXMuanMnO1xuaW1wb3J0ICogYXMgdXRmOCBmcm9tICcuL3V0aWxzL3V0ZjguanMnO1xuY29uc3Qge3JlYWRhYmxlSGlnaFdhdGVyTWFya30gPSBuZXcgU3RyZWFtLlJlYWRhYmxlKCk7XG5cbmNvbnN0IElOVEVSTkFMUyA9IFN5bWJvbCgnQm9keSBpbnRlcm5hbHMnKTtcblxuLyoqXG4gKiBCb2R5IG1peGluXG4gKlxuICogUmVmOiBodHRwczovL2ZldGNoLnNwZWMud2hhdHdnLm9yZy8jYm9keVxuICogQGltcGxlbWVudHMge2dsb2JhbFRoaXMuQm9keX1cbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCb2R5IHtcblx0LyoqXG5cdCAqIEBwYXJhbSB7Qm9keUluaXR8U3RyZWFtfG51bGx9IGJvZHlcblx0ICogQHBhcmFtIHt7c2l6ZT86bnVtYmVyfX0gb3B0aW9uc1xuXHQgKi9cblx0Y29uc3RydWN0b3IoYm9keSwge1xuXHRcdHNpemUgPSAwXG5cdH0gPSB7fSkge1xuXHRcdGNvbnN0IHN0YXRlID0ge1xuXHRcdFx0LyoqIEB0eXBlIHtudWxsfFJlYWRhYmxlU3RyZWFtPFVpbnQ4QXJyYXk+fSAqL1xuXHRcdFx0Ym9keTogbnVsbCxcblx0XHRcdC8qKiBAdHlwZSB7c3RyaW5nfG51bGx9ICovXG5cdFx0XHR0eXBlOiBudWxsLFxuXHRcdFx0LyoqIEB0eXBlIHtudW1iZXJ8bnVsbH0gKi9cblx0XHRcdHNpemU6IG51bGwsXG5cdFx0XHQvKiogQHR5cGUge251bGx8c3RyaW5nfSAqL1xuXHRcdFx0Ym91bmRhcnk6IG51bGwsXG5cdFx0XHRkaXN0dXJiZWQ6IGZhbHNlLFxuXHRcdFx0LyoqIEB0eXBlIHtudWxsfEVycm9yfSAqL1xuXHRcdFx0ZXJyb3I6IG51bGxcblx0XHR9O1xuXHRcdC8qKiBAcHJpdmF0ZSAqL1xuXHRcdHRoaXNbSU5URVJOQUxTXSA9IHN0YXRlO1xuXG5cdFx0aWYgKGJvZHkgPT09IG51bGwpIHtcblx0XHRcdC8vIEJvZHkgaXMgdW5kZWZpbmVkIG9yIG51bGxcblx0XHRcdHN0YXRlLmJvZHkgPSBudWxsO1xuXHRcdFx0c3RhdGUuc2l6ZSA9IDA7XG5cdFx0fSBlbHNlIGlmIChpc1VSTFNlYXJjaFBhcmFtZXRlcnMoYm9keSkpIHtcblx0XHQvLyBCb2R5IGlzIGEgVVJMU2VhcmNoUGFyYW1zXG5cdFx0XHRjb25zdCBieXRlcyA9IHV0ZjguZW5jb2RlKGJvZHkudG9TdHJpbmcoKSk7XG5cdFx0XHRzdGF0ZS5ib2R5ID0gZnJvbUJ5dGVzKGJ5dGVzKTtcblx0XHRcdHN0YXRlLnNpemUgPSBieXRlcy5ieXRlTGVuZ3RoO1xuXHRcdFx0c3RhdGUudHlwZSA9ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD1VVEYtOCc7XG5cdFx0fSBlbHNlIGlmIChpc0Jsb2IoYm9keSkpIHtcblx0XHRcdC8vIEJvZHkgaXMgYmxvYlxuXHRcdFx0c3RhdGUuc2l6ZSA9IGJvZHkuc2l6ZTtcblx0XHRcdHN0YXRlLnR5cGUgPSBib2R5LnR5cGUgfHwgbnVsbDtcblx0XHRcdHN0YXRlLmJvZHkgPSBib2R5LnN0cmVhbSgpO1xuXHRcdH0gZWxzZSBpZiAoYm9keSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcblx0XHRcdC8vIEJvZHkgaXMgQnVmZmVyXG5cdFx0XHRzdGF0ZS5ib2R5ID0gZnJvbUJ5dGVzKGJvZHkpO1xuXHRcdFx0c3RhdGUuc2l6ZSA9IGJvZHkuYnl0ZUxlbmd0aDtcblx0XHR9IGVsc2UgaWYgKHR5cGVzLmlzQW55QXJyYXlCdWZmZXIoYm9keSkpIHtcblx0XHRcdC8vIEJvZHkgaXMgQXJyYXlCdWZmZXJcblx0XHRcdGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoYm9keSk7XG5cdFx0XHRzdGF0ZS5ib2R5ID0gZnJvbUJ5dGVzKGJ5dGVzKTtcblx0XHRcdHN0YXRlLnNpemUgPSBieXRlcy5ieXRlTGVuZ3RoO1xuXHRcdH0gZWxzZSBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KGJvZHkpKSB7XG5cdFx0XHQvLyBCb2R5IGlzIEFycmF5QnVmZmVyVmlld1xuXHRcdFx0Y29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShib2R5LmJ1ZmZlciwgYm9keS5ieXRlT2Zmc2V0LCBib2R5LmJ5dGVMZW5ndGgpO1xuXHRcdFx0c3RhdGUuYm9keSA9IGZyb21CeXRlcyhieXRlcyk7XG5cdFx0XHRzdGF0ZS5zaXplID0gYnl0ZXMuYnl0ZUxlbmd0aDtcblx0XHR9IGVsc2UgaWYgKGlzUmVhZGFibGVTdHJlYW0oYm9keSkpIHtcblx0XHRcdC8vIEJvZHkgaXMgc3RyZWFtXG5cdFx0XHRzdGF0ZS5ib2R5ID0gYm9keTtcblx0XHR9IGVsc2UgaWYgKGlzRm9ybURhdGEoYm9keSkpIHtcblx0XHRcdC8vIEJvZHkgaXMgYW4gaW5zdGFuY2Ugb2YgZm9ybWRhdGEtbm9kZVxuXHRcdFx0Y29uc3QgYm91bmRhcnkgPSBgTm9kZUZldGNoRm9ybURhdGFCb3VuZGFyeSR7Z2V0Qm91bmRhcnkoKX1gO1xuXHRcdFx0c3RhdGUudHlwZSA9IGBtdWx0aXBhcnQvZm9ybS1kYXRhOyBib3VuZGFyeT0ke2JvdW5kYXJ5fWA7XG5cdFx0XHRzdGF0ZS5zaXplID0gZ2V0Rm9ybURhdGFMZW5ndGgoYm9keSwgYm91bmRhcnkpO1xuXHRcdFx0c3RhdGUuYm9keSA9IGZyb21Bc3luY0l0ZXJhYmxlKGZvcm1EYXRhSXRlcmF0b3IoYm9keSwgYm91bmRhcnkpKTtcblx0XHR9IGVsc2UgaWYgKGlzTXVsdGlwYXJ0Rm9ybURhdGFTdHJlYW0oYm9keSkpIHtcblx0XHRcdHN0YXRlLnR5cGUgPSBgbXVsdGlwYXJ0L2Zvcm0tZGF0YTsgYm91bmRhcnk9JHtib2R5LmdldEJvdW5kYXJ5KCl9YDtcblx0XHRcdHN0YXRlLnNpemUgPSBib2R5Lmhhc0tub3duTGVuZ3RoKCkgPyBib2R5LmdldExlbmd0aFN5bmMoKSA6IG51bGw7XG5cdFx0XHRzdGF0ZS5ib2R5ID0gZnJvbVN0cmVhbShib2R5KTtcblx0XHR9IGVsc2UgaWYgKGJvZHkgaW5zdGFuY2VvZiBTdHJlYW0pIHtcblx0XHRcdHN0YXRlLmJvZHkgPSBmcm9tU3RyZWFtKGJvZHkpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBOb25lIG9mIHRoZSBhYm92ZVxuXHRcdFx0Ly8gY29lcmNlIHRvIHN0cmluZyB0aGVuIGJ1ZmZlclxuXHRcdFx0Y29uc3QgYnl0ZXMgPSB1dGY4LmVuY29kZShTdHJpbmcoYm9keSkpO1xuXHRcdFx0c3RhdGUudHlwZSA9ICd0ZXh0L3BsYWluO2NoYXJzZXQ9VVRGLTgnO1xuXHRcdFx0c3RhdGUuc2l6ZSA9IGJ5dGVzLmJ5dGVMZW5ndGg7XG5cdFx0XHRzdGF0ZS5ib2R5ID0gZnJvbUJ5dGVzKGJ5dGVzKTtcblx0XHR9XG5cblx0XHR0aGlzLnNpemUgPSBzaXplO1xuXG5cdFx0Ly8gaWYgKGJvZHkgaW5zdGFuY2VvZiBTdHJlYW0pIHtcblx0XHQvLyBcdGJvZHkub24oJ2Vycm9yJywgZXJyID0+IHtcblx0XHQvLyBcdFx0Y29uc3QgZXJyb3IgPSBlcnIgaW5zdGFuY2VvZiBGZXRjaEJhc2VFcnJvciA/XG5cdFx0Ly8gXHRcdFx0ZXJyIDpcblx0XHQvLyBcdFx0XHRuZXcgRmV0Y2hFcnJvcihgSW52YWxpZCByZXNwb25zZSBib2R5IHdoaWxlIHRyeWluZyB0byBmZXRjaCAke3RoaXMudXJsfTogJHtlcnIubWVzc2FnZX1gLCAnc3lzdGVtJywgZXJyKTtcblx0XHQvLyBcdFx0dGhpc1tJTlRFUk5BTFNdLmVycm9yID0gZXJyb3I7XG5cdFx0Ly8gXHR9KTtcblx0XHQvLyB9XG5cdH1cblxuXHQvKiogQHR5cGUge0hlYWRlcnN9ICovXG5cdC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cblx0Z2V0IGhlYWRlcnMoKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihgJ2dldCBoZWFkZXJzJyBjYWxsZWQgb24gYW4gb2JqZWN0IHRoYXQgZG9lcyBub3QgaW1wbGVtZW50cyBpbnRlcmZhY2UuYClcblx0fVxuXG5cdGdldCBib2R5KCkge1xuXHRcdHJldHVybiB0aGlzW0lOVEVSTkFMU10uYm9keTtcblx0fVxuXG5cdGdldCBib2R5VXNlZCgpIHtcblx0XHRyZXR1cm4gdGhpc1tJTlRFUk5BTFNdLmRpc3R1cmJlZDtcblx0fVxuXG5cdC8qKlxuXHQgKiBEZWNvZGUgcmVzcG9uc2UgYXMgQXJyYXlCdWZmZXJcblx0ICpcblx0ICogQHJldHVybiB7UHJvbWlzZTxBcnJheUJ1ZmZlcj59XG5cdCAqL1xuXHRhc3luYyBhcnJheUJ1ZmZlcigpIHtcblx0XHRjb25zdCB7YnVmZmVyLCBieXRlT2Zmc2V0LCBieXRlTGVuZ3RofSA9IGF3YWl0IGNvbnN1bWVCb2R5KHRoaXMpO1xuXHRcdHJldHVybiBidWZmZXIuc2xpY2UoYnl0ZU9mZnNldCwgYnl0ZU9mZnNldCArIGJ5dGVMZW5ndGgpO1xuXHR9XG5cblx0LyoqXG5cdCAqIFJldHVybiByYXcgcmVzcG9uc2UgYXMgQmxvYlxuXHQgKlxuXHQgKiBAcmV0dXJuIFByb21pc2Vcblx0ICovXG5cdGFzeW5jIGJsb2IoKSB7XG5cdFx0Y29uc3QgY3QgPSAodGhpcy5oZWFkZXJzICYmIHRoaXMuaGVhZGVycy5nZXQoJ2NvbnRlbnQtdHlwZScpKSB8fCAodGhpc1tJTlRFUk5BTFNdLmJvZHkgJiYgdGhpc1tJTlRFUk5BTFNdLnR5cGUpIHx8ICcnO1xuXHRcdGNvbnN0IGJ1ZiA9IGF3YWl0IGNvbnN1bWVCb2R5KHRoaXMpO1xuXG5cdFx0cmV0dXJuIG5ldyBCbG9iKFtidWZdLCB7XG5cdFx0XHR0eXBlOiBjdFxuXHRcdH0pO1xuXHR9XG5cblx0LyoqXG5cdCAqIERlY29kZSByZXNwb25zZSBhcyBqc29uXG5cdCAqXG5cdCAqIEByZXR1cm4gIFByb21pc2Vcblx0ICovXG5cdGFzeW5jIGpzb24oKSB7XG5cdFx0cmV0dXJuIEpTT04ucGFyc2UoYXdhaXQgdGhpcy50ZXh0KCkpO1xuXHR9XG5cblx0LyoqXG5cdCAqIERlY29kZSByZXNwb25zZSBhcyB0ZXh0XG5cdCAqXG5cdCAqIEByZXR1cm4gIFByb21pc2Vcblx0ICovXG5cdGFzeW5jIHRleHQoKSB7XG5cdFx0Y29uc3QgYnVmZmVyID0gYXdhaXQgY29uc3VtZUJvZHkodGhpcyk7XG5cdFx0cmV0dXJuIHV0ZjguZGVjb2RlKGJ1ZmZlcik7XG5cdH1cblxuXHQvKipcblx0ICogQHJldHVybnMge1Byb21pc2U8Rm9ybURhdGE+fVxuXHQgKi9cblxuXHRhc3luYyBmb3JtRGF0YSgpIHtcblx0XHRyZXR1cm4gdG9Gb3JtRGF0YSh0aGlzKVxuXHR9XG59XG5cbi8vIEluIGJyb3dzZXJzLCBhbGwgcHJvcGVydGllcyBhcmUgZW51bWVyYWJsZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKEJvZHkucHJvdG90eXBlLCB7XG5cdGJvZHk6IHtlbnVtZXJhYmxlOiB0cnVlfSxcblx0Ym9keVVzZWQ6IHtlbnVtZXJhYmxlOiB0cnVlfSxcblx0YXJyYXlCdWZmZXI6IHtlbnVtZXJhYmxlOiB0cnVlfSxcblx0YmxvYjoge2VudW1lcmFibGU6IHRydWV9LFxuXHRqc29uOiB7ZW51bWVyYWJsZTogdHJ1ZX0sXG5cdHRleHQ6IHtlbnVtZXJhYmxlOiB0cnVlfSxcblx0Zm9ybURhdGE6IHtlbnVtZXJhYmxlOiB0cnVlfVxufSk7XG5cbi8qKlxuICogQ29uc3VtZSBhbmQgY29udmVydCBhbiBlbnRpcmUgQm9keSB0byBhIEJ1ZmZlci5cbiAqXG4gKiBSZWY6IGh0dHBzOi8vZmV0Y2guc3BlYy53aGF0d2cub3JnLyNjb25jZXB0LWJvZHktY29uc3VtZS1ib2R5XG4gKlxuICogQHBhcmFtIHtCb2R5ICYge3VybD86c3RyaW5nfX0gZGF0YVxuICogQHJldHVybiB7UHJvbWlzZTxVaW50OEFycmF5Pn1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gY29uc3VtZUJvZHkoZGF0YSkge1xuXHRjb25zdCBzdGF0ZSA9IGRhdGFbSU5URVJOQUxTXTtcblx0aWYgKHN0YXRlLmRpc3R1cmJlZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoYGJvZHkgdXNlZCBhbHJlYWR5IGZvcjogJHtkYXRhLnVybH1gKTtcblx0fVxuXG5cdHN0YXRlLmRpc3R1cmJlZCA9IHRydWU7XG5cblx0aWYgKHN0YXRlLmVycm9yKSB7XG5cdFx0dGhyb3cgc3RhdGUuZXJyb3I7XG5cdH1cblxuXHRjb25zdCB7Ym9keX0gPSBzdGF0ZTtcblxuXHQvLyBCb2R5IGlzIG51bGxcblx0aWYgKGJvZHkgPT09IG51bGwpIHtcblx0XHRyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoMCk7XG5cdH1cblxuXHQvLyBCb2R5IGlzIHN0cmVhbVxuXHQvLyBnZXQgcmVhZHkgdG8gYWN0dWFsbHkgY29uc3VtZSB0aGUgYm9keVxuXHQvKiogQHR5cGUge1tVaW50OEFycmF5fG51bGwsIFVpbnQ4QXJyYXlbXSwgbnVtYmVyXX0gKi9cblx0Y29uc3QgW2J1ZmZlciwgY2h1bmtzLCBsaW1pdF0gPSBkYXRhLnNpemUgPiAwID9cblx0XHRbbmV3IFVpbnQ4QXJyYXkoZGF0YS5zaXplKSwgW10sIGRhdGEuc2l6ZV0gOlxuXHRcdFtudWxsLCBbXSwgSW5maW5pdHldO1xuXHRsZXQgb2Zmc2V0ID0gMDtcblxuXHRjb25zdCBzb3VyY2UgPSBzdHJlYW1JdGVyYXRvcihib2R5KTtcblx0dHJ5IHtcblx0XHRmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIHNvdXJjZSkge1xuXHRcdFx0Y29uc3QgYnl0ZXMgPSBjaHVuayBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgP1xuXHRcdFx0XHRjaHVuayA6XG5cdFx0XHRcdEJ1ZmZlci5mcm9tKGNodW5rKTtcblxuXHRcdFx0aWYgKG9mZnNldCArIGJ5dGVzLmJ5dGVMZW5ndGggPiBsaW1pdCkge1xuXHRcdFx0XHRjb25zdCBlcnJvciA9IG5ldyBGZXRjaEVycm9yKGBjb250ZW50IHNpemUgYXQgJHtkYXRhLnVybH0gb3ZlciBsaW1pdDogJHtsaW1pdH1gLCAnbWF4LXNpemUnKTtcblx0XHRcdFx0c291cmNlLnRocm93KGVycm9yKTtcblx0XHRcdFx0dGhyb3cgZXJyb3I7XG5cdFx0XHR9IGVsc2UgaWYgKGJ1ZmZlcikge1xuXHRcdFx0XHRidWZmZXIuc2V0KGJ5dGVzLCBvZmZzZXQpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Y2h1bmtzLnB1c2goYnl0ZXMpO1xuXHRcdFx0fVxuXG5cdFx0XHRvZmZzZXQgKz0gYnl0ZXMuYnl0ZUxlbmd0aDtcblx0XHR9XG5cblx0XHRpZiAoYnVmZmVyKSB7XG5cdFx0XHRpZiAob2Zmc2V0IDwgYnVmZmVyLmJ5dGVMZW5ndGgpIHtcblx0XHRcdFx0dGhyb3cgbmV3IEZldGNoRXJyb3IoYFByZW1hdHVyZSBjbG9zZSBvZiBzZXJ2ZXIgcmVzcG9uc2Ugd2hpbGUgdHJ5aW5nIHRvIGZldGNoICR7ZGF0YS51cmx9YCwgJ3ByZW1hdHVyZS1jbG9zZScpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGJ1ZmZlcjtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0cmV0dXJuIHdyaXRlQnl0ZXMobmV3IFVpbnQ4QXJyYXkob2Zmc2V0KSwgY2h1bmtzKTtcblx0XHR9XG5cdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0aWYgKGVycm9yIGluc3RhbmNlb2YgRmV0Y2hCYXNlRXJyb3IpIHtcblx0XHRcdHRocm93IGVycm9yO1xuXHRcdC8vIEB0cy1leHBlY3QtZXJyb3IgLSB3ZSBrbm93IGl0IHdpbGwgaGF2ZSBhIG5hbWVcblx0XHR9IGVsc2UgaWYgKGVycm9yICYmIGVycm9yLm5hbWUgPT09ICdBYm9ydEVycm9yJykge1xuXHRcdFx0dGhyb3cgZXJyb3I7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbnN0IGUgPSAvKiogQHR5cGUge2ltcG9ydCgnLi9lcnJvcnMvZmV0Y2gtZXJyb3InKS5TeXN0ZW1FcnJvcn0gKi8oZXJyb3IpXG5cdFx0XHQvLyBPdGhlciBlcnJvcnMsIHN1Y2ggYXMgaW5jb3JyZWN0IGNvbnRlbnQtZW5jb2Rpbmdcblx0XHRcdHRocm93IG5ldyBGZXRjaEVycm9yKGBJbnZhbGlkIHJlc3BvbnNlIGJvZHkgd2hpbGUgdHJ5aW5nIHRvIGZldGNoICR7ZGF0YS51cmx9OiAke2UubWVzc2FnZX1gLCAnc3lzdGVtJywgZSk7XG5cdFx0fVxuXHR9XG59XG5cbi8qKlxuICogQ2xvbmUgYm9keSBnaXZlbiBSZXMvUmVxIGluc3RhbmNlXG4gKlxuICogQHBhcmFtIHtCb2R5fSBpbnN0YW5jZSAgICAgICBSZXNwb25zZSBvciBSZXF1ZXN0IGluc3RhbmNlXG4gKiBAcmV0dXJuIHtSZWFkYWJsZVN0cmVhbTxVaW50OEFycmF5PiB8IG51bGx9XG4gKi9cbmV4cG9ydCBjb25zdCBjbG9uZSA9IGluc3RhbmNlID0+IHtcblx0Y29uc3Qge2JvZHl9ID0gaW5zdGFuY2U7XG5cblx0Ly8gRG9uJ3QgYWxsb3cgY2xvbmluZyBhIHVzZWQgYm9keVxuXHRpZiAoaW5zdGFuY2UuYm9keVVzZWQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoJ2Nhbm5vdCBjbG9uZSBib2R5IGFmdGVyIGl0IGlzIHVzZWQnKTtcblx0fVxuXG5cdGlmICghYm9keSkge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0Y29uc3QgW2xlZnQsIHJpZ2h0XSA9IGJvZHkudGVlKCk7XG5cdGluc3RhbmNlW0lOVEVSTkFMU10uYm9keSA9IGxlZnQ7XG5cdHJldHVybiByaWdodDtcbn07XG5cbi8qKlxuICogUGVyZm9ybXMgdGhlIG9wZXJhdGlvbiBcImV4dHJhY3QgYSBgQ29udGVudC1UeXBlYCB2YWx1ZSBmcm9tIHxvYmplY3R8XCIgYXNcbiAqIHNwZWNpZmllZCBpbiB0aGUgc3BlY2lmaWNhdGlvbjpcbiAqIGh0dHBzOi8vZmV0Y2guc3BlYy53aGF0d2cub3JnLyNjb25jZXB0LWJvZHlpbml0LWV4dHJhY3RcbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGFzc3VtZXMgdGhhdCBpbnN0YW5jZS5ib2R5IGlzIHByZXNlbnQuXG4gKlxuICogQHBhcmFtIHtCb2R5fSBzb3VyY2UgQW55IG9wdGlvbnMuYm9keSBpbnB1dFxuICogQHJldHVybnMge3N0cmluZyB8IG51bGx9XG4gKi9cbmV4cG9ydCBjb25zdCBleHRyYWN0Q29udGVudFR5cGUgPSBzb3VyY2UgPT4gc291cmNlW0lOVEVSTkFMU10udHlwZTtcblxuLyoqXG4gKiBUaGUgRmV0Y2ggU3RhbmRhcmQgdHJlYXRzIHRoaXMgYXMgaWYgXCJ0b3RhbCBieXRlc1wiIGlzIGEgcHJvcGVydHkgb24gdGhlIGJvZHkuXG4gKiBGb3IgdXMsIHdlIGhhdmUgdG8gZXhwbGljaXRseSBnZXQgaXQgd2l0aCBhIGZ1bmN0aW9uLlxuICpcbiAqIHJlZjogaHR0cHM6Ly9mZXRjaC5zcGVjLndoYXR3Zy5vcmcvI2NvbmNlcHQtYm9keS10b3RhbC1ieXRlc1xuICpcbiAqIEBwYXJhbSB7Qm9keX0gc291cmNlIC0gQm9keSBvYmplY3QgZnJvbSB0aGUgQm9keSBpbnN0YW5jZS5cbiAqIEByZXR1cm5zIHtudW1iZXIgfCBudWxsfVxuICovXG5leHBvcnQgY29uc3QgZ2V0VG90YWxCeXRlcyA9IHNvdXJjZSA9PiBzb3VyY2VbSU5URVJOQUxTXS5zaXplO1xuXG4vKipcbiAqIFdyaXRlIGEgQm9keSB0byBhIE5vZGUuanMgV3JpdGFibGVTdHJlYW0gKGUuZy4gaHR0cC5SZXF1ZXN0KSBvYmplY3QuXG4gKlxuICogQHBhcmFtIHtTdHJlYW0uV3JpdGFibGV9IGRlc3QgLSBUaGUgc3RyZWFtIHRvIHdyaXRlIHRvLlxuICogQHBhcmFtIHtCb2R5fSBzb3VyY2UgLSBCb2R5IG9iamVjdCBmcm9tIHRoZSBCb2R5IGluc3RhbmNlLlxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmV4cG9ydCBjb25zdCB3cml0ZVRvU3RyZWFtID0gKGRlc3QsIHtib2R5fSkgPT4ge1xuXHRpZiAoYm9keSA9PT0gbnVsbCkge1xuXHRcdC8vIEJvZHkgaXMgbnVsbFxuXHRcdGRlc3QuZW5kKCk7XG5cdH0gZWxzZSB7XG5cdFx0U3RyZWFtLlJlYWRhYmxlLmZyb20oc3RyZWFtSXRlcmF0b3IoYm9keSkpLnBpcGUoZGVzdCk7XG5cdH1cbn07XG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBpbXBsZW1lbnRzIHtBc3luY0dlbmVyYXRvcjxULCB2b2lkLCB2b2lkPn1cbiAqL1xuY2xhc3MgU3RyZWFtSXRlcmFibGVJdGVyYXRvciB7XG5cdC8qKlxuXHQgKiBAcGFyYW0ge1JlYWRhYmxlU3RyZWFtPFQ+fSBzdHJlYW1cblx0ICovXG5cdGNvbnN0cnVjdG9yKHN0cmVhbSkge1xuXHRcdHRoaXMuc3RyZWFtID0gc3RyZWFtO1xuXHRcdHRoaXMucmVhZGVyID0gbnVsbDtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcmV0dXJucyB7QXN5bmNHZW5lcmF0b3I8VCwgdm9pZCwgdm9pZD59XG5cdCAqL1xuXHRbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuXHRcdHJldHVybiB0aGlzO1xuXHR9XG5cblx0Z2V0UmVhZGVyKCkge1xuXHRcdGlmICh0aGlzLnJlYWRlcikge1xuXHRcdFx0cmV0dXJuIHRoaXMucmVhZGVyO1xuXHRcdH1cblxuXHRcdGNvbnN0IHJlYWRlciA9IHRoaXMuc3RyZWFtLmdldFJlYWRlcigpO1xuXHRcdHRoaXMucmVhZGVyID0gcmVhZGVyO1xuXHRcdHJldHVybiByZWFkZXI7XG5cdH1cblxuXHQvKipcblx0ICogQHJldHVybnMge1Byb21pc2U8SXRlcmF0b3JSZXN1bHQ8VCwgdm9pZD4+fVxuXHQgKi9cblx0bmV4dCgpIHtcblx0XHRyZXR1cm4gLyoqIEB0eXBlIHtQcm9taXNlPEl0ZXJhdG9yUmVzdWx0PFQsIHZvaWQ+Pn0gKi8gKHRoaXMuZ2V0UmVhZGVyKCkucmVhZCgpKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcmV0dXJucyB7UHJvbWlzZTxJdGVyYXRvclJlc3VsdDxULCB2b2lkPj59XG5cdCAqL1xuXHRhc3luYyByZXR1cm4oKSB7XG5cdFx0aWYgKHRoaXMucmVhZGVyKSB7XG5cdFx0XHRhd2FpdCB0aGlzLnJlYWRlci5jYW5jZWwoKTtcblx0XHR9XG5cblx0XHRyZXR1cm4ge2RvbmU6IHRydWUsIHZhbHVlOiB1bmRlZmluZWR9O1xuXHR9XG5cblx0LyoqXG5cdCAqIFxuXHQgKiBAcGFyYW0ge2FueX0gZXJyb3IgXG5cdCAqIEByZXR1cm5zIHtQcm9taXNlPEl0ZXJhdG9yUmVzdWx0PFQsIHZvaWQ+Pn1cblx0ICovXG5cdGFzeW5jIHRocm93KGVycm9yKSB7XG5cdFx0YXdhaXQgdGhpcy5nZXRSZWFkZXIoKS5jYW5jZWwoZXJyb3IpO1xuXHRcdHJldHVybiB7ZG9uZTogdHJ1ZSwgdmFsdWU6IHVuZGVmaW5lZH07XG5cdH1cbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtSZWFkYWJsZVN0cmVhbTxUPn0gc3RyZWFtXG4gKi9cbmV4cG9ydCBjb25zdCBzdHJlYW1JdGVyYXRvciA9IHN0cmVhbSA9PiBuZXcgU3RyZWFtSXRlcmFibGVJdGVyYXRvcihzdHJlYW0pO1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnVmZmVyXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXlbXX0gY2h1bmtzXG4gKi9cbmNvbnN0IHdyaXRlQnl0ZXMgPSAoYnVmZmVyLCBjaHVua3MpID0+IHtcblx0bGV0IG9mZnNldCA9IDA7XG5cdGZvciAoY29uc3QgY2h1bmsgb2YgY2h1bmtzKSB7XG5cdFx0YnVmZmVyLnNldChjaHVuaywgb2Zmc2V0KTtcblx0XHRvZmZzZXQgKz0gY2h1bmsuYnl0ZUxlbmd0aDtcblx0fVxuXG5cdHJldHVybiBidWZmZXI7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnl0ZXNcbiAqIEByZXR1cm5zIHtSZWFkYWJsZVN0cmVhbTxVaW50OEFycmF5Pn1cbiAqL1xuLy8gQHRzLWlnbm9yZVxuY29uc3QgZnJvbUJ5dGVzID0gYnl0ZXMgPT4gbmV3IFJlYWRhYmxlU3RyZWFtKHtcblx0c3RhcnQoY29udHJvbGxlcikge1xuXHRcdGNvbnRyb2xsZXIuZW5xdWV1ZShieXRlcyk7XG5cdFx0Y29udHJvbGxlci5jbG9zZSgpO1xuXHR9XG59KTtcblxuLyoqXG4gKiBAcGFyYW0ge0FzeW5jSXRlcmFibGU8VWludDhBcnJheT59IGNvbnRlbnRcbiAqIEByZXR1cm5zIHtSZWFkYWJsZVN0cmVhbTxVaW50OEFycmF5Pn1cbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21Bc3luY0l0ZXJhYmxlID0gY29udGVudCA9PlxuXHQvLyBAdHMtaWdub3JlXG5cdG5ldyBSZWFkYWJsZVN0cmVhbShuZXcgQXN5bmNJdGVyYWJsZVB1bXAoY29udGVudCkpO1xuXG4vKipcbiAqIEBpbXBsZW1lbnRzIHtVbmRlcmx5aW5nU291cmNlPFVpbnQ4QXJyYXk+fVxuICovXG5jbGFzcyBBc3luY0l0ZXJhYmxlUHVtcCB7XG5cdC8qKlxuXHQgKiBAcGFyYW0ge0FzeW5jSXRlcmFibGU8VWludDhBcnJheT59IHNvdXJjZVxuXHQgKi9cblx0Y29uc3RydWN0b3Ioc291cmNlKSB7XG5cdFx0dGhpcy5zb3VyY2UgPSBzb3VyY2VbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG5cdH1cblxuXHQvKipcblx0ICogQHBhcmFtIHtSZWFkYWJsZVN0cmVhbUNvbnRyb2xsZXI8VWludDhBcnJheT59IGNvbnRyb2xsZXJcblx0ICovXG5cdGFzeW5jIHB1bGwoY29udHJvbGxlcikge1xuXHRcdHRyeSB7XG5cdFx0XHR3aGlsZSAoY29udHJvbGxlci5kZXNpcmVkU2l6ZSB8fCAwID4gMCkge1xuXHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tYXdhaXQtaW4tbG9vcFxuXHRcdFx0XHRjb25zdCBuZXh0ID0gYXdhaXQgdGhpcy5zb3VyY2UubmV4dCgpO1xuXHRcdFx0XHRpZiAobmV4dC5kb25lKSB7XG5cdFx0XHRcdFx0Y29udHJvbGxlci5jbG9zZSgpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGNvbnRyb2xsZXIuZW5xdWV1ZShuZXh0LnZhbHVlKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0XHRjb250cm9sbGVyLmVycm9yKGVycm9yKTtcblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICogQHBhcmFtIHthbnl9IFtyZWFzb25dXG5cdCAqL1xuXHRjYW5jZWwocmVhc29uKSB7XG5cdFx0aWYgKHJlYXNvbikge1xuXHRcdFx0aWYgKHR5cGVvZiB0aGlzLnNvdXJjZS50aHJvdyA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0XHR0aGlzLnNvdXJjZS50aHJvdyhyZWFzb24pO1xuXHRcdFx0fSBlbHNlIGlmICh0eXBlb2YgdGhpcy5zb3VyY2UucmV0dXJuID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0XHRcdHRoaXMuc291cmNlLnJldHVybigpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSBpZiAodHlwZW9mIHRoaXMuc291cmNlLnJldHVybiA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0dGhpcy5zb3VyY2UucmV0dXJuKCk7XG5cdFx0fVxuXHR9XG59XG5cbi8qKlxuICogQHBhcmFtIHtTdHJlYW0gJiB7cmVhZGFibGVIaWdoV2F0ZXJNYXJrPzpudW1iZXJ9fSBzb3VyY2VcbiAqIEByZXR1cm5zIHtSZWFkYWJsZVN0cmVhbTxVaW50OEFycmF5Pn1cbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21TdHJlYW0gPSBzb3VyY2UgPT4ge1xuXHRjb25zdCBwdW1wID0gbmV3IFN0cmVhbVB1bXAoc291cmNlKTtcblx0Y29uc3Qgc3RyZWFtID0gbmV3IFJlYWRhYmxlU3RyZWFtKHB1bXAsIHB1bXApO1xuXHRyZXR1cm4gc3RyZWFtO1xufTtcblxuLyoqXG4gKiBAaW1wbGVtZW50cyB7VW5kZXJseWluZ1NvdXJjZTxVaW50OEFycmF5Pn1cbiAqIEBpbXBsZW1lbnRzIHtRdWV1aW5nU3RyYXRlZ3k8VWludDhBcnJheT59XG4gKi9cbmNsYXNzIFN0cmVhbVB1bXAge1xuXHQvKipcblx0ICogQHBhcmFtIHtTdHJlYW0gJiB7XG5cdCAqIFx0cmVhZGFibGVIaWdoV2F0ZXJNYXJrPzogbnVtYmVyXG5cdCAqIFx0cmVhZGFibGU/OmJvb2xlYW4sXG5cdCAqIFx0cmVzdW1lPzogKCkgPT4gdm9pZCxcblx0ICogXHRwYXVzZT86ICgpID0+IHZvaWRcblx0ICogXHRkZXN0cm95PzogKGVycm9yPzpFcnJvcikgPT4gdm9pZFxuXHQgKiB9fSBzdHJlYW1cblx0ICovXG5cdGNvbnN0cnVjdG9yKHN0cmVhbSkge1xuXHRcdHRoaXMuaGlnaFdhdGVyTWFyayA9IHN0cmVhbS5yZWFkYWJsZUhpZ2hXYXRlck1hcmsgfHwgcmVhZGFibGVIaWdoV2F0ZXJNYXJrO1xuXHRcdHRoaXMuYWNjdW1hbGF0ZWRTaXplID0gMDtcblx0XHR0aGlzLnN0cmVhbSA9IHN0cmVhbTtcblx0XHR0aGlzLmVucXVldWUgPSB0aGlzLmVucXVldWUuYmluZCh0aGlzKTtcblx0XHR0aGlzLmVycm9yID0gdGhpcy5lcnJvci5iaW5kKHRoaXMpO1xuXHRcdHRoaXMuY2xvc2UgPSB0aGlzLmNsb3NlLmJpbmQodGhpcyk7XG5cdH1cblxuXHQvKipcblx0ICogQHBhcmFtIHtVaW50OEFycmF5fSBbY2h1bmtdXG5cdCAqL1xuXHRzaXplKGNodW5rKSB7XG5cdFx0cmV0dXJuIGNodW5rPy5ieXRlTGVuZ3RoIHx8IDA7XG5cdH1cblxuXHQvKipcblx0ICogQHBhcmFtIHtSZWFkYWJsZVN0cmVhbUNvbnRyb2xsZXI8VWludDhBcnJheT59IGNvbnRyb2xsZXJcblx0ICovXG5cdHN0YXJ0KGNvbnRyb2xsZXIpIHtcblx0XHR0aGlzLmNvbnRyb2xsZXIgPSBjb250cm9sbGVyO1xuXHRcdHRoaXMuc3RyZWFtLm9uKCdkYXRhJywgdGhpcy5lbnF1ZXVlKTtcblx0XHR0aGlzLnN0cmVhbS5vbmNlKCdlcnJvcicsIHRoaXMuZXJyb3IpO1xuXHRcdHRoaXMuc3RyZWFtLm9uY2UoJ2VuZCcsIHRoaXMuY2xvc2UpO1xuXHRcdHRoaXMuc3RyZWFtLm9uY2UoJ2Nsb3NlJywgdGhpcy5jbG9zZSk7XG5cdH1cblxuXHRwdWxsKCkge1xuXHRcdHRoaXMucmVzdW1lKCk7XG5cdH1cblxuXHQvKipcblx0ICogQHBhcmFtIHthbnl9IFtyZWFzb25dXG5cdCAqL1xuXHRjYW5jZWwocmVhc29uKSB7XG5cdFx0aWYgKHRoaXMuc3RyZWFtLmRlc3Ryb3kpIHtcblx0XHRcdHRoaXMuc3RyZWFtLmRlc3Ryb3kocmVhc29uKTtcblx0XHR9XG5cblx0XHR0aGlzLnN0cmVhbS5vZmYoJ2RhdGEnLCB0aGlzLmVucXVldWUpO1xuXHRcdHRoaXMuc3RyZWFtLm9mZignZXJyb3InLCB0aGlzLmVycm9yKTtcblx0XHR0aGlzLnN0cmVhbS5vZmYoJ2VuZCcsIHRoaXMuY2xvc2UpO1xuXHRcdHRoaXMuc3RyZWFtLm9mZignY2xvc2UnLCB0aGlzLmNsb3NlKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcGFyYW0ge1VpbnQ4QXJyYXl8c3RyaW5nfSBjaHVua1xuXHQgKi9cblx0ZW5xdWV1ZShjaHVuaykge1xuXHRcdGlmICh0aGlzLmNvbnRyb2xsZXIpIHtcblx0XHRcdHRyeSB7XG5cdFx0XHRcdGNvbnN0IGJ5dGVzID0gY2h1bmsgaW5zdGFuY2VvZiBVaW50OEFycmF5ID9cblx0XHRcdFx0XHRjaHVuayA6XG5cdFx0XHRcdFx0QnVmZmVyLmZyb20oY2h1bmspO1xuXG5cdFx0XHRcdGNvbnN0IGF2YWlsYWJsZSA9ICh0aGlzLmNvbnRyb2xsZXIuZGVzaXJlZFNpemUgfHwgMCkgLSBieXRlcy5ieXRlTGVuZ3RoO1xuXHRcdFx0XHR0aGlzLmNvbnRyb2xsZXIuZW5xdWV1ZShieXRlcyk7XG5cdFx0XHRcdGlmIChhdmFpbGFibGUgPD0gMCkge1xuXHRcdFx0XHRcdHRoaXMucGF1c2UoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBjYXRjaCB7XG5cdFx0XHRcdHRoaXMuY29udHJvbGxlci5lcnJvcihuZXcgRXJyb3IoJ0NvdWxkIG5vdCBjcmVhdGUgQnVmZmVyLCBjaHVuayBtdXN0IGJlIG9mIHR5cGUgc3RyaW5nIG9yIGFuIGluc3RhbmNlIG9mIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIG9yIEFycmF5IG9yIGFuIEFycmF5LWxpa2UgT2JqZWN0JykpO1xuXHRcdFx0XHR0aGlzLmNhbmNlbCgpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHBhdXNlKCkge1xuXHRcdGlmICh0aGlzLnN0cmVhbS5wYXVzZSkge1xuXHRcdFx0dGhpcy5zdHJlYW0ucGF1c2UoKTtcblx0XHR9XG5cdH1cblxuXHRyZXN1bWUoKSB7XG5cdFx0aWYgKHRoaXMuc3RyZWFtLnJlYWRhYmxlICYmIHRoaXMuc3RyZWFtLnJlc3VtZSkge1xuXHRcdFx0dGhpcy5zdHJlYW0ucmVzdW1lKCk7XG5cdFx0fVxuXHR9XG5cblx0Y2xvc2UoKSB7XG5cdFx0aWYgKHRoaXMuY29udHJvbGxlcikge1xuXHRcdFx0dGhpcy5jb250cm9sbGVyLmNsb3NlKCk7XG5cdFx0XHRkZWxldGUgdGhpcy5jb250cm9sbGVyO1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBAcGFyYW0ge0Vycm9yfSBlcnJvciBcblx0ICovXG5cdGVycm9yKGVycm9yKSB7XG5cdFx0aWYgKHRoaXMuY29udHJvbGxlcikge1xuXHRcdFx0dGhpcy5jb250cm9sbGVyLmVycm9yKGVycm9yKTtcblx0XHRcdGRlbGV0ZSB0aGlzLmNvbnRyb2xsZXI7XG5cdFx0fVxuXHR9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/fetch/src/body.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/fetch/src/errors/abort-error.js":
/*!***************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/errors/abort-error.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* binding */ AbortError)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/@web-std/fetch/src/errors/base.js\");\n\n\n/**\n * AbortError interface for cancelled requests\n */\nclass AbortError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.FetchBaseError {\n\t/**\n\t * @param {string} message \n\t * @param {string} [type]\n\t */\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2Vycm9ycy9hYm9ydC1lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5Qzs7QUFFekM7QUFDQTtBQUNBO0FBQ08seUJBQXlCLG9EQUFjO0FBQzlDO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2Vycm9ycy9hYm9ydC1lcnJvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0ZldGNoQmFzZUVycm9yfSBmcm9tICcuL2Jhc2UuanMnO1xuXG4vKipcbiAqIEFib3J0RXJyb3IgaW50ZXJmYWNlIGZvciBjYW5jZWxsZWQgcmVxdWVzdHNcbiAqL1xuZXhwb3J0IGNsYXNzIEFib3J0RXJyb3IgZXh0ZW5kcyBGZXRjaEJhc2VFcnJvciB7XG5cdC8qKlxuXHQgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSBcblx0ICogQHBhcmFtIHtzdHJpbmd9IFt0eXBlXVxuXHQgKi9cblx0Y29uc3RydWN0b3IobWVzc2FnZSwgdHlwZSA9ICdhYm9ydGVkJykge1xuXHRcdHN1cGVyKG1lc3NhZ2UsIHR5cGUpO1xuXHR9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/fetch/src/errors/abort-error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/fetch/src/errors/base.js":
/*!********************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/errors/base.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchBaseError: () => (/* binding */ FetchBaseError)\n/* harmony export */ });\n\n\nclass FetchBaseError extends Error {\n\t/**\n\t * @param {string} message \n\t * @param {string} type \n\t */\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2Vycm9ycy9iYXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTs7QUFFTjtBQUNQO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2Vycm9ycy9iYXNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IGNsYXNzIEZldGNoQmFzZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuXHQvKipcblx0ICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlIFxuXHQgKi9cblx0Y29uc3RydWN0b3IobWVzc2FnZSwgdHlwZSkge1xuXHRcdHN1cGVyKG1lc3NhZ2UpO1xuXHRcdC8vIEhpZGUgY3VzdG9tIGVycm9yIGltcGxlbWVudGF0aW9uIGRldGFpbHMgZnJvbSBlbmQtdXNlcnNcblx0XHRFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCB0aGlzLmNvbnN0cnVjdG9yKTtcblxuXHRcdHRoaXMudHlwZSA9IHR5cGU7XG5cdH1cblxuXHRnZXQgbmFtZSgpIHtcblx0XHRyZXR1cm4gdGhpcy5jb25zdHJ1Y3Rvci5uYW1lO1xuXHR9XG5cblx0Z2V0IFtTeW1ib2wudG9TdHJpbmdUYWddKCkge1xuXHRcdHJldHVybiB0aGlzLmNvbnN0cnVjdG9yLm5hbWU7XG5cdH1cbn1cblxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/fetch/src/errors/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/fetch/src/errors/fetch-error.js":
/*!***************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/errors/fetch-error.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchError: () => (/* binding */ FetchError)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/@web-std/fetch/src/errors/base.js\");\n\n\n\n/**\n * @typedef {{\n * address?: string\n * code: string\n * dest?: string\n * errno: number\n * info?: object\n * message: string\n * path?: string\n * port?: number\n * syscall: string\n * }} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nclass FetchError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} type -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2Vycm9ycy9mZXRjaC1lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDeUM7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047O0FBRUE7QUFDQTtBQUNBO0FBQ08seUJBQXlCLG9EQUFjO0FBQzlDO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLGFBQWE7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvYWx0Y29pbi1kYWRkeS9Eb3dubG9hZHMvb3dubHkvbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2ZldGNoL3NyYy9lcnJvcnMvZmV0Y2gtZXJyb3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQge0ZldGNoQmFzZUVycm9yfSBmcm9tICcuL2Jhc2UuanMnO1xuXG4vKipcbiAqIEB0eXBlZGVmIHt7XG4gKiBhZGRyZXNzPzogc3RyaW5nXG4gKiBjb2RlOiBzdHJpbmdcbiAqIGRlc3Q/OiBzdHJpbmdcbiAqIGVycm5vOiBudW1iZXJcbiAqIGluZm8/OiBvYmplY3RcbiAqIG1lc3NhZ2U6IHN0cmluZ1xuICogcGF0aD86IHN0cmluZ1xuICogcG9ydD86IG51bWJlclxuICogc3lzY2FsbDogc3RyaW5nXG4gKiB9fSBTeXN0ZW1FcnJvclxuKi9cblxuLyoqXG4gKiBGZXRjaEVycm9yIGludGVyZmFjZSBmb3Igb3BlcmF0aW9uYWwgZXJyb3JzXG4gKi9cbmV4cG9ydCBjbGFzcyBGZXRjaEVycm9yIGV4dGVuZHMgRmV0Y2hCYXNlRXJyb3Ige1xuXHQvKipcblx0ICogQHBhcmFtICB7c3RyaW5nfSBtZXNzYWdlIC0gICAgICBFcnJvciBtZXNzYWdlIGZvciBodW1hblxuXHQgKiBAcGFyYW0gIHtzdHJpbmd9IHR5cGUgLSAgICAgICAgRXJyb3IgdHlwZSBmb3IgbWFjaGluZVxuXHQgKiBAcGFyYW0gIHtTeXN0ZW1FcnJvcn0gW3N5c3RlbUVycm9yXSAtIEZvciBOb2RlLmpzIHN5c3RlbSBlcnJvclxuXHQgKi9cblx0Y29uc3RydWN0b3IobWVzc2FnZSwgdHlwZSwgc3lzdGVtRXJyb3IpIHtcblx0XHRzdXBlcihtZXNzYWdlLCB0eXBlKTtcblx0XHQvLyBXaGVuIGVyci50eXBlIGlzIGBzeXN0ZW1gLCBlcnIuZXJyb3JlZFN5c0NhbGwgY29udGFpbnMgc3lzdGVtIGVycm9yIGFuZCBlcnIuY29kZSBjb250YWlucyBzeXN0ZW0gZXJyb3IgY29kZVxuXHRcdGlmIChzeXN0ZW1FcnJvcikge1xuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW11bHRpLWFzc2lnblxuXHRcdFx0dGhpcy5jb2RlID0gdGhpcy5lcnJubyA9IHN5c3RlbUVycm9yLmNvZGU7XG5cdFx0XHR0aGlzLmVycm9yZWRTeXNDYWxsID0gc3lzdGVtRXJyb3Iuc3lzY2FsbDtcblx0XHR9XG5cdH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/fetch/src/errors/fetch-error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/fetch/src/fetch.js":
/*!**************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/fetch.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_11__.Blob),\n/* harmony export */   FormData: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_12__.FormData),\n/* harmony export */   Headers: () => (/* reexport safe */ _headers_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_11__.ReadableStream),\n/* harmony export */   Request: () => (/* reexport safe */ _request_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]),\n/* harmony export */   Response: () => (/* reexport safe */ _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fetch: () => (/* binding */ fetch)\n/* harmony export */ });\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zlib */ \"zlib\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var mrmime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mrmime */ \"(rsc)/./node_modules/mrmime/index.mjs\");\n/* harmony import */ var data_uri_to_buffer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! data-uri-to-buffer */ \"(rsc)/./node_modules/data-uri-to-buffer/dist/src/index.js\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var _body_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./body.js */ \"(rsc)/./node_modules/@web-std/fetch/src/body.js\");\n/* harmony import */ var _response_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./response.js */ \"(rsc)/./node_modules/@web-std/fetch/src/response.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@web-std/fetch/src/headers.js\");\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./request.js */ \"(rsc)/./node_modules/@web-std/fetch/src/request.js\");\n/* harmony import */ var _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./errors/fetch-error.js */ \"(rsc)/./node_modules/@web-std/fetch/src/errors/fetch-error.js\");\n/* harmony import */ var _errors_abort_error_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./errors/abort-error.js */ \"(rsc)/./node_modules/@web-std/fetch/src/errors/abort-error.js\");\n/* harmony import */ var _utils_is_redirect_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/is-redirect.js */ \"(rsc)/./node_modules/@web-std/fetch/src/utils/is-redirect.js\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./package.js */ \"(rsc)/./node_modules/@web-std/blob/src/lib.node.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./package.js */ \"(rsc)/./node_modules/@web-std/form-data/src/lib.node.js\");\n/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:', 'file:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request.js').default} url - Absolute url or Request instance\n * @param   {RequestInit & import('./request.js').RequestExtraOptions} [options_] - Fetch options\n * @return  {Promise<import('./response.js').default>}\n */\nasync function fetch(url, options_ = {}) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new _request_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"](url, options_);\n\t\tconst options = (0,_request_js__WEBPACK_IMPORTED_MODULE_9__.getNodeRequestOptions)(request);\n\t\tif (!supportedSchemas.has(options.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${options.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (options.protocol === 'data:') {\n\t\t\tconst data = data_uri_to_buffer__WEBPACK_IMPORTED_MODULE_5__(request.url.toString());\n\t\t\tconst response = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\tif (options.protocol === 'file:') {\n\t\t\tconst stream = fs__WEBPACK_IMPORTED_MODULE_3__.createReadStream(new URL(request.url))\n\t\t\tconst type = mrmime__WEBPACK_IMPORTED_MODULE_4__.lookup(request.url) || 'application/octet-stream'\n\t\t\tconst response = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](stream, {headers: {'Content-Type': type }});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (options.protocol === 'https:' ? https__WEBPACK_IMPORTED_MODULE_1__ : http__WEBPACK_IMPORTED_MODULE_0__).request;\n\t\tconst {signal} = request;\n\t\t/** @type {Response|null} */\n\t\tlet response = null;\n\t\t/** @type {import('http').IncomingMessage|null} */\n\t\tlet response_ = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new _errors_abort_error_js__WEBPACK_IMPORTED_MODULE_13__.AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body) {\n\t\t\t\trequest.body.cancel(error);\n\t\t\t}\n\n\t\t\tif (!response_) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse_.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', err => {\n\t\t\t// @ts-expect-error - err may not be SystemError\n\t\t\treject(new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__.FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, err => {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tresponse_?.emit(\"error\", err);\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = Object.assign(new Error('Premature close'), {\n\t\t\t\t\t\t\tcode: 'ERR_STREAM_PREMATURE_CLOSE'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresponse_?.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', incoming => {\n\t\t\tresponse_ = incoming;\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = (0,_headers_js__WEBPACK_IMPORTED_MODULE_8__.fromRawHeaders)(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif ((0,_utils_is_redirect_js__WEBPACK_IMPORTED_MODULE_15__.isRedirect)(Number(response_.statusCode))) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : new URL(location, request.url);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__.FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\theaders.set('Location', locationURL.toString());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__.FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new _headers_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"](request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\t// Note: We can not use `request.body` because send would have\n\t\t\t\t\t\t\t// consumed it already.\n\t\t\t\t\t\t\tbody: options_.body,\n\t\t\t\t\t\t\tsignal: signal,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tconst isStreamBody =\n\t\t\t\t\t\t\trequestOptions.body instanceof _package_js__WEBPACK_IMPORTED_MODULE_11__.ReadableStream ||\n\t\t\t\t\t\t\trequestOptions.body instanceof stream__WEBPACK_IMPORTED_MODULE_7__.Readable;\n\t\t\t\t\t\tif (response_.statusCode !== 303 && isStreamBody) {\n\t\t\t\t\t\t\treject(new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__.FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tfetch(new _request_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"](locationURL.href, requestOptions)).then(resolve, reject);\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(response_, new stream__WEBPACK_IMPORTED_MODULE_7__.PassThrough(), reject);\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib__WEBPACK_IMPORTED_MODULE_2__.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib__WEBPACK_IMPORTED_MODULE_2__.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(body, zlib__WEBPACK_IMPORTED_MODULE_2__.createGunzip(zlibOptions), reject);\n\t\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_body_js__WEBPACK_IMPORTED_MODULE_16__.fromAsyncIterable)(body), responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(response_, new stream__WEBPACK_IMPORTED_MODULE_7__.PassThrough(), reject);\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(body, zlib__WEBPACK_IMPORTED_MODULE_2__.createInflate(), reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(body, zlib__WEBPACK_IMPORTED_MODULE_2__.createInflateRaw(), reject);\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_body_js__WEBPACK_IMPORTED_MODULE_16__.fromAsyncIterable)(body), responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(body, zlib__WEBPACK_IMPORTED_MODULE_2__.createBrotliDecompress(), reject);\n\t\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_body_js__WEBPACK_IMPORTED_MODULE_16__.fromAsyncIterable)(body), responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_body_js__WEBPACK_IMPORTED_MODULE_16__.fromAsyncIterable)(body), responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t(0,_body_js__WEBPACK_IMPORTED_MODULE_16__.writeToStream)(request_, request);\n\t});\n}\n\n/**\n *\n * @param {import('http').ClientRequest} request\n * @param {(error:Error) => void} errorCallback\n */\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = buffer__WEBPACK_IMPORTED_MODULE_6__.Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\t/** @type {Buffer | undefined} */\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = Object.assign(new Error('Premature close'), {\n\t\t\t\t\tcode: 'ERR_STREAM_PREMATURE_CLOSE'\n\t\t\t\t});\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\t/** @param {Buffer} buf */\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = buffer__WEBPACK_IMPORTED_MODULE_6__.Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tbuffer__WEBPACK_IMPORTED_MODULE_6__.Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tbuffer__WEBPACK_IMPORTED_MODULE_6__.Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\tconst removeSocketListeners = () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t}\n\n\t\trequest.on('close', removeSocketListeners);\n\t\trequest.on('abort', removeSocketListeners);\n\t});\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fetch);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2ZldGNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFd0I7QUFDRTtBQUNGO0FBQ0o7QUFDVTtBQUNtQjtBQUNuQjs7QUFFNkI7QUFDdEI7QUFDZ0I7QUFDTztBQUNUO0FBQ0E7QUFDRDtBQUNHO0FBQ3BCO0FBQzhCOzs7QUFHSzs7QUFFcEU7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSwrQ0FBK0M7QUFDNUQsYUFBYSwwREFBMEQ7QUFDdkUsYUFBYTtBQUNiO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQSxzQkFBc0IsbURBQU87QUFDN0Isa0JBQWtCLGtFQUFxQjtBQUN2QztBQUNBLGlEQUFpRCxJQUFJLGdCQUFnQixtQ0FBbUM7QUFDeEc7O0FBRUE7QUFDQSxnQkFBZ0IsK0NBQWU7QUFDL0Isd0JBQXdCLHFEQUFRLFFBQVEsVUFBVSwrQkFBK0I7QUFDakY7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLGdEQUFtQjtBQUNyQyxnQkFBZ0IsMENBQVc7QUFDM0Isd0JBQXdCLHFEQUFRLFVBQVUsVUFBVSx1QkFBdUI7QUFDM0U7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0RBQWdELGtDQUFLLEdBQUcsaUNBQUk7QUFDNUQsU0FBUyxRQUFRO0FBQ2pCLGFBQWEsZUFBZTtBQUM1QjtBQUNBLGFBQWEscUNBQXFDO0FBQ2xEOztBQUVBO0FBQ0EscUJBQXFCLCtEQUFVO0FBQy9CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYywrREFBVSxlQUFlLGFBQWEsa0JBQWtCLFlBQVk7QUFDbEY7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwyREFBYzs7QUFFakM7QUFDQSxPQUFPLGtFQUFVO0FBQ2pCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0RBQVUsMkVBQTJFLFlBQVk7QUFDbEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0IsK0RBQVUsaUNBQWlDLFlBQVk7QUFDekU7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtREFBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxzQ0FBc0Msd0RBQWM7QUFDcEQsc0NBQXNDLDRDQUFlO0FBQ3JEO0FBQ0Esa0JBQWtCLCtEQUFVO0FBQzVCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsbURBQU87QUFDdkI7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0RBQXNELGlCQUFpQjtBQUN2RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBLGNBQWMsZ0RBQUksZ0JBQWdCLCtDQUFXO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIscURBQVE7QUFDM0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsOENBQWlCO0FBQzVCLGlCQUFpQiw4Q0FBaUI7QUFDbEM7O0FBRUE7QUFDQTtBQUNBLFdBQVcsZ0RBQUksT0FBTyw4Q0FBaUI7QUFDdkMsbUJBQW1CLHFEQUFRLENBQUMsNERBQWlCO0FBQzdDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnREFBSSxnQkFBZ0IsK0NBQVc7QUFDL0M7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnREFBSSxPQUFPLCtDQUFrQjtBQUMxQyxPQUFPO0FBQ1AsYUFBYSxnREFBSSxPQUFPLGtEQUFxQjtBQUM3Qzs7QUFFQSxvQkFBb0IscURBQVEsQ0FBQyw0REFBaUI7QUFDOUM7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxnREFBSSxPQUFPLHdEQUEyQjtBQUNqRCxtQkFBbUIscURBQVEsQ0FBQyw0REFBaUI7QUFDN0M7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLHFEQUFRLENBQUMsNERBQWlCO0FBQzVDO0FBQ0EsR0FBRzs7QUFFSCxFQUFFLHdEQUFhO0FBQ2YsRUFBRTtBQUNGOztBQUVBO0FBQ0E7QUFDQSxXQUFXLDhCQUE4QjtBQUN6QyxXQUFXLHVCQUF1QjtBQUNsQztBQUNBO0FBQ0Esb0JBQW9CLDBDQUFNOztBQUUxQjtBQUNBO0FBQ0EsWUFBWSxvQkFBb0I7QUFDaEM7O0FBRUE7QUFDQSxTQUFTLFNBQVM7QUFDbEI7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBLGNBQWMsUUFBUTtBQUN0QjtBQUNBLDZCQUE2QiwwQ0FBTTs7QUFFbkM7QUFDQTtBQUNBO0FBQ0EsS0FBSywwQ0FBTTtBQUNYLEtBQUssMENBQU07QUFDWDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRTtBQUNGOztBQUVBLGlFQUFlLEtBQUs7QUFDSiIsInNvdXJjZXMiOlsiL2hvbWUvYWx0Y29pbi1kYWRkeS9Eb3dubG9hZHMvb3dubHkvbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2ZldGNoL3NyYy9mZXRjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEluZGV4LmpzXG4gKlxuICogYSByZXF1ZXN0IEFQSSBjb21wYXRpYmxlIHdpdGggd2luZG93LmZldGNoXG4gKlxuICogQWxsIHNwZWMgYWxnb3JpdGhtIHN0ZXAgbnVtYmVycyBhcmUgYmFzZWQgb24gaHR0cHM6Ly9mZXRjaC5zcGVjLndoYXR3Zy5vcmcvY29tbWl0LXNuYXBzaG90cy9hZTcxNjgyMmNiM2E2MTg0MzIyNmNkMDkwZWVmYzY1ODk0NDZjMWQyLy5cbiAqL1xuXG5pbXBvcnQgaHR0cCBmcm9tICdodHRwJztcbmltcG9ydCBodHRwcyBmcm9tICdodHRwcyc7XG5pbXBvcnQgemxpYiBmcm9tICd6bGliJztcbmltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgKiBhcyBtaW1lIGZyb20gJ21ybWltZSdcbmltcG9ydCBkYXRhVXJpVG9CdWZmZXIgZnJvbSAnZGF0YS11cmktdG8tYnVmZmVyJztcbmltcG9ydCB7QnVmZmVyfSBmcm9tICdidWZmZXInO1xuXG5pbXBvcnQge3dyaXRlVG9TdHJlYW0sIGZyb21Bc3luY0l0ZXJhYmxlfSBmcm9tICcuL2JvZHkuanMnO1xuaW1wb3J0IFJlc3BvbnNlIGZyb20gJy4vcmVzcG9uc2UuanMnO1xuaW1wb3J0IEhlYWRlcnMsIHtmcm9tUmF3SGVhZGVyc30gZnJvbSAnLi9oZWFkZXJzLmpzJztcbmltcG9ydCBSZXF1ZXN0LCB7Z2V0Tm9kZVJlcXVlc3RPcHRpb25zfSBmcm9tICcuL3JlcXVlc3QuanMnO1xuaW1wb3J0IHtGZXRjaEVycm9yfSBmcm9tICcuL2Vycm9ycy9mZXRjaC1lcnJvci5qcyc7XG5pbXBvcnQge0Fib3J0RXJyb3J9IGZyb20gJy4vZXJyb3JzL2Fib3J0LWVycm9yLmpzJztcbmltcG9ydCB7aXNSZWRpcmVjdH0gZnJvbSAnLi91dGlscy9pcy1yZWRpcmVjdC5qcyc7XG5pbXBvcnQge3BpcGVsaW5lIGFzIHB1bXAsIFBhc3NUaHJvdWdofSBmcm9tICdzdHJlYW0nO1xuaW1wb3J0ICogYXMgU3RyZWFtIGZyb20gJ3N0cmVhbSc7XG5pbXBvcnQgeyBSZWFkYWJsZVN0cmVhbSwgQmxvYiwgRm9ybURhdGEgIH0gZnJvbSAnLi9wYWNrYWdlLmpzJztcblxuXG5leHBvcnQge0hlYWRlcnMsIFJlcXVlc3QsIFJlc3BvbnNlLCBSZWFkYWJsZVN0cmVhbSwgQmxvYiwgRm9ybURhdGF9O1xuXG5jb25zdCBzdXBwb3J0ZWRTY2hlbWFzID0gbmV3IFNldChbJ2RhdGE6JywgJ2h0dHA6JywgJ2h0dHBzOicsICdmaWxlOiddKTtcblxuLyoqXG4gKiBGZXRjaCBmdW5jdGlvblxuICpcbiAqIEBwYXJhbSAgIHtzdHJpbmcgfCBVUkwgfCBpbXBvcnQoJy4vcmVxdWVzdC5qcycpLmRlZmF1bHR9IHVybCAtIEFic29sdXRlIHVybCBvciBSZXF1ZXN0IGluc3RhbmNlXG4gKiBAcGFyYW0gICB7UmVxdWVzdEluaXQgJiBpbXBvcnQoJy4vcmVxdWVzdC5qcycpLlJlcXVlc3RFeHRyYU9wdGlvbnN9IFtvcHRpb25zX10gLSBGZXRjaCBvcHRpb25zXG4gKiBAcmV0dXJuICB7UHJvbWlzZTxpbXBvcnQoJy4vcmVzcG9uc2UuanMnKS5kZWZhdWx0Pn1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gZmV0Y2godXJsLCBvcHRpb25zXyA9IHt9KSB7XG5cdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0Ly8gQnVpbGQgcmVxdWVzdCBvYmplY3Rcblx0XHRjb25zdCByZXF1ZXN0ID0gbmV3IFJlcXVlc3QodXJsLCBvcHRpb25zXyk7XG5cdFx0Y29uc3Qgb3B0aW9ucyA9IGdldE5vZGVSZXF1ZXN0T3B0aW9ucyhyZXF1ZXN0KTtcblx0XHRpZiAoIXN1cHBvcnRlZFNjaGVtYXMuaGFzKG9wdGlvbnMucHJvdG9jb2wpKSB7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKGBub2RlLWZldGNoIGNhbm5vdCBsb2FkICR7dXJsfS4gVVJMIHNjaGVtZSBcIiR7b3B0aW9ucy5wcm90b2NvbC5yZXBsYWNlKC86JC8sICcnKX1cIiBpcyBub3Qgc3VwcG9ydGVkLmApO1xuXHRcdH1cblxuXHRcdGlmIChvcHRpb25zLnByb3RvY29sID09PSAnZGF0YTonKSB7XG5cdFx0XHRjb25zdCBkYXRhID0gZGF0YVVyaVRvQnVmZmVyKHJlcXVlc3QudXJsLnRvU3RyaW5nKCkpO1xuXHRcdFx0Y29uc3QgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2UoZGF0YSwge2hlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogZGF0YS50eXBlRnVsbH19KTtcblx0XHRcdHJlc29sdmUocmVzcG9uc2UpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmIChvcHRpb25zLnByb3RvY29sID09PSAnZmlsZTonKSB7XG5cdFx0XHRjb25zdCBzdHJlYW0gPSBmcy5jcmVhdGVSZWFkU3RyZWFtKG5ldyBVUkwocmVxdWVzdC51cmwpKVxuXHRcdFx0Y29uc3QgdHlwZSA9IG1pbWUubG9va3VwKHJlcXVlc3QudXJsKSB8fCAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJ1xuXHRcdFx0Y29uc3QgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2Uoc3RyZWFtLCB7aGVhZGVyczogeydDb250ZW50LVR5cGUnOiB0eXBlIH19KTtcblx0XHRcdHJlc29sdmUocmVzcG9uc2UpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIFdyYXAgaHR0cC5yZXF1ZXN0IGludG8gZmV0Y2hcblx0XHRjb25zdCBzZW5kID0gKG9wdGlvbnMucHJvdG9jb2wgPT09ICdodHRwczonID8gaHR0cHMgOiBodHRwKS5yZXF1ZXN0O1xuXHRcdGNvbnN0IHtzaWduYWx9ID0gcmVxdWVzdDtcblx0XHQvKiogQHR5cGUge1Jlc3BvbnNlfG51bGx9ICovXG5cdFx0bGV0IHJlc3BvbnNlID0gbnVsbDtcblx0XHQvKiogQHR5cGUge2ltcG9ydCgnaHR0cCcpLkluY29taW5nTWVzc2FnZXxudWxsfSAqL1xuXHRcdGxldCByZXNwb25zZV8gPSBudWxsO1xuXG5cdFx0Y29uc3QgYWJvcnQgPSAoKSA9PiB7XG5cdFx0XHRjb25zdCBlcnJvciA9IG5ldyBBYm9ydEVycm9yKCdUaGUgb3BlcmF0aW9uIHdhcyBhYm9ydGVkLicpO1xuXHRcdFx0cmVqZWN0KGVycm9yKTtcblx0XHRcdGlmIChyZXF1ZXN0LmJvZHkpIHtcblx0XHRcdFx0cmVxdWVzdC5ib2R5LmNhbmNlbChlcnJvcik7XG5cdFx0XHR9XG5cblx0XHRcdGlmICghcmVzcG9uc2VfKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0cmVzcG9uc2VfLmVtaXQoJ2Vycm9yJywgZXJyb3IpO1xuXHRcdH07XG5cblx0XHRpZiAoc2lnbmFsICYmIHNpZ25hbC5hYm9ydGVkKSB7XG5cdFx0XHRhYm9ydCgpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbnN0IGFib3J0QW5kRmluYWxpemUgPSAoKSA9PiB7XG5cdFx0XHRhYm9ydCgpO1xuXHRcdFx0ZmluYWxpemUoKTtcblx0XHR9O1xuXG5cdFx0Ly8gU2VuZCByZXF1ZXN0XG5cdFx0Y29uc3QgcmVxdWVzdF8gPSBzZW5kKG9wdGlvbnMpO1xuXG5cdFx0aWYgKHNpZ25hbCkge1xuXHRcdFx0c2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgYWJvcnRBbmRGaW5hbGl6ZSk7XG5cdFx0fVxuXG5cdFx0Y29uc3QgZmluYWxpemUgPSAoKSA9PiB7XG5cdFx0XHRyZXF1ZXN0Xy5hYm9ydCgpO1xuXHRcdFx0aWYgKHNpZ25hbCkge1xuXHRcdFx0XHRzaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBhYm9ydEFuZEZpbmFsaXplKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0cmVxdWVzdF8ub24oJ2Vycm9yJywgZXJyID0+IHtcblx0XHRcdC8vIEB0cy1leHBlY3QtZXJyb3IgLSBlcnIgbWF5IG5vdCBiZSBTeXN0ZW1FcnJvclxuXHRcdFx0cmVqZWN0KG5ldyBGZXRjaEVycm9yKGByZXF1ZXN0IHRvICR7cmVxdWVzdC51cmx9IGZhaWxlZCwgcmVhc29uOiAke2Vyci5tZXNzYWdlfWAsICdzeXN0ZW0nLCBlcnIpKTtcblx0XHRcdGZpbmFsaXplKCk7XG5cdFx0fSk7XG5cblx0XHRmaXhSZXNwb25zZUNodW5rZWRUcmFuc2ZlckJhZEVuZGluZyhyZXF1ZXN0XywgZXJyID0+IHtcblx0XHRcdGlmIChzaWduYWwgJiYgc2lnbmFsLmFib3J0ZWQpIHtcblx0XHRcdFx0cmV0dXJuXG5cdFx0XHR9XG5cblx0XHRcdHJlc3BvbnNlXz8uZW1pdChcImVycm9yXCIsIGVycik7XG5cdFx0fSk7XG5cblx0XHQvKiBjOCBpZ25vcmUgbmV4dCAxOCAqL1xuXHRcdGlmIChwYXJzZUludChwcm9jZXNzLnZlcnNpb24uc3Vic3RyaW5nKDEpKSA8IDE0KSB7XG5cdFx0XHQvLyBCZWZvcmUgTm9kZS5qcyAxNCwgcGlwZWxpbmUoKSBkb2VzIG5vdCBmdWxseSBzdXBwb3J0IGFzeW5jIGl0ZXJhdG9ycyBhbmQgZG9lcyBub3QgYWx3YXlzXG5cdFx0XHQvLyBwcm9wZXJseSBoYW5kbGUgd2hlbiB0aGUgc29ja2V0IGNsb3NlL2VuZCBldmVudHMgYXJlIG91dCBvZiBvcmRlci5cblx0XHRcdHJlcXVlc3RfLm9uKCdzb2NrZXQnLCBzID0+IHtcblx0XHRcdFx0cy5wcmVwZW5kTGlzdGVuZXIoJ2Nsb3NlJywgaGFkRXJyb3IgPT4ge1xuXHRcdFx0XHRcdC8vIGlmIGEgZGF0YSBsaXN0ZW5lciBpcyBzdGlsbCBwcmVzZW50IHdlIGRpZG4ndCBlbmQgY2xlYW5seVxuXHRcdFx0XHRcdGNvbnN0IGhhc0RhdGFMaXN0ZW5lciA9IHMubGlzdGVuZXJDb3VudCgnZGF0YScpID4gMFxuXG5cdFx0XHRcdFx0Ly8gaWYgZW5kIGhhcHBlbmVkIGJlZm9yZSBjbG9zZSBidXQgdGhlIHNvY2tldCBkaWRuJ3QgZW1pdCBhbiBlcnJvciwgZG8gaXQgbm93XG5cdFx0XHRcdFx0aWYgKHJlc3BvbnNlICYmIGhhc0RhdGFMaXN0ZW5lciAmJiAhaGFkRXJyb3IgJiYgIShzaWduYWwgJiYgc2lnbmFsLmFib3J0ZWQpKSB7XG5cdFx0XHRcdFx0XHRjb25zdCBlcnIgPSBPYmplY3QuYXNzaWduKG5ldyBFcnJvcignUHJlbWF0dXJlIGNsb3NlJyksIHtcblx0XHRcdFx0XHRcdFx0Y29kZTogJ0VSUl9TVFJFQU1fUFJFTUFUVVJFX0NMT1NFJ1xuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRyZXNwb25zZV8/LmVtaXQoJ2Vycm9yJywgZXJyKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0cmVxdWVzdF8ub24oJ3Jlc3BvbnNlJywgaW5jb21pbmcgPT4ge1xuXHRcdFx0cmVzcG9uc2VfID0gaW5jb21pbmc7XG5cdFx0XHRyZXF1ZXN0Xy5zZXRUaW1lb3V0KDApO1xuXHRcdFx0Y29uc3QgaGVhZGVycyA9IGZyb21SYXdIZWFkZXJzKHJlc3BvbnNlXy5yYXdIZWFkZXJzKTtcblxuXHRcdFx0Ly8gSFRUUCBmZXRjaCBzdGVwIDVcblx0XHRcdGlmIChpc1JlZGlyZWN0KE51bWJlcihyZXNwb25zZV8uc3RhdHVzQ29kZSkpKSB7XG5cdFx0XHRcdC8vIEhUVFAgZmV0Y2ggc3RlcCA1LjJcblx0XHRcdFx0Y29uc3QgbG9jYXRpb24gPSBoZWFkZXJzLmdldCgnTG9jYXRpb24nKTtcblxuXHRcdFx0XHQvLyBIVFRQIGZldGNoIHN0ZXAgNS4zXG5cdFx0XHRcdGNvbnN0IGxvY2F0aW9uVVJMID0gbG9jYXRpb24gPT09IG51bGwgPyBudWxsIDogbmV3IFVSTChsb2NhdGlvbiwgcmVxdWVzdC51cmwpO1xuXG5cdFx0XHRcdC8vIEhUVFAgZmV0Y2ggc3RlcCA1LjVcblx0XHRcdFx0c3dpdGNoIChyZXF1ZXN0LnJlZGlyZWN0KSB7XG5cdFx0XHRcdFx0Y2FzZSAnZXJyb3InOlxuXHRcdFx0XHRcdFx0cmVqZWN0KG5ldyBGZXRjaEVycm9yKGB1cmkgcmVxdWVzdGVkIHJlc3BvbmRzIHdpdGggYSByZWRpcmVjdCwgcmVkaXJlY3QgbW9kZSBpcyBzZXQgdG8gZXJyb3I6ICR7cmVxdWVzdC51cmx9YCwgJ25vLXJlZGlyZWN0JykpO1xuXHRcdFx0XHRcdFx0ZmluYWxpemUoKTtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHRjYXNlICdtYW51YWwnOlxuXHRcdFx0XHRcdFx0Ly8gTm9kZS1mZXRjaC1zcGVjaWZpYyBzdGVwOiBtYWtlIG1hbnVhbCByZWRpcmVjdCBhIGJpdCBlYXNpZXIgdG8gdXNlIGJ5IHNldHRpbmcgdGhlIExvY2F0aW9uIGhlYWRlciB2YWx1ZSB0byB0aGUgcmVzb2x2ZWQgVVJMLlxuXHRcdFx0XHRcdFx0aWYgKGxvY2F0aW9uVVJMICE9PSBudWxsKSB7XG5cdFx0XHRcdFx0XHRcdGhlYWRlcnMuc2V0KCdMb2NhdGlvbicsIGxvY2F0aW9uVVJMLnRvU3RyaW5nKCkpO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRjYXNlICdmb2xsb3cnOiB7XG5cdFx0XHRcdFx0XHQvLyBIVFRQLXJlZGlyZWN0IGZldGNoIHN0ZXAgMlxuXHRcdFx0XHRcdFx0aWYgKGxvY2F0aW9uVVJMID09PSBudWxsKSB7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBIVFRQLXJlZGlyZWN0IGZldGNoIHN0ZXAgNVxuXHRcdFx0XHRcdFx0aWYgKHJlcXVlc3QuY291bnRlciA+PSByZXF1ZXN0LmZvbGxvdykge1xuXHRcdFx0XHRcdFx0XHRyZWplY3QobmV3IEZldGNoRXJyb3IoYG1heGltdW0gcmVkaXJlY3QgcmVhY2hlZCBhdDogJHtyZXF1ZXN0LnVybH1gLCAnbWF4LXJlZGlyZWN0JykpO1xuXHRcdFx0XHRcdFx0XHRmaW5hbGl6ZSgpO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIEhUVFAtcmVkaXJlY3QgZmV0Y2ggc3RlcCA2IChjb3VudGVyIGluY3JlbWVudClcblx0XHRcdFx0XHRcdC8vIENyZWF0ZSBhIG5ldyBSZXF1ZXN0IG9iamVjdC5cblx0XHRcdFx0XHRcdGNvbnN0IHJlcXVlc3RPcHRpb25zID0ge1xuXHRcdFx0XHRcdFx0XHRoZWFkZXJzOiBuZXcgSGVhZGVycyhyZXF1ZXN0LmhlYWRlcnMpLFxuXHRcdFx0XHRcdFx0XHRmb2xsb3c6IHJlcXVlc3QuZm9sbG93LFxuXHRcdFx0XHRcdFx0XHRjb3VudGVyOiByZXF1ZXN0LmNvdW50ZXIgKyAxLFxuXHRcdFx0XHRcdFx0XHRhZ2VudDogcmVxdWVzdC5hZ2VudCxcblx0XHRcdFx0XHRcdFx0Y29tcHJlc3M6IHJlcXVlc3QuY29tcHJlc3MsXG5cdFx0XHRcdFx0XHRcdG1ldGhvZDogcmVxdWVzdC5tZXRob2QsXG5cdFx0XHRcdFx0XHRcdC8vIE5vdGU6IFdlIGNhbiBub3QgdXNlIGByZXF1ZXN0LmJvZHlgIGJlY2F1c2Ugc2VuZCB3b3VsZCBoYXZlXG5cdFx0XHRcdFx0XHRcdC8vIGNvbnN1bWVkIGl0IGFscmVhZHkuXG5cdFx0XHRcdFx0XHRcdGJvZHk6IG9wdGlvbnNfLmJvZHksXG5cdFx0XHRcdFx0XHRcdHNpZ25hbDogc2lnbmFsLFxuXHRcdFx0XHRcdFx0XHRzaXplOiByZXF1ZXN0LnNpemVcblx0XHRcdFx0XHRcdH07XG5cblx0XHRcdFx0XHRcdC8vIEhUVFAtcmVkaXJlY3QgZmV0Y2ggc3RlcCA5XG5cdFx0XHRcdFx0XHRjb25zdCBpc1N0cmVhbUJvZHkgPVxuXHRcdFx0XHRcdFx0XHRyZXF1ZXN0T3B0aW9ucy5ib2R5IGluc3RhbmNlb2YgUmVhZGFibGVTdHJlYW0gfHxcblx0XHRcdFx0XHRcdFx0cmVxdWVzdE9wdGlvbnMuYm9keSBpbnN0YW5jZW9mIFN0cmVhbS5SZWFkYWJsZTtcblx0XHRcdFx0XHRcdGlmIChyZXNwb25zZV8uc3RhdHVzQ29kZSAhPT0gMzAzICYmIGlzU3RyZWFtQm9keSkge1xuXHRcdFx0XHRcdFx0XHRyZWplY3QobmV3IEZldGNoRXJyb3IoJ0Nhbm5vdCBmb2xsb3cgcmVkaXJlY3Qgd2l0aCBib2R5IGJlaW5nIGEgcmVhZGFibGUgc3RyZWFtJywgJ3Vuc3VwcG9ydGVkLXJlZGlyZWN0JykpO1xuXHRcdFx0XHRcdFx0XHRmaW5hbGl6ZSgpO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIEhUVFAtcmVkaXJlY3QgZmV0Y2ggc3RlcCAxMVxuXHRcdFx0XHRcdFx0aWYgKHJlc3BvbnNlXy5zdGF0dXNDb2RlID09PSAzMDMgfHwgKChyZXNwb25zZV8uc3RhdHVzQ29kZSA9PT0gMzAxIHx8IHJlc3BvbnNlXy5zdGF0dXNDb2RlID09PSAzMDIpICYmIHJlcXVlc3QubWV0aG9kID09PSAnUE9TVCcpKSB7XG5cdFx0XHRcdFx0XHRcdHJlcXVlc3RPcHRpb25zLm1ldGhvZCA9ICdHRVQnO1xuXHRcdFx0XHRcdFx0XHRyZXF1ZXN0T3B0aW9ucy5ib2R5ID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdFx0XHRyZXF1ZXN0T3B0aW9ucy5oZWFkZXJzLmRlbGV0ZSgnY29udGVudC1sZW5ndGgnKTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gSFRUUC1yZWRpcmVjdCBmZXRjaCBzdGVwIDE1XG5cdFx0XHRcdFx0XHRmZXRjaChuZXcgUmVxdWVzdChsb2NhdGlvblVSTC5ocmVmLCByZXF1ZXN0T3B0aW9ucykpLnRoZW4ocmVzb2x2ZSwgcmVqZWN0KTtcblx0XHRcdFx0XHRcdGZpbmFsaXplKCk7XG5cdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRcdHJldHVybiByZWplY3QobmV3IFR5cGVFcnJvcihgUmVkaXJlY3Qgb3B0aW9uICcke3JlcXVlc3QucmVkaXJlY3R9JyBpcyBub3QgYSB2YWxpZCB2YWx1ZSBvZiBSZXF1ZXN0UmVkaXJlY3RgKSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gUHJlcGFyZSByZXNwb25zZVxuXHRcdFx0aWYgKHNpZ25hbCkge1xuXHRcdFx0XHRyZXNwb25zZV8ub25jZSgnZW5kJywgKCkgPT4ge1xuXHRcdFx0XHRcdHNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKCdhYm9ydCcsIGFib3J0QW5kRmluYWxpemUpO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblxuXHRcdFx0bGV0IGJvZHkgPSBwdW1wKHJlc3BvbnNlXywgbmV3IFBhc3NUaHJvdWdoKCksIHJlamVjdCk7XG5cdFx0XHQvLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL3B1bGwvMjkzNzZcblx0XHRcdC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cblx0XHRcdGlmIChwcm9jZXNzLnZlcnNpb24gPCAndjEyLjEwJykge1xuXHRcdFx0XHRyZXNwb25zZV8ub24oJ2Fib3J0ZWQnLCBhYm9ydEFuZEZpbmFsaXplKTtcblx0XHRcdH1cblxuXHRcdFx0Y29uc3QgcmVzcG9uc2VPcHRpb25zID0ge1xuXHRcdFx0XHR1cmw6IHJlcXVlc3QudXJsLFxuXHRcdFx0XHRzdGF0dXM6IHJlc3BvbnNlXy5zdGF0dXNDb2RlLFxuXHRcdFx0XHRzdGF0dXNUZXh0OiByZXNwb25zZV8uc3RhdHVzTWVzc2FnZSxcblx0XHRcdFx0aGVhZGVycyxcblx0XHRcdFx0c2l6ZTogcmVxdWVzdC5zaXplLFxuXHRcdFx0XHRjb3VudGVyOiByZXF1ZXN0LmNvdW50ZXIsXG5cdFx0XHRcdGhpZ2hXYXRlck1hcms6IHJlcXVlc3QuaGlnaFdhdGVyTWFya1xuXHRcdFx0fTtcblxuXHRcdFx0Ly8gSFRUUC1uZXR3b3JrIGZldGNoIHN0ZXAgMTIuMS4xLjNcblx0XHRcdGNvbnN0IGNvZGluZ3MgPSBoZWFkZXJzLmdldCgnQ29udGVudC1FbmNvZGluZycpO1xuXG5cdFx0XHQvLyBIVFRQLW5ldHdvcmsgZmV0Y2ggc3RlcCAxMi4xLjEuNDogaGFuZGxlIGNvbnRlbnQgY29kaW5nc1xuXG5cdFx0XHQvLyBpbiBmb2xsb3dpbmcgc2NlbmFyaW9zIHdlIGlnbm9yZSBjb21wcmVzc2lvbiBzdXBwb3J0XG5cdFx0XHQvLyAxLiBjb21wcmVzc2lvbiBzdXBwb3J0IGlzIGRpc2FibGVkXG5cdFx0XHQvLyAyLiBIRUFEIHJlcXVlc3Rcblx0XHRcdC8vIDMuIG5vIENvbnRlbnQtRW5jb2RpbmcgaGVhZGVyXG5cdFx0XHQvLyA0LiBubyBjb250ZW50IHJlc3BvbnNlICgyMDQpXG5cdFx0XHQvLyA1LiBjb250ZW50IG5vdCBtb2RpZmllZCByZXNwb25zZSAoMzA0KVxuXHRcdFx0aWYgKCFyZXF1ZXN0LmNvbXByZXNzIHx8IHJlcXVlc3QubWV0aG9kID09PSAnSEVBRCcgfHwgY29kaW5ncyA9PT0gbnVsbCB8fCByZXNwb25zZV8uc3RhdHVzQ29kZSA9PT0gMjA0IHx8IHJlc3BvbnNlXy5zdGF0dXNDb2RlID09PSAzMDQpIHtcblx0XHRcdFx0cmVzcG9uc2UgPSBuZXcgUmVzcG9uc2UoYm9keSwgcmVzcG9uc2VPcHRpb25zKTtcblx0XHRcdFx0cmVzb2x2ZShyZXNwb25zZSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gRm9yIE5vZGUgdjYrXG5cdFx0XHQvLyBCZSBsZXNzIHN0cmljdCB3aGVuIGRlY29kaW5nIGNvbXByZXNzZWQgcmVzcG9uc2VzLCBzaW5jZSBzb21ldGltZXNcblx0XHRcdC8vIHNlcnZlcnMgc2VuZCBzbGlnaHRseSBpbnZhbGlkIHJlc3BvbnNlcyB0aGF0IGFyZSBzdGlsbCBhY2NlcHRlZFxuXHRcdFx0Ly8gYnkgY29tbW9uIGJyb3dzZXJzLlxuXHRcdFx0Ly8gQWx3YXlzIHVzaW5nIFpfU1lOQ19GTFVTSCBpcyB3aGF0IGNVUkwgZG9lcy5cblx0XHRcdGNvbnN0IHpsaWJPcHRpb25zID0ge1xuXHRcdFx0XHRmbHVzaDogemxpYi5aX1NZTkNfRkxVU0gsXG5cdFx0XHRcdGZpbmlzaEZsdXNoOiB6bGliLlpfU1lOQ19GTFVTSFxuXHRcdFx0fTtcblxuXHRcdFx0Ly8gRm9yIGd6aXBcblx0XHRcdGlmIChjb2RpbmdzID09PSAnZ3ppcCcgfHwgY29kaW5ncyA9PT0gJ3gtZ3ppcCcpIHtcblx0XHRcdFx0Ym9keSA9IHB1bXAoYm9keSwgemxpYi5jcmVhdGVHdW56aXAoemxpYk9wdGlvbnMpLCByZWplY3QpO1xuXHRcdFx0XHRyZXNwb25zZSA9IG5ldyBSZXNwb25zZShmcm9tQXN5bmNJdGVyYWJsZShib2R5KSwgcmVzcG9uc2VPcHRpb25zKTtcblx0XHRcdFx0cmVzb2x2ZShyZXNwb25zZSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gRm9yIGRlZmxhdGVcblx0XHRcdGlmIChjb2RpbmdzID09PSAnZGVmbGF0ZScgfHwgY29kaW5ncyA9PT0gJ3gtZGVmbGF0ZScpIHtcblx0XHRcdFx0Ly8gSGFuZGxlIHRoZSBpbmZhbW91cyByYXcgZGVmbGF0ZSByZXNwb25zZSBmcm9tIG9sZCBzZXJ2ZXJzXG5cdFx0XHRcdC8vIGEgaGFjayBmb3Igb2xkIElJUyBhbmQgQXBhY2hlIHNlcnZlcnNcblx0XHRcdFx0Y29uc3QgcmF3ID0gcHVtcChyZXNwb25zZV8sIG5ldyBQYXNzVGhyb3VnaCgpLCByZWplY3QpO1xuXHRcdFx0XHRyYXcub25jZSgnZGF0YScsIGNodW5rID0+IHtcblx0XHRcdFx0XHQvLyBTZWUgaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zNzUxOTgyOFxuXHRcdFx0XHRcdGlmICgoY2h1bmtbMF0gJiAweDBGKSA9PT0gMHgwOCkge1xuXHRcdFx0XHRcdFx0Ym9keSA9IHB1bXAoYm9keSwgemxpYi5jcmVhdGVJbmZsYXRlKCksIHJlamVjdCk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGJvZHkgPSBwdW1wKGJvZHksIHpsaWIuY3JlYXRlSW5mbGF0ZVJhdygpLCByZWplY3QpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJlc3BvbnNlID0gbmV3IFJlc3BvbnNlKGZyb21Bc3luY0l0ZXJhYmxlKGJvZHkpLCByZXNwb25zZU9wdGlvbnMpO1xuXHRcdFx0XHRcdHJlc29sdmUocmVzcG9uc2UpO1xuXHRcdFx0XHR9KTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3IgYnJcblx0XHRcdGlmIChjb2RpbmdzID09PSAnYnInKSB7XG5cdFx0XHRcdGJvZHkgPSBwdW1wKGJvZHksIHpsaWIuY3JlYXRlQnJvdGxpRGVjb21wcmVzcygpLCByZWplY3QpO1xuXHRcdFx0XHRyZXNwb25zZSA9IG5ldyBSZXNwb25zZShmcm9tQXN5bmNJdGVyYWJsZShib2R5KSwgcmVzcG9uc2VPcHRpb25zKTtcblx0XHRcdFx0cmVzb2x2ZShyZXNwb25zZSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT3RoZXJ3aXNlLCB1c2UgcmVzcG9uc2UgYXMtaXNcblx0XHRcdHJlc3BvbnNlID0gbmV3IFJlc3BvbnNlKGZyb21Bc3luY0l0ZXJhYmxlKGJvZHkpLCByZXNwb25zZU9wdGlvbnMpO1xuXHRcdFx0cmVzb2x2ZShyZXNwb25zZSk7XG5cdFx0fSk7XG5cblx0XHR3cml0ZVRvU3RyZWFtKHJlcXVlc3RfLCByZXF1ZXN0KTtcblx0fSk7XG59XG5cbi8qKlxuICpcbiAqIEBwYXJhbSB7aW1wb3J0KCdodHRwJykuQ2xpZW50UmVxdWVzdH0gcmVxdWVzdFxuICogQHBhcmFtIHsoZXJyb3I6RXJyb3IpID0+IHZvaWR9IGVycm9yQ2FsbGJhY2tcbiAqL1xuZnVuY3Rpb24gZml4UmVzcG9uc2VDaHVua2VkVHJhbnNmZXJCYWRFbmRpbmcocmVxdWVzdCwgZXJyb3JDYWxsYmFjaykge1xuXHRjb25zdCBMQVNUX0NIVU5LID0gQnVmZmVyLmZyb20oJzBcXHJcXG5cXHJcXG4nKTtcblxuXHRsZXQgaXNDaHVua2VkVHJhbnNmZXIgPSBmYWxzZTtcblx0bGV0IHByb3Blckxhc3RDaHVua1JlY2VpdmVkID0gZmFsc2U7XG5cdC8qKiBAdHlwZSB7QnVmZmVyIHwgdW5kZWZpbmVkfSAqL1xuXHRsZXQgcHJldmlvdXNDaHVuaztcblxuXHRyZXF1ZXN0Lm9uKCdyZXNwb25zZScsIHJlc3BvbnNlID0+IHtcblx0XHRjb25zdCB7aGVhZGVyc30gPSByZXNwb25zZTtcblx0XHRpc0NodW5rZWRUcmFuc2ZlciA9IGhlYWRlcnNbJ3RyYW5zZmVyLWVuY29kaW5nJ10gPT09ICdjaHVua2VkJyAmJiAhaGVhZGVyc1snY29udGVudC1sZW5ndGgnXTtcblx0fSk7XG5cblx0cmVxdWVzdC5vbignc29ja2V0Jywgc29ja2V0ID0+IHtcblx0XHRjb25zdCBvblNvY2tldENsb3NlID0gKCkgPT4ge1xuXHRcdFx0aWYgKGlzQ2h1bmtlZFRyYW5zZmVyICYmICFwcm9wZXJMYXN0Q2h1bmtSZWNlaXZlZCkge1xuXHRcdFx0XHRjb25zdCBlcnJvciA9IE9iamVjdC5hc3NpZ24obmV3IEVycm9yKCdQcmVtYXR1cmUgY2xvc2UnKSwge1xuXHRcdFx0XHRcdGNvZGU6ICdFUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRSdcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGVycm9yQ2FsbGJhY2soZXJyb3IpO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0XHQvKiogQHBhcmFtIHtCdWZmZXJ9IGJ1ZiAqL1xuXHRcdGNvbnN0IG9uRGF0YSA9IGJ1ZiA9PiB7XG5cdFx0XHRwcm9wZXJMYXN0Q2h1bmtSZWNlaXZlZCA9IEJ1ZmZlci5jb21wYXJlKGJ1Zi5zbGljZSgtNSksIExBU1RfQ0hVTkspID09PSAwO1xuXG5cdFx0XHQvLyBTb21ldGltZXMgZmluYWwgMC1sZW5ndGggY2h1bmsgYW5kIGVuZCBvZiBtZXNzYWdlIGNvZGUgYXJlIGluIHNlcGFyYXRlIHBhY2tldHNcblx0XHRcdGlmICghcHJvcGVyTGFzdENodW5rUmVjZWl2ZWQgJiYgcHJldmlvdXNDaHVuaykge1xuXHRcdFx0XHRwcm9wZXJMYXN0Q2h1bmtSZWNlaXZlZCA9IChcblx0XHRcdFx0XHRCdWZmZXIuY29tcGFyZShwcmV2aW91c0NodW5rLnNsaWNlKC0zKSwgTEFTVF9DSFVOSy5zbGljZSgwLCAzKSkgPT09IDAgJiZcblx0XHRcdFx0XHRCdWZmZXIuY29tcGFyZShidWYuc2xpY2UoLTIpLCBMQVNUX0NIVU5LLnNsaWNlKDMpKSA9PT0gMFxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXG5cdFx0XHRwcmV2aW91c0NodW5rID0gYnVmO1xuXHRcdH07XG5cblx0XHRzb2NrZXQucHJlcGVuZExpc3RlbmVyKCdjbG9zZScsIG9uU29ja2V0Q2xvc2UpO1xuXHRcdHNvY2tldC5vbignZGF0YScsIG9uRGF0YSk7XG5cblx0XHRjb25zdCByZW1vdmVTb2NrZXRMaXN0ZW5lcnMgPSAoKSA9PiB7XG5cdFx0XHRzb2NrZXQucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgb25Tb2NrZXRDbG9zZSk7XG5cdFx0XHRzb2NrZXQucmVtb3ZlTGlzdGVuZXIoJ2RhdGEnLCBvbkRhdGEpO1xuXHRcdH1cblxuXHRcdHJlcXVlc3Qub24oJ2Nsb3NlJywgcmVtb3ZlU29ja2V0TGlzdGVuZXJzKTtcblx0XHRyZXF1ZXN0Lm9uKCdhYm9ydCcsIHJlbW92ZVNvY2tldExpc3RlbmVycyk7XG5cdH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmZXRjaFxuZXhwb3J0IHsgZmV0Y2ggfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/fetch/src/fetch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/fetch/src/headers.js":
/*!****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/headers.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Headers),\n/* harmony export */   fromRawHeaders: () => (/* binding */ fromRawHeaders)\n/* harmony export */ });\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/is.js */ \"(rsc)/./node_modules/@web-std/fetch/src/utils/is.js\");\n/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\n\n\n\n\nconst validators = /** @type {{validateHeaderName?:(name:string) => any, validateHeaderValue?:(name:string, value:string) => any}} */\n(http__WEBPACK_IMPORTED_MODULE_1__)\n\nconst validateHeaderName = typeof validators.validateHeaderName === 'function' ?\n\tvalidators.validateHeaderName :\n\t/**\n\t * @param {string} name \n\t */\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst err = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(err, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow err;\n\t\t}\n\t};\n\nconst validateHeaderValue = typeof validators.validateHeaderValue === 'function' ?\n\tvalidators.validateHeaderValue :\n\t/**\n\t * @param {string} name \n\t * @param {string} value \n\t */\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst err = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(err, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow err;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n * @implements {globalThis.Headers}\n */\nclass Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isIterable)(init)) {\n\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\tresult = [...init]\n\t\t\t\t.map(pair => {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof pair !== 'object' || util__WEBPACK_IMPORTED_MODULE_0__.types.isBoxedPrimitive(pair)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [...pair];\n\t\t\t\t}).map(pair => {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [...pair];\n\t\t\t\t});\n\t\t} else if (typeof init === \"object\" && init !== null) {\n\t\t\t// Record<ByteString, ByteString>\n\t\t\tresult.push(...Object.entries(init));\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\t[];\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @param {string} name\n\t\t\t\t\t\t * @param {string} value\n\t\t\t\t\t\t */\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\treceiver,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @param {string} name\n\t\t\t\t\t\t */\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\treceiver,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* c8 ignore next */\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\t/**\n\t * \n\t * @param {string} name \n\t */\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * @param {(value: string, key: string, parent: this) => void} callback \n\t * @param {any} thisArg \n\t * @returns {void}\n\t */\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tif (name.toLowerCase() === 'set-cookie') {\n\t\t\t\tlet cookies = this.getAll(name);\n\t\t\t\twhile (cookies.length > 0) {\n\t\t\t\t\tReflect.apply(callback, thisArg, [cookies.shift(), name, this])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {IterableIterator<string>}\n\t */\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tif (name.toLowerCase() === 'set-cookie') {\n\t\t\t\tlet cookies = this.getAll(name);\n\t\t\t\twhile (cookies.length > 0) {\n\t\t\t\t\tyield /** @type {string} */(cookies.shift());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tyield /** @type {string} */(this.get(name));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tif (name.toLowerCase() === 'set-cookie') {\n\t\t\t\tlet cookies = this.getAll(name);\n\t\t\t\twhile (cookies.length > 0) {\n\t\t\t\t\tyield [name, /** @type {string} */(cookies.shift())];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tyield [name, /** @type {string} */(this.get(name))];\n\t\t\t}\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, /** @type {Record<string, string[]>} */({}));\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, /** @type {Record<string, string|string[]>} */({}));\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, /** @type {Record<string, {enumerable:true}>} */ ({}))\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nfunction fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, /** @type {string[][]} */([]))\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/fetch/src/headers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/fetch/src/lib.node.js":
/*!*****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/lib.node.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.Blob),\n/* harmony export */   File: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_2__.File),\n/* harmony export */   FormData: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_1__.FormData),\n/* harmony export */   Headers: () => (/* binding */ Headers),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.ReadableStream),\n/* harmony export */   Request: () => (/* binding */ Request),\n/* harmony export */   Response: () => (/* binding */ Response),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fetch: () => (/* binding */ fetch)\n/* harmony export */ });\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fetch.js */ \"(rsc)/./node_modules/@web-std/fetch/src/fetch.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fetch.js */ \"(rsc)/./node_modules/@web-std/fetch/src/headers.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fetch.js */ \"(rsc)/./node_modules/@web-std/fetch/src/request.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fetch.js */ \"(rsc)/./node_modules/@web-std/fetch/src/response.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(rsc)/./node_modules/@web-std/blob/src/lib.node.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./package.js */ \"(rsc)/./node_modules/@web-std/form-data/src/lib.node.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./package.js */ \"(rsc)/./node_modules/@web-std/file/src/lib.node.js\");\n\n\n\n// Electron-renderer should get the browser implementation instead of node\n// Browser configuration is not enough\n\n// Marking export as a DOM File object instead of custom class.\nconst fetch = /** @type {typeof globalThis.fetch} */\n  (typeof globalThis.fetch === \"function\" ? globalThis.fetch.bind(globalThis) : _fetch_js__WEBPACK_IMPORTED_MODULE_3__.fetch)\n\nconst Headers = globalThis.Headers || _fetch_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\nconst Request = globalThis.Request || _fetch_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\nconst Response = globalThis.Response || _fetch_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fetch);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2xpYi5ub2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBcUg7O0FBRWhEO0FBQ3JFO0FBQ0E7O0FBRUE7QUFDTyx5QkFBeUIseUJBQXlCO0FBQ3pELGdGQUFnRiw0Q0FBUTs7QUFFakYsc0NBQXNDLGlEQUFVO0FBQ2hELHNDQUFzQyxpREFBVTtBQUNoRCx3Q0FBd0MsaURBQVc7O0FBRTFELGlFQUFlLEtBQUsiLCJzb3VyY2VzIjpbIi9ob21lL2FsdGNvaW4tZGFkZHkvRG93bmxvYWRzL293bmx5L25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9mZXRjaC9zcmMvbGliLm5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmV0Y2ggYXMgd2ViRmV0Y2gsIEhlYWRlcnMgYXMgV2ViSGVhZGVycywgUmVxdWVzdCBhcyBXZWJSZXF1ZXN0LCBSZXNwb25zZSBhcyBXZWJSZXNwb25zZSB9IGZyb20gXCIuL2ZldGNoLmpzXCJcblxuZXhwb3J0IHsgUmVhZGFibGVTdHJlYW0sIEJsb2IsIEZvcm1EYXRhLCBGaWxlICB9IGZyb20gJy4vcGFja2FnZS5qcyc7XG4vLyBFbGVjdHJvbi1yZW5kZXJlciBzaG91bGQgZ2V0IHRoZSBicm93c2VyIGltcGxlbWVudGF0aW9uIGluc3RlYWQgb2Ygbm9kZVxuLy8gQnJvd3NlciBjb25maWd1cmF0aW9uIGlzIG5vdCBlbm91Z2hcblxuLy8gTWFya2luZyBleHBvcnQgYXMgYSBET00gRmlsZSBvYmplY3QgaW5zdGVhZCBvZiBjdXN0b20gY2xhc3MuXG5leHBvcnQgY29uc3QgZmV0Y2ggPSAvKiogQHR5cGUge3R5cGVvZiBnbG9iYWxUaGlzLmZldGNofSAqL1xuICAodHlwZW9mIGdsb2JhbFRoaXMuZmV0Y2ggPT09IFwiZnVuY3Rpb25cIiA/IGdsb2JhbFRoaXMuZmV0Y2guYmluZChnbG9iYWxUaGlzKSA6IHdlYkZldGNoKVxuXG5leHBvcnQgY29uc3QgSGVhZGVycyA9IGdsb2JhbFRoaXMuSGVhZGVycyB8fCBXZWJIZWFkZXJzXG5leHBvcnQgY29uc3QgUmVxdWVzdCA9IGdsb2JhbFRoaXMuUmVxdWVzdCB8fCBXZWJSZXF1ZXN0XG5leHBvcnQgY29uc3QgUmVzcG9uc2UgPSBnbG9iYWxUaGlzLlJlc3BvbnNlIHx8IFdlYlJlc3BvbnNlXG5cbmV4cG9ydCBkZWZhdWx0IGZldGNoXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/fetch/src/lib.node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/fetch/src/request.js":
/*!****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/request.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Request),\n/* harmony export */   getNodeRequestOptions: () => (/* binding */ getNodeRequestOptions)\n/* harmony export */ });\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var abort_controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! abort-controller */ \"(rsc)/./node_modules/abort-controller/dist/abort-controller.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@web-std/fetch/src/headers.js\");\n/* harmony import */ var _body_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./body.js */ \"(rsc)/./node_modules/@web-std/fetch/src/body.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/is.js */ \"(rsc)/./node_modules/@web-std/fetch/src/utils/is.js\");\n/* harmony import */ var _utils_get_search_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/get-search.js */ \"(rsc)/./node_modules/@web-std/fetch/src/utils/get-search.js\");\n\n/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\n\n\n\n\n\n\n\nconst INTERNALS = Symbol('Request internals');\n\nconst forbiddenMethods = new Set([\"CONNECT\", \"TRACE\", \"TRACK\"]);\nconst normalizedMethods = new Set([\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"POST\", \"PUT\"]);\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {any} object\n * @return {object is Request}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\n\n/**\n * Request class\n * @implements {globalThis.Request}\n *\n * @typedef {Object} RequestState\n * @property {string} method\n * @property {RequestRedirect} redirect\n * @property {globalThis.Headers} headers\n * @property {RequestCredentials} credentials\n * @property {URL} parsedURL\n * @property {AbortSignal|null} signal\n *\n * @typedef {Object} RequestExtraOptions\n * @property {number} [follow]\n * @property {boolean} [compress]\n * @property {number} [size]\n * @property {number} [counter]\n * @property {Agent} [agent]\n * @property {number} [highWaterMark]\n * @property {boolean} [insecureHTTPParser]\n *\n * @typedef {((url:URL) => import('http').Agent | import('https').Agent) | import('http').Agent | import('https').Agent} Agent\n *\n * @typedef {Object} RequestOptions\n * @property {string} [method]\n * @property {ReadableStream<Uint8Array>|null} [body]\n * @property {globalThis.Headers} [headers]\n * @property {RequestRedirect} [redirect]\n *\n */\nclass Request extends _body_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n\t/**\n\t * @param {string|Request|URL} info  Url or Request instance\n\t * @param {RequestInit & RequestExtraOptions} init   Custom options\n\t */\n\tconstructor(info, init = {}) {\n\t\tlet parsedURL;\n\t\t/** @type {RequestOptions & RequestExtraOptions} */\n\t\tlet settings\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(info)) {\n\t\t\tparsedURL = new URL(info.url);\n\t\t\tsettings = (info)\n\t\t} else {\n\t\t\tparsedURL = new URL(info);\n\t\t\tsettings = {};\n\t\t}\n\n\n\n\t\t// Normalize method: https://fetch.spec.whatwg.org/#methods\n\t\tlet method = init.method || settings.method || 'GET';\n\t\tif (forbiddenMethods.has(method.toUpperCase())) {\n\t\t\tthrow new TypeError(`Failed to construct 'Request': '${method}' HTTP method is unsupported.`)\n\t\t} else if (normalizedMethods.has(method.toUpperCase())) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tconst inputBody = init.body != null\n\t\t\t? init.body\n\t\t\t: (isRequest(info) && info.body !== null)\n\t\t\t? (0,_body_js__WEBPACK_IMPORTED_MODULE_2__.clone)(info)\n\t\t\t: null;\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (inputBody != null && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || settings.size || 0\n\t\t});\n\t\tconst input = settings\n\n\n\t\tconst headers = /** @type {globalThis.Headers} */\n\t\t\t(new _headers_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](init.headers || input.headers || {}));\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = (0,_body_js__WEBPACK_IMPORTED_MODULE_2__.extractContentType)(this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = 'signal' in init\n\t\t\t? init.signal\n\t\t\t: isRequest(input)\n\t\t\t? input.signal\n\t\t\t: null;\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_4__.isAbortSignal)(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\t\t\n\t\tif (!signal) {\n\t\t\tlet AbortControllerConstructor = typeof AbortController != \"undefined\"\n\t\t\t? AbortController\n\t\t\t: abort_controller__WEBPACK_IMPORTED_MODULE_1__.AbortController;\n\t\t\t/** @type {any} */\n\t\t\tlet newSignal = new AbortControllerConstructor().signal;\n\t\t\tsignal = newSignal;\n\t\t}\n\n\t\t/** @type {RequestState} */\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tcredentials: init.credentials || 'same-origin',\n\t\t\tparsedURL,\n\t\t\tsignal: signal || null\n\t\t};\n\n\t\t/** @type {boolean} */\n\t\tthis.keepalive\n\n\t\t// Node-fetch-only options\n\t\t/** @type {number} */\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\t/** @type {boolean} */\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\t/** @type {number} */\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\t/** @type {Agent|undefined} */\n\t\tthis.agent = init.agent || input.agent;\n\t\t/** @type {number} */\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\t/** @type {boolean} */\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\t}\n\n\t/**\n\t * @type {RequestCache}\n\t */\n\tget cache() {\n\t\treturn \"default\"\n\t}\n\n\t/**\n\t * @type {RequestCredentials}\n\t */\n\n\tget credentials() {\n\t\treturn this[INTERNALS].credentials\n\t}\n\n\t/**\n\t * @type {RequestDestination}\n\t */\n\tget destination() {\n\t\treturn \"\"\n\t}\n\n\tget integrity() {\n\t\treturn \"\"\n\t}\n\n\t/** @type {RequestMode} */\n\tget mode() {\n\t\treturn \"cors\"\n\t}\n\n\t/** @type {string} */\n\tget referrer() {\n\t\treturn  \"\"\n\t}\n\n\t/** @type {ReferrerPolicy} */\n\tget referrerPolicy() {\n\t\treturn \"\"\n\t}\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget url() {\n\t\treturn (0,url__WEBPACK_IMPORTED_MODULE_0__.format)(this[INTERNALS].parsedURL);\n\t}\n\n\t/**\n\t * @type {globalThis.Headers}\n\t */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/**\n\t * @returns {AbortSignal}\n\t */\n\tget signal() {\n\t\t// @ts-ignore\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  {globalThis.Request}\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n * The options object to be passed to http.request\n *\n * @param {Request & Record<INTERNALS, RequestState>} request -  A Request instance\n */\nconst getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new _headers_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = (0,_body_js__WEBPACK_IMPORTED_MODULE_2__.getTotalBytes)(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate,br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = (0,_utils_get_search_js__WEBPACK_IMPORTED_MODULE_5__.getSearch)(parsedURL);\n\n\t// Manually spread the URL object instead of spread syntax\n\tconst requestOptions = {\n\t\tpath: parsedURL.pathname + search,\n\t\tpathname: parsedURL.pathname,\n\t\thostname: parsedURL.hostname,\n\t\tprotocol: parsedURL.protocol,\n\t\tport: parsedURL.port,\n\t\thash: parsedURL.hash,\n\t\tsearch: parsedURL.search,\n\t\t// @ts-ignore - it does not has a query\n\t\tquery: parsedURL.query,\n\t\thref: parsedURL.href,\n\t\tmethod: request.method,\n\t\t// @ts-ignore - not sure what this supposed to do\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn requestOptions;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/fetch/src/request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/fetch/src/response.js":
/*!*****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/response.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Response)\n/* harmony export */ });\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@web-std/fetch/src/headers.js\");\n/* harmony import */ var _body_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./body.js */ \"(rsc)/./node_modules/@web-std/fetch/src/body.js\");\n/* harmony import */ var _utils_is_redirect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/is-redirect.js */ \"(rsc)/./node_modules/@web-std/fetch/src/utils/is-redirect.js\");\n/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\n\n\n\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n * \n * @typedef {Object} Ext\n * @property {number} [size]\n * @property {string} [url]\n * @property {number} [counter]\n * @property {number} [highWaterMark]\n * \n * @implements {globalThis.Response}\n */\nclass Response extends _body_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\t/**\n\t * @param {BodyInit|import('stream').Stream|null} [body] - Readable stream\n\t * @param {ResponseInit & Ext} [options] - Response options\n\t */\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\tconst status = options.status || 200;\n\t\tconst headers = new _headers_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = (0,_body_js__WEBPACK_IMPORTED_MODULE_0__.extractContentType)(this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @private\n\t\t*/\n\t\tthis[INTERNALS] = {\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter || 0,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\t/**\n\t * @type {ResponseType}\n\t */\n\tget type() {\n\t\treturn \"default\"\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\t/**\n\t * @type {Headers}\n\t */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @returns {Response}\n\t */\n\tclone() {\n\t\treturn new Response((0,_body_js__WEBPACK_IMPORTED_MODULE_0__.clone)(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tsize: this.size\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!(0,_utils_is_redirect_js__WEBPACK_IMPORTED_MODULE_2__.isRedirect)(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVtQztBQUN1QjtBQUNSOztBQUVsRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ2UsdUJBQXVCLGdEQUFJO0FBQzFDO0FBQ0EsWUFBWSx1Q0FBdUM7QUFDbkQsWUFBWSxvQkFBb0I7QUFDaEM7QUFDQSxzQ0FBc0M7QUFDdEM7O0FBRUE7QUFDQSxzQkFBc0IsbURBQU87O0FBRTdCO0FBQ0EsdUJBQXVCLDREQUFrQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQSxzQkFBc0IsK0NBQUs7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBLFlBQVksUUFBUTtBQUNwQixZQUFZLFFBQVE7QUFDcEIsY0FBYyxhQUFhO0FBQzNCO0FBQ0E7QUFDQSxPQUFPLGlFQUFVO0FBQ2pCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTyxpQkFBaUI7QUFDeEIsVUFBVSxpQkFBaUI7QUFDM0IsTUFBTSxpQkFBaUI7QUFDdkIsY0FBYyxpQkFBaUI7QUFDL0IsY0FBYyxpQkFBaUI7QUFDL0IsV0FBVyxpQkFBaUI7QUFDNUIsU0FBUztBQUNULENBQUMiLCJzb3VyY2VzIjpbIi9ob21lL2FsdGNvaW4tZGFkZHkvRG93bmxvYWRzL293bmx5L25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9mZXRjaC9zcmMvcmVzcG9uc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXNwb25zZS5qc1xuICpcbiAqIFJlc3BvbnNlIGNsYXNzIHByb3ZpZGVzIGNvbnRlbnQgZGVjb2RpbmdcbiAqL1xuXG5pbXBvcnQgSGVhZGVycyBmcm9tICcuL2hlYWRlcnMuanMnO1xuaW1wb3J0IEJvZHksIHtjbG9uZSwgZXh0cmFjdENvbnRlbnRUeXBlfSBmcm9tICcuL2JvZHkuanMnO1xuaW1wb3J0IHtpc1JlZGlyZWN0fSBmcm9tICcuL3V0aWxzL2lzLXJlZGlyZWN0LmpzJztcblxuY29uc3QgSU5URVJOQUxTID0gU3ltYm9sKCdSZXNwb25zZSBpbnRlcm5hbHMnKTtcblxuLyoqXG4gKiBSZXNwb25zZSBjbGFzc1xuICogXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBFeHRcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBbc2l6ZV1cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBbdXJsXVxuICogQHByb3BlcnR5IHtudW1iZXJ9IFtjb3VudGVyXVxuICogQHByb3BlcnR5IHtudW1iZXJ9IFtoaWdoV2F0ZXJNYXJrXVxuICogXG4gKiBAaW1wbGVtZW50cyB7Z2xvYmFsVGhpcy5SZXNwb25zZX1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVzcG9uc2UgZXh0ZW5kcyBCb2R5IHtcblx0LyoqXG5cdCAqIEBwYXJhbSB7Qm9keUluaXR8aW1wb3J0KCdzdHJlYW0nKS5TdHJlYW18bnVsbH0gW2JvZHldIC0gUmVhZGFibGUgc3RyZWFtXG5cdCAqIEBwYXJhbSB7UmVzcG9uc2VJbml0ICYgRXh0fSBbb3B0aW9uc10gLSBSZXNwb25zZSBvcHRpb25zXG5cdCAqL1xuXHRjb25zdHJ1Y3Rvcihib2R5ID0gbnVsbCwgb3B0aW9ucyA9IHt9KSB7XG5cdFx0c3VwZXIoYm9keSwgb3B0aW9ucyk7XG5cblx0XHRjb25zdCBzdGF0dXMgPSBvcHRpb25zLnN0YXR1cyB8fCAyMDA7XG5cdFx0Y29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKG9wdGlvbnMuaGVhZGVycyk7XG5cblx0XHRpZiAoYm9keSAhPT0gbnVsbCAmJiAhaGVhZGVycy5oYXMoJ0NvbnRlbnQtVHlwZScpKSB7XG5cdFx0XHRjb25zdCBjb250ZW50VHlwZSA9IGV4dHJhY3RDb250ZW50VHlwZSh0aGlzKTtcblx0XHRcdGlmIChjb250ZW50VHlwZSkge1xuXHRcdFx0XHRoZWFkZXJzLmFwcGVuZCgnQ29udGVudC1UeXBlJywgY29udGVudFR5cGUpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8qKlxuXHRcdCAqIEBwcml2YXRlXG5cdFx0Ki9cblx0XHR0aGlzW0lOVEVSTkFMU10gPSB7XG5cdFx0XHR1cmw6IG9wdGlvbnMudXJsLFxuXHRcdFx0c3RhdHVzLFxuXHRcdFx0c3RhdHVzVGV4dDogb3B0aW9ucy5zdGF0dXNUZXh0IHx8ICcnLFxuXHRcdFx0aGVhZGVycyxcblx0XHRcdGNvdW50ZXI6IG9wdGlvbnMuY291bnRlciB8fCAwLFxuXHRcdFx0aGlnaFdhdGVyTWFyazogb3B0aW9ucy5oaWdoV2F0ZXJNYXJrXG5cdFx0fTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAdHlwZSB7UmVzcG9uc2VUeXBlfVxuXHQgKi9cblx0Z2V0IHR5cGUoKSB7XG5cdFx0cmV0dXJuIFwiZGVmYXVsdFwiXG5cdH1cblxuXHRnZXQgdXJsKCkge1xuXHRcdHJldHVybiB0aGlzW0lOVEVSTkFMU10udXJsIHx8ICcnO1xuXHR9XG5cblx0Z2V0IHN0YXR1cygpIHtcblx0XHRyZXR1cm4gdGhpc1tJTlRFUk5BTFNdLnN0YXR1cztcblx0fVxuXG5cdC8qKlxuXHQgKiBDb252ZW5pZW5jZSBwcm9wZXJ0eSByZXByZXNlbnRpbmcgaWYgdGhlIHJlcXVlc3QgZW5kZWQgbm9ybWFsbHlcblx0ICovXG5cdGdldCBvaygpIHtcblx0XHRyZXR1cm4gdGhpc1tJTlRFUk5BTFNdLnN0YXR1cyA+PSAyMDAgJiYgdGhpc1tJTlRFUk5BTFNdLnN0YXR1cyA8IDMwMDtcblx0fVxuXG5cdGdldCByZWRpcmVjdGVkKCkge1xuXHRcdHJldHVybiB0aGlzW0lOVEVSTkFMU10uY291bnRlciA+IDA7XG5cdH1cblxuXHRnZXQgc3RhdHVzVGV4dCgpIHtcblx0XHRyZXR1cm4gdGhpc1tJTlRFUk5BTFNdLnN0YXR1c1RleHQ7XG5cdH1cblxuXHQvKipcblx0ICogQHR5cGUge0hlYWRlcnN9XG5cdCAqL1xuXHRnZXQgaGVhZGVycygpIHtcblx0XHRyZXR1cm4gdGhpc1tJTlRFUk5BTFNdLmhlYWRlcnM7XG5cdH1cblxuXHRnZXQgaGlnaFdhdGVyTWFyaygpIHtcblx0XHRyZXR1cm4gdGhpc1tJTlRFUk5BTFNdLmhpZ2hXYXRlck1hcms7XG5cdH1cblxuXHQvKipcblx0ICogQ2xvbmUgdGhpcyByZXNwb25zZVxuXHQgKlxuXHQgKiBAcmV0dXJucyB7UmVzcG9uc2V9XG5cdCAqL1xuXHRjbG9uZSgpIHtcblx0XHRyZXR1cm4gbmV3IFJlc3BvbnNlKGNsb25lKHRoaXMpLCB7XG5cdFx0XHR1cmw6IHRoaXMudXJsLFxuXHRcdFx0c3RhdHVzOiB0aGlzLnN0YXR1cyxcblx0XHRcdHN0YXR1c1RleHQ6IHRoaXMuc3RhdHVzVGV4dCxcblx0XHRcdGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcblx0XHRcdHNpemU6IHRoaXMuc2l6ZVxuXHRcdH0pO1xuXHR9XG5cblx0LyoqXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgICAgVGhlIFVSTCB0aGF0IHRoZSBuZXcgcmVzcG9uc2UgaXMgdG8gb3JpZ2luYXRlIGZyb20uXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSBzdGF0dXMgQW4gb3B0aW9uYWwgc3RhdHVzIGNvZGUgZm9yIHRoZSByZXNwb25zZSAoZS5nLiwgMzAyLilcblx0ICogQHJldHVybnMge1Jlc3BvbnNlfSAgICBBIFJlc3BvbnNlIG9iamVjdC5cblx0ICovXG5cdHN0YXRpYyByZWRpcmVjdCh1cmwsIHN0YXR1cyA9IDMwMikge1xuXHRcdGlmICghaXNSZWRpcmVjdChzdGF0dXMpKSB7XG5cdFx0XHR0aHJvdyBuZXcgUmFuZ2VFcnJvcignRmFpbGVkIHRvIGV4ZWN1dGUgXCJyZWRpcmVjdFwiIG9uIFwicmVzcG9uc2VcIjogSW52YWxpZCBzdGF0dXMgY29kZScpO1xuXHRcdH1cblxuXHRcdHJldHVybiBuZXcgUmVzcG9uc2UobnVsbCwge1xuXHRcdFx0aGVhZGVyczoge1xuXHRcdFx0XHRsb2NhdGlvbjogbmV3IFVSTCh1cmwpLnRvU3RyaW5nKClcblx0XHRcdH0sXG5cdFx0XHRzdGF0dXNcblx0XHR9KTtcblx0fVxuXG5cdGdldCBbU3ltYm9sLnRvU3RyaW5nVGFnXSgpIHtcblx0XHRyZXR1cm4gJ1Jlc3BvbnNlJztcblx0fVxufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhSZXNwb25zZS5wcm90b3R5cGUsIHtcblx0dXJsOiB7ZW51bWVyYWJsZTogdHJ1ZX0sXG5cdHN0YXR1czoge2VudW1lcmFibGU6IHRydWV9LFxuXHRvazoge2VudW1lcmFibGU6IHRydWV9LFxuXHRyZWRpcmVjdGVkOiB7ZW51bWVyYWJsZTogdHJ1ZX0sXG5cdHN0YXR1c1RleHQ6IHtlbnVtZXJhYmxlOiB0cnVlfSxcblx0aGVhZGVyczoge2VudW1lcmFibGU6IHRydWV9LFxuXHRjbG9uZToge2VudW1lcmFibGU6IHRydWV9XG59KTtcblxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/fetch/src/response.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/fetch/src/utils/form-data.js":
/*!************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/form-data.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formDataIterator: () => (/* binding */ formDataIterator),\n/* harmony export */   getBoundary: () => (/* binding */ getBoundary),\n/* harmony export */   getFormDataLength: () => (/* binding */ getFormDataLength),\n/* harmony export */   toFormData: () => (/* binding */ toFormData)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _web3_storage_multipart_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/multipart-parser */ \"(rsc)/./node_modules/@web3-storage/multipart-parser/esm/src/index.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../package.js */ \"(rsc)/./node_modules/@web-std/form-data/src/lib.node.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../package.js */ \"(rsc)/./node_modules/@web-std/file/src/lib.node.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is.js */ \"(rsc)/./node_modules/@web-std/fetch/src/utils/is.js\");\n\n\n\n\n\nconst carriage = '\\r\\n';\nconst dashes = '-'.repeat(2);\nconst carriageLength = Buffer.byteLength(carriage);\n\n/**\n * @param {string} boundary\n */\nconst getFooter = boundary => `${dashes}${boundary}${dashes}${carriage.repeat(2)}`;\n\n/**\n * @param {string} boundary\n * @param {string} name\n * @param {*} field\n *\n * @return {string}\n */\nfunction getHeader(boundary, name, field) {\n\tlet header = '';\n\n\theader += `${dashes}${boundary}${carriage}`;\n\theader += `Content-Disposition: form-data; name=\"${name}\"`;\n\n\tif ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(field)) {\n\t\tconst { name = 'blob', type } = /** @type {Blob & {name?:string}} */ (field);\n\t\theader += `; filename=\"${name}\"${carriage}`;\n\t\theader += `Content-Type: ${type || 'application/octet-stream'}`;\n\t}\n\n\treturn `${header}${carriage.repeat(2)}`;\n}\n\n/**\n * @return {string}\n */\nconst getBoundary = () => (0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(8).toString('hex');\n\n/**\n * @param {FormData} form\n * @param {string} boundary\n */\nasync function * formDataIterator(form, boundary) {\n\tconst encoder = new TextEncoder();\n\tfor (const [name, value] of form) {\n\t\tyield encoder.encode(getHeader(boundary, name, value));\n\n\t\tif ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(value)) {\n\t\t\t// @ts-ignore - we know our streams implement aysnc iteration\n\t\t\tyield * value.stream();\n\t\t} else {\n\t\t\tyield encoder.encode(value);\n\t\t}\n\n\t\tyield encoder.encode(carriage);\n\t}\n\n\tyield encoder.encode(getFooter(boundary));\n}\n\n/**\n * @param {FormData} form\n * @param {string} boundary\n */\nfunction getFormDataLength(form, boundary) {\n\tlet length = 0;\n\n\tfor (const [name, value] of form) {\n\t\tlength += Buffer.byteLength(getHeader(boundary, name, value));\n\n\t\tif ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(value)) {\n\t\t\tlength += value.size;\n\t\t} else {\n\t\t\tlength += Buffer.byteLength(String(value));\n\t\t}\n\n\t\tlength += carriageLength;\n\t}\n\n\tlength += Buffer.byteLength(getFooter(boundary));\n\n\treturn length;\n}\n\n/**\n * @param {Body & {headers?:Headers}} source\n */\nconst toFormData = async (source) => {\n  let { body, headers } = source;\n  const contentType = headers?.get('Content-Type') || ''\n\n  if (contentType.startsWith('application/x-www-form-urlencoded') && body != null) {\n\tconst form = new _package_js__WEBPACK_IMPORTED_MODULE_3__.FormData();\n\tlet bodyText = await source.text();\n\tnew URLSearchParams(bodyText).forEach((v, k) => form.append(k, v));\n\treturn form;\n  }\n\n  const [type, boundary] = contentType.split(/\\s*;\\s*boundary=/)\n  if (type === 'multipart/form-data' && boundary != null && body != null) {\n    const form = new _package_js__WEBPACK_IMPORTED_MODULE_3__.FormData()\n    const parts = (0,_web3_storage_multipart_parser__WEBPACK_IMPORTED_MODULE_1__.iterateMultipart)(body, boundary)\n    for await (const { name, data, filename, contentType } of parts) {\n      if (typeof filename === 'string') {\n        form.append(name, new _package_js__WEBPACK_IMPORTED_MODULE_4__.File([data], filename, { type: contentType }))\n      } else if (typeof filename !== 'undefined') {\n        form.append(name, new _package_js__WEBPACK_IMPORTED_MODULE_4__.File([], '', { type: contentType }))\n      } else {\n        form.append(name, new TextDecoder().decode(data), filename)\n      }\n    }\n    return form\n  } else {\n    throw new TypeError('Could not parse content as FormData.')\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2Zvcm0tZGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBbUM7QUFDK0I7QUFDbkI7QUFDZDs7QUFFakM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsaUNBQWlDLE9BQU8sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLG1CQUFtQjs7QUFFakY7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUztBQUMzQyw0Q0FBNEMsUUFBUSxLQUFLOztBQUV6RCxLQUFLLDhDQUFNO0FBQ1gsVUFBVSxzQkFBc0IsYUFBYSxRQUFRLGVBQWU7QUFDcEUsZUFBZSxZQUFZLEtBQUssR0FBRyxTQUFTO0FBQzVDLDZCQUE2QixtQ0FBbUM7QUFDaEU7O0FBRUEsV0FBVyxPQUFPLEVBQUUsbUJBQW1CO0FBQ3ZDOztBQUVBO0FBQ0EsWUFBWTtBQUNaO0FBQ08sMEJBQTBCLG1EQUFXOztBQUU1QztBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkI7QUFDTztBQUNQO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLDhDQUFNO0FBQ1o7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkI7QUFDTztBQUNQOztBQUVBO0FBQ0E7O0FBRUEsTUFBTSw4Q0FBTTtBQUNaO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRLG1CQUFtQjtBQUN0QztBQUNPO0FBQ1AsUUFBUSxnQkFBZ0I7QUFDeEI7O0FBRUE7QUFDQSxrQkFBa0IsaURBQVE7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0RBQWtEO0FBQ2xEO0FBQ0EscUJBQXFCLGlEQUFRO0FBQzdCLGtCQUFrQixnRkFBZ0I7QUFDbEMsdUJBQXVCLG9DQUFvQztBQUMzRDtBQUNBLDhCQUE4Qiw2Q0FBSSxxQkFBcUIsbUJBQW1CO0FBQzFFLFFBQVE7QUFDUiw4QkFBOEIsNkNBQUksV0FBVyxtQkFBbUI7QUFDaEUsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvYWx0Y29pbi1kYWRkeS9Eb3dubG9hZHMvb3dubHkvbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2ZldGNoL3NyYy91dGlscy9mb3JtLWRhdGEuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtyYW5kb21CeXRlc30gZnJvbSAnY3J5cHRvJztcbmltcG9ydCB7IGl0ZXJhdGVNdWx0aXBhcnQgfSBmcm9tICdAd2ViMy1zdG9yYWdlL211bHRpcGFydC1wYXJzZXInO1xuaW1wb3J0IHsgRm9ybURhdGEsIEZpbGUgfSBmcm9tICcuLi9wYWNrYWdlLmpzJztcbmltcG9ydCB7IGlzQmxvYiB9IGZyb20gJy4vaXMuanMnO1xuXG5jb25zdCBjYXJyaWFnZSA9ICdcXHJcXG4nO1xuY29uc3QgZGFzaGVzID0gJy0nLnJlcGVhdCgyKTtcbmNvbnN0IGNhcnJpYWdlTGVuZ3RoID0gQnVmZmVyLmJ5dGVMZW5ndGgoY2FycmlhZ2UpO1xuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBib3VuZGFyeVxuICovXG5jb25zdCBnZXRGb290ZXIgPSBib3VuZGFyeSA9PiBgJHtkYXNoZXN9JHtib3VuZGFyeX0ke2Rhc2hlc30ke2NhcnJpYWdlLnJlcGVhdCgyKX1gO1xuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBib3VuZGFyeVxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7Kn0gZmllbGRcbiAqXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGdldEhlYWRlcihib3VuZGFyeSwgbmFtZSwgZmllbGQpIHtcblx0bGV0IGhlYWRlciA9ICcnO1xuXG5cdGhlYWRlciArPSBgJHtkYXNoZXN9JHtib3VuZGFyeX0ke2NhcnJpYWdlfWA7XG5cdGhlYWRlciArPSBgQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPVwiJHtuYW1lfVwiYDtcblxuXHRpZiAoaXNCbG9iKGZpZWxkKSkge1xuXHRcdGNvbnN0IHsgbmFtZSA9ICdibG9iJywgdHlwZSB9ID0gLyoqIEB0eXBlIHtCbG9iICYge25hbWU/OnN0cmluZ319ICovIChmaWVsZCk7XG5cdFx0aGVhZGVyICs9IGA7IGZpbGVuYW1lPVwiJHtuYW1lfVwiJHtjYXJyaWFnZX1gO1xuXHRcdGhlYWRlciArPSBgQ29udGVudC1UeXBlOiAke3R5cGUgfHwgJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSd9YDtcblx0fVxuXG5cdHJldHVybiBgJHtoZWFkZXJ9JHtjYXJyaWFnZS5yZXBlYXQoMil9YDtcbn1cblxuLyoqXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBnZXRCb3VuZGFyeSA9ICgpID0+IHJhbmRvbUJ5dGVzKDgpLnRvU3RyaW5nKCdoZXgnKTtcblxuLyoqXG4gKiBAcGFyYW0ge0Zvcm1EYXRhfSBmb3JtXG4gKiBAcGFyYW0ge3N0cmluZ30gYm91bmRhcnlcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uICogZm9ybURhdGFJdGVyYXRvcihmb3JtLCBib3VuZGFyeSkge1xuXHRjb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5cdGZvciAoY29uc3QgW25hbWUsIHZhbHVlXSBvZiBmb3JtKSB7XG5cdFx0eWllbGQgZW5jb2Rlci5lbmNvZGUoZ2V0SGVhZGVyKGJvdW5kYXJ5LCBuYW1lLCB2YWx1ZSkpO1xuXG5cdFx0aWYgKGlzQmxvYih2YWx1ZSkpIHtcblx0XHRcdC8vIEB0cy1pZ25vcmUgLSB3ZSBrbm93IG91ciBzdHJlYW1zIGltcGxlbWVudCBheXNuYyBpdGVyYXRpb25cblx0XHRcdHlpZWxkICogdmFsdWUuc3RyZWFtKCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHlpZWxkIGVuY29kZXIuZW5jb2RlKHZhbHVlKTtcblx0XHR9XG5cblx0XHR5aWVsZCBlbmNvZGVyLmVuY29kZShjYXJyaWFnZSk7XG5cdH1cblxuXHR5aWVsZCBlbmNvZGVyLmVuY29kZShnZXRGb290ZXIoYm91bmRhcnkpKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0Zvcm1EYXRhfSBmb3JtXG4gKiBAcGFyYW0ge3N0cmluZ30gYm91bmRhcnlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEZvcm1EYXRhTGVuZ3RoKGZvcm0sIGJvdW5kYXJ5KSB7XG5cdGxldCBsZW5ndGggPSAwO1xuXG5cdGZvciAoY29uc3QgW25hbWUsIHZhbHVlXSBvZiBmb3JtKSB7XG5cdFx0bGVuZ3RoICs9IEJ1ZmZlci5ieXRlTGVuZ3RoKGdldEhlYWRlcihib3VuZGFyeSwgbmFtZSwgdmFsdWUpKTtcblxuXHRcdGlmIChpc0Jsb2IodmFsdWUpKSB7XG5cdFx0XHRsZW5ndGggKz0gdmFsdWUuc2l6ZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bGVuZ3RoICs9IEJ1ZmZlci5ieXRlTGVuZ3RoKFN0cmluZyh2YWx1ZSkpO1xuXHRcdH1cblxuXHRcdGxlbmd0aCArPSBjYXJyaWFnZUxlbmd0aDtcblx0fVxuXG5cdGxlbmd0aCArPSBCdWZmZXIuYnl0ZUxlbmd0aChnZXRGb290ZXIoYm91bmRhcnkpKTtcblxuXHRyZXR1cm4gbGVuZ3RoO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7Qm9keSAmIHtoZWFkZXJzPzpIZWFkZXJzfX0gc291cmNlXG4gKi9cbmV4cG9ydCBjb25zdCB0b0Zvcm1EYXRhID0gYXN5bmMgKHNvdXJjZSkgPT4ge1xuICBsZXQgeyBib2R5LCBoZWFkZXJzIH0gPSBzb3VyY2U7XG4gIGNvbnN0IGNvbnRlbnRUeXBlID0gaGVhZGVycz8uZ2V0KCdDb250ZW50LVR5cGUnKSB8fCAnJ1xuXG4gIGlmIChjb250ZW50VHlwZS5zdGFydHNXaXRoKCdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnKSAmJiBib2R5ICE9IG51bGwpIHtcblx0Y29uc3QgZm9ybSA9IG5ldyBGb3JtRGF0YSgpO1xuXHRsZXQgYm9keVRleHQgPSBhd2FpdCBzb3VyY2UudGV4dCgpO1xuXHRuZXcgVVJMU2VhcmNoUGFyYW1zKGJvZHlUZXh0KS5mb3JFYWNoKCh2LCBrKSA9PiBmb3JtLmFwcGVuZChrLCB2KSk7XG5cdHJldHVybiBmb3JtO1xuICB9XG5cbiAgY29uc3QgW3R5cGUsIGJvdW5kYXJ5XSA9IGNvbnRlbnRUeXBlLnNwbGl0KC9cXHMqO1xccypib3VuZGFyeT0vKVxuICBpZiAodHlwZSA9PT0gJ211bHRpcGFydC9mb3JtLWRhdGEnICYmIGJvdW5kYXJ5ICE9IG51bGwgJiYgYm9keSAhPSBudWxsKSB7XG4gICAgY29uc3QgZm9ybSA9IG5ldyBGb3JtRGF0YSgpXG4gICAgY29uc3QgcGFydHMgPSBpdGVyYXRlTXVsdGlwYXJ0KGJvZHksIGJvdW5kYXJ5KVxuICAgIGZvciBhd2FpdCAoY29uc3QgeyBuYW1lLCBkYXRhLCBmaWxlbmFtZSwgY29udGVudFR5cGUgfSBvZiBwYXJ0cykge1xuICAgICAgaWYgKHR5cGVvZiBmaWxlbmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZm9ybS5hcHBlbmQobmFtZSwgbmV3IEZpbGUoW2RhdGFdLCBmaWxlbmFtZSwgeyB0eXBlOiBjb250ZW50VHlwZSB9KSlcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGZpbGVuYW1lICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBmb3JtLmFwcGVuZChuYW1lLCBuZXcgRmlsZShbXSwgJycsIHsgdHlwZTogY29udGVudFR5cGUgfSkpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmb3JtLmFwcGVuZChuYW1lLCBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoZGF0YSksIGZpbGVuYW1lKVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZm9ybVxuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0NvdWxkIG5vdCBwYXJzZSBjb250ZW50IGFzIEZvcm1EYXRhLicpXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/fetch/src/utils/form-data.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/fetch/src/utils/get-search.js":
/*!*************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/get-search.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSearch: () => (/* binding */ getSearch)\n/* harmony export */ });\n/**\n * @param {URL} parsedURL \n * @returns {string}\n */\nconst getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2dldC1zZWFyY2guanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2dldC1zZWFyY2guanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAcGFyYW0ge1VSTH0gcGFyc2VkVVJMIFxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZXhwb3J0IGNvbnN0IGdldFNlYXJjaCA9IHBhcnNlZFVSTCA9PiB7XG5cdGlmIChwYXJzZWRVUkwuc2VhcmNoKSB7XG5cdFx0cmV0dXJuIHBhcnNlZFVSTC5zZWFyY2g7XG5cdH1cblxuXHRjb25zdCBsYXN0T2Zmc2V0ID0gcGFyc2VkVVJMLmhyZWYubGVuZ3RoIC0gMTtcblx0Y29uc3QgaGFzaCA9IHBhcnNlZFVSTC5oYXNoIHx8IChwYXJzZWRVUkwuaHJlZltsYXN0T2Zmc2V0XSA9PT0gJyMnID8gJyMnIDogJycpO1xuXHRyZXR1cm4gcGFyc2VkVVJMLmhyZWZbbGFzdE9mZnNldCAtIGhhc2gubGVuZ3RoXSA9PT0gJz8nID8gJz8nIDogJyc7XG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/fetch/src/utils/get-search.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/fetch/src/utils/is-redirect.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/is-redirect.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isRedirect: () => (/* binding */ isRedirect)\n/* harmony export */ });\nconst redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nconst isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2lzLXJlZGlyZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2lzLXJlZGlyZWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlZGlyZWN0U3RhdHVzID0gbmV3IFNldChbMzAxLCAzMDIsIDMwMywgMzA3LCAzMDhdKTtcblxuLyoqXG4gKiBSZWRpcmVjdCBjb2RlIG1hdGNoaW5nXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IGNvZGUgLSBTdGF0dXMgY29kZVxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzUmVkaXJlY3QgPSBjb2RlID0+IHtcblx0cmV0dXJuIHJlZGlyZWN0U3RhdHVzLmhhcyhjb2RlKTtcbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/fetch/src/utils/is-redirect.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/fetch/src/utils/is.js":
/*!*****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/is.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAbortSignal: () => (/* binding */ isAbortSignal),\n/* harmony export */   isBlob: () => (/* binding */ isBlob),\n/* harmony export */   isFormData: () => (/* binding */ isFormData),\n/* harmony export */   isIterable: () => (/* binding */ isIterable),\n/* harmony export */   isMultipartFormDataStream: () => (/* binding */ isMultipartFormDataStream),\n/* harmony export */   isReadableStream: () => (/* binding */ isReadableStream),\n/* harmony export */   isURLSearchParameters: () => (/* binding */ isURLSearchParameters)\n/* harmony export */ });\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n\n\n/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n *\n * @param  {any} object\n * @return {obj is URLSearchParams}\n */\nconst isURLSearchParameters = (object) => {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\ttypeof object.append === \"function\" &&\n\t\ttypeof object.delete === \"function\" &&\n\t\ttypeof object.get === \"function\" &&\n\t\ttypeof object.getAll === \"function\" &&\n\t\ttypeof object.has === \"function\" &&\n\t\ttypeof object.set === \"function\" &&\n\t\ttypeof object.sort === \"function\" &&\n\t\tobject[NAME] === \"URLSearchParams\"\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n *\n * @param  {*} object\n * @return {object is Blob}\n */\nconst isBlob = (object) => {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\ttypeof object.arrayBuffer === \"function\" &&\n\t\ttypeof object.type === \"string\" &&\n\t\ttypeof object.stream === \"function\" &&\n\t\ttypeof object.constructor === \"function\" &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is a spec-compliant `FormData` object\n *\n * @param {*} object\n * @return {object is FormData}\n */\nfunction isFormData(object) {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\ttypeof object.append === \"function\" &&\n\t\ttypeof object.set === \"function\" &&\n\t\ttypeof object.get === \"function\" &&\n\t\ttypeof object.getAll === \"function\" &&\n\t\ttypeof object.delete === \"function\" &&\n\t\ttypeof object.keys === \"function\" &&\n\t\ttypeof object.values === \"function\" &&\n\t\ttypeof object.entries === \"function\" &&\n\t\ttypeof object.constructor === \"function\" &&\n\t\tobject[NAME] === \"FormData\"\n\t);\n}\n\n/**\n * Detect form data input from form-data module\n *\n * @param {any} value\n * @returns {value is Stream & {getBoundary():string, hasKnownLength():boolean, getLengthSync():number|null}}\n */\nconst isMultipartFormDataStream = (value) => {\n\treturn (\n\t\tvalue instanceof stream__WEBPACK_IMPORTED_MODULE_0__ === true &&\n\t\ttypeof value.getBoundary === \"function\" &&\n\t\ttypeof value.hasKnownLength === \"function\" &&\n\t\ttypeof value.getLengthSync === \"function\"\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n *\n * @param  {any} object\n * @return {obj is AbortSignal}\n */\nconst isAbortSignal = (object) => {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\t(object[NAME] === \"AbortSignal\" || object[NAME] === \"EventTarget\")\n\t);\n};\n\n/**\n * Check if `value` is a ReadableStream.\n *\n * @param {*} value\n * @returns {value is ReadableStream}\n */\nconst isReadableStream = (value) => {\n\treturn (\n\t\ttypeof value === \"object\" &&\n\t\ttypeof value.getReader === \"function\" &&\n\t\ttypeof value.cancel === \"function\" &&\n\t\ttypeof value.tee === \"function\"\n\t);\n};\n\n/**\n *\n * @param {any} value\n * @returns {value is Iterable<unknown>}\n */\nconst isIterable = (value) => value && Symbol.iterator in value;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2lzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTRCOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxLQUFLO0FBQ2pCLFlBQVk7QUFDWjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVksR0FBRztBQUNmLFlBQVk7QUFDWjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLFlBQVk7QUFDWjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYSxtQkFBbUI7QUFDaEM7QUFDTztBQUNQO0FBQ0EsbUJBQW1CLG1DQUFNO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWSxLQUFLO0FBQ2pCLFlBQVk7QUFDWjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ08iLCJzb3VyY2VzIjpbIi9ob21lL2FsdGNvaW4tZGFkZHkvRG93bmxvYWRzL293bmx5L25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9mZXRjaC9zcmMvdXRpbHMvaXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN0cmVhbSBmcm9tIFwic3RyZWFtXCI7XG5cbi8qKlxuICogSXMuanNcbiAqXG4gKiBPYmplY3QgdHlwZSBjaGVja3MuXG4gKi9cblxuY29uc3QgTkFNRSA9IFN5bWJvbC50b1N0cmluZ1RhZztcblxuLyoqXG4gKiBDaGVjayBpZiBgb2JqYCBpcyBhIFVSTFNlYXJjaFBhcmFtcyBvYmplY3RcbiAqIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL25vZGUtZmV0Y2gvbm9kZS1mZXRjaC9pc3N1ZXMvMjk2I2lzc3VlY29tbWVudC0zMDc1OTgxNDNcbiAqXG4gKiBAcGFyYW0gIHthbnl9IG9iamVjdFxuICogQHJldHVybiB7b2JqIGlzIFVSTFNlYXJjaFBhcmFtc31cbiAqL1xuZXhwb3J0IGNvbnN0IGlzVVJMU2VhcmNoUGFyYW1ldGVycyA9IChvYmplY3QpID0+IHtcblx0cmV0dXJuIChcblx0XHR0eXBlb2Ygb2JqZWN0ID09PSBcIm9iamVjdFwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5hcHBlbmQgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuZGVsZXRlID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2Ygb2JqZWN0LmdldCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5nZXRBbGwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuaGFzID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2Ygb2JqZWN0LnNldCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5zb3J0ID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHRvYmplY3RbTkFNRV0gPT09IFwiVVJMU2VhcmNoUGFyYW1zXCJcblx0KTtcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgYG9iamVjdGAgaXMgYSBXM0MgYEJsb2JgIG9iamVjdCAod2hpY2ggYEZpbGVgIGluaGVyaXRzIGZyb20pXG4gKlxuICogQHBhcmFtICB7Kn0gb2JqZWN0XG4gKiBAcmV0dXJuIHtvYmplY3QgaXMgQmxvYn1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzQmxvYiA9IChvYmplY3QpID0+IHtcblx0cmV0dXJuIChcblx0XHR0eXBlb2Ygb2JqZWN0ID09PSBcIm9iamVjdFwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5hcnJheUJ1ZmZlciA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC50eXBlID09PSBcInN0cmluZ1wiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5zdHJlYW0gPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuY29uc3RydWN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdC9eKEJsb2J8RmlsZSkkLy50ZXN0KG9iamVjdFtOQU1FXSlcblx0KTtcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgYG9iamAgaXMgYSBzcGVjLWNvbXBsaWFudCBgRm9ybURhdGFgIG9iamVjdFxuICpcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0XG4gKiBAcmV0dXJuIHtvYmplY3QgaXMgRm9ybURhdGF9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0Zvcm1EYXRhKG9iamVjdCkge1xuXHRyZXR1cm4gKFxuXHRcdHR5cGVvZiBvYmplY3QgPT09IFwib2JqZWN0XCIgJiZcblx0XHR0eXBlb2Ygb2JqZWN0LmFwcGVuZCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5zZXQgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuZ2V0ID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2Ygb2JqZWN0LmdldEFsbCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5kZWxldGUgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3Qua2V5cyA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC52YWx1ZXMgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuZW50cmllcyA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5jb25zdHJ1Y3RvciA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0b2JqZWN0W05BTUVdID09PSBcIkZvcm1EYXRhXCJcblx0KTtcbn1cblxuLyoqXG4gKiBEZXRlY3QgZm9ybSBkYXRhIGlucHV0IGZyb20gZm9ybS1kYXRhIG1vZHVsZVxuICpcbiAqIEBwYXJhbSB7YW55fSB2YWx1ZVxuICogQHJldHVybnMge3ZhbHVlIGlzIFN0cmVhbSAmIHtnZXRCb3VuZGFyeSgpOnN0cmluZywgaGFzS25vd25MZW5ndGgoKTpib29sZWFuLCBnZXRMZW5ndGhTeW5jKCk6bnVtYmVyfG51bGx9fVxuICovXG5leHBvcnQgY29uc3QgaXNNdWx0aXBhcnRGb3JtRGF0YVN0cmVhbSA9ICh2YWx1ZSkgPT4ge1xuXHRyZXR1cm4gKFxuXHRcdHZhbHVlIGluc3RhbmNlb2YgU3RyZWFtID09PSB0cnVlICYmXG5cdFx0dHlwZW9mIHZhbHVlLmdldEJvdW5kYXJ5ID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgdmFsdWUuaGFzS25vd25MZW5ndGggPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiB2YWx1ZS5nZXRMZW5ndGhTeW5jID09PSBcImZ1bmN0aW9uXCJcblx0KTtcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgYG9iamAgaXMgYW4gaW5zdGFuY2Ugb2YgQWJvcnRTaWduYWwuXG4gKlxuICogQHBhcmFtICB7YW55fSBvYmplY3RcbiAqIEByZXR1cm4ge29iaiBpcyBBYm9ydFNpZ25hbH1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzQWJvcnRTaWduYWwgPSAob2JqZWN0KSA9PiB7XG5cdHJldHVybiAoXG5cdFx0dHlwZW9mIG9iamVjdCA9PT0gXCJvYmplY3RcIiAmJlxuXHRcdChvYmplY3RbTkFNRV0gPT09IFwiQWJvcnRTaWduYWxcIiB8fCBvYmplY3RbTkFNRV0gPT09IFwiRXZlbnRUYXJnZXRcIilcblx0KTtcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgYHZhbHVlYCBpcyBhIFJlYWRhYmxlU3RyZWFtLlxuICpcbiAqIEBwYXJhbSB7Kn0gdmFsdWVcbiAqIEByZXR1cm5zIHt2YWx1ZSBpcyBSZWFkYWJsZVN0cmVhbX1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzUmVhZGFibGVTdHJlYW0gPSAodmFsdWUpID0+IHtcblx0cmV0dXJuIChcblx0XHR0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiZcblx0XHR0eXBlb2YgdmFsdWUuZ2V0UmVhZGVyID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgdmFsdWUuY2FuY2VsID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgdmFsdWUudGVlID09PSBcImZ1bmN0aW9uXCJcblx0KTtcbn07XG5cbi8qKlxuICpcbiAqIEBwYXJhbSB7YW55fSB2YWx1ZVxuICogQHJldHVybnMge3ZhbHVlIGlzIEl0ZXJhYmxlPHVua25vd24+fVxuICovXG5leHBvcnQgY29uc3QgaXNJdGVyYWJsZSA9ICh2YWx1ZSkgPT4gdmFsdWUgJiYgU3ltYm9sLml0ZXJhdG9yIGluIHZhbHVlO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/fetch/src/utils/is.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/fetch/src/utils/utf8.js":
/*!*******************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/utf8.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! util */ \"util\");\n\n\nconst encoder = new util__WEBPACK_IMPORTED_MODULE_0__.TextEncoder();\nconst decoder = new util__WEBPACK_IMPORTED_MODULE_0__.TextDecoder();\n\n/**\n * @param {string} text\n */\nconst encode = text => encoder.encode(text);\n\n/**\n * @param {Uint8Array} bytes\n */\nconst decode = bytes => decoder.decode(bytes);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL3V0ZjguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThDOztBQUU5QyxvQkFBb0IsNkNBQVc7QUFDL0Isb0JBQW9CLDZDQUFXOztBQUUvQjtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNPOztBQUVQO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ08iLCJzb3VyY2VzIjpbIi9ob21lL2FsdGNvaW4tZGFkZHkvRG93bmxvYWRzL293bmx5L25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9mZXRjaC9zcmMvdXRpbHMvdXRmOC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1RleHRFbmNvZGVyLCBUZXh0RGVjb2Rlcn0gZnJvbSAndXRpbCc7XG5cbmNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbmNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdGV4dFxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlID0gdGV4dCA9PiBlbmNvZGVyLmVuY29kZSh0ZXh0KTtcblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gKi9cbmV4cG9ydCBjb25zdCBkZWNvZGUgPSBieXRlcyA9PiBkZWNvZGVyLmRlY29kZShieXRlcyk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/fetch/src/utils/utf8.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/file/src/file.js":
/*!************************************************!*\
  !*** ./node_modules/@web-std/file/src/file.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   File: () => (/* binding */ File)\n/* harmony export */ });\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(rsc)/./node_modules/@web-std/file/src/package.js\");\n\n\n/**\n * @implements {globalThis.File}\n */\nclass File extends _package_js__WEBPACK_IMPORTED_MODULE_0__.Blob {\n  /**\n   *\n   * @param {BlobPart[]} init\n   * @param {string} name - A USVString representing the file name or the path\n   * to the file.\n   * @param {FilePropertyBag} [options]\n   */\n  constructor(\n    init,\n    name = panic(new TypeError(\"File constructor requires name argument\")),\n    options = {}\n  ) {\n    super(init, options)\n    // Per File API spec https://w3c.github.io/FileAPI/#file-constructor\n    // Every \"/\" character of file name must be replaced with a \":\".\n    /** @private */\n    this._name = name\n    // It appears that browser do not follow the spec here.\n    // String(name).replace(/\\//g, \":\")\n    /** @private */\n    this._lastModified = options.lastModified || Date.now()\n  }\n\n  /**\n   * The name of the file referenced by the File object.\n   * @type {string}\n   */\n  get name() {\n    return this._name\n  }\n\n  /**\n   * The path the URL of the File is relative to.\n   * @type {string}\n   */\n  get webkitRelativePath() {\n    return \"\"\n  }\n\n  /**\n   * Returns the last modified time of the file, in millisecond since the UNIX\n   * epoch (January 1st, 1970 at Midnight).\n   * @returns {number}\n   */\n  get lastModified() {\n    return this._lastModified\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"File\"\n  }\n}\n\n/**\n * @param {*} error\n * @returns {never}\n */\nconst panic = error => {\n  throw error\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmlsZS9zcmMvZmlsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtQzs7QUFFbkM7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDTyxtQkFBbUIsNkNBQUk7QUFDOUI7QUFDQTtBQUNBLGFBQWEsWUFBWTtBQUN6QixhQUFhLFFBQVE7QUFDckI7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmlsZS9zcmMvZmlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCbG9iIH0gZnJvbSBcIi4vcGFja2FnZS5qc1wiXG5cbi8qKlxuICogQGltcGxlbWVudHMge2dsb2JhbFRoaXMuRmlsZX1cbiAqL1xuZXhwb3J0IGNsYXNzIEZpbGUgZXh0ZW5kcyBCbG9iIHtcbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSB7QmxvYlBhcnRbXX0gaW5pdFxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIEEgVVNWU3RyaW5nIHJlcHJlc2VudGluZyB0aGUgZmlsZSBuYW1lIG9yIHRoZSBwYXRoXG4gICAqIHRvIHRoZSBmaWxlLlxuICAgKiBAcGFyYW0ge0ZpbGVQcm9wZXJ0eUJhZ30gW29wdGlvbnNdXG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICBpbml0LFxuICAgIG5hbWUgPSBwYW5pYyhuZXcgVHlwZUVycm9yKFwiRmlsZSBjb25zdHJ1Y3RvciByZXF1aXJlcyBuYW1lIGFyZ3VtZW50XCIpKSxcbiAgICBvcHRpb25zID0ge31cbiAgKSB7XG4gICAgc3VwZXIoaW5pdCwgb3B0aW9ucylcbiAgICAvLyBQZXIgRmlsZSBBUEkgc3BlYyBodHRwczovL3czYy5naXRodWIuaW8vRmlsZUFQSS8jZmlsZS1jb25zdHJ1Y3RvclxuICAgIC8vIEV2ZXJ5IFwiL1wiIGNoYXJhY3RlciBvZiBmaWxlIG5hbWUgbXVzdCBiZSByZXBsYWNlZCB3aXRoIGEgXCI6XCIuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgdGhpcy5fbmFtZSA9IG5hbWVcbiAgICAvLyBJdCBhcHBlYXJzIHRoYXQgYnJvd3NlciBkbyBub3QgZm9sbG93IHRoZSBzcGVjIGhlcmUuXG4gICAgLy8gU3RyaW5nKG5hbWUpLnJlcGxhY2UoL1xcLy9nLCBcIjpcIilcbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICB0aGlzLl9sYXN0TW9kaWZpZWQgPSBvcHRpb25zLmxhc3RNb2RpZmllZCB8fCBEYXRlLm5vdygpXG4gIH1cblxuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGZpbGUgcmVmZXJlbmNlZCBieSB0aGUgRmlsZSBvYmplY3QuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqL1xuICBnZXQgbmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fbmFtZVxuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBwYXRoIHRoZSBVUkwgb2YgdGhlIEZpbGUgaXMgcmVsYXRpdmUgdG8uXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqL1xuICBnZXQgd2Via2l0UmVsYXRpdmVQYXRoKCkge1xuICAgIHJldHVybiBcIlwiXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgbGFzdCBtb2RpZmllZCB0aW1lIG9mIHRoZSBmaWxlLCBpbiBtaWxsaXNlY29uZCBzaW5jZSB0aGUgVU5JWFxuICAgKiBlcG9jaCAoSmFudWFyeSAxc3QsIDE5NzAgYXQgTWlkbmlnaHQpLlxuICAgKiBAcmV0dXJucyB7bnVtYmVyfVxuICAgKi9cbiAgZ2V0IGxhc3RNb2RpZmllZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fbGFzdE1vZGlmaWVkXG4gIH1cblxuICBnZXQgW1N5bWJvbC50b1N0cmluZ1RhZ10oKSB7XG4gICAgcmV0dXJuIFwiRmlsZVwiXG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0geyp9IGVycm9yXG4gKiBAcmV0dXJucyB7bmV2ZXJ9XG4gKi9cbmNvbnN0IHBhbmljID0gZXJyb3IgPT4ge1xuICB0aHJvdyBlcnJvclxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/file/src/file.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/file/src/lib.node.js":
/*!****************************************************!*\
  !*** ./node_modules/@web-std/file/src/lib.node.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.Blob),\n/* harmony export */   File: () => (/* binding */ File)\n/* harmony export */ });\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(rsc)/./node_modules/@web-std/file/src/package.js\");\n/* harmony import */ var _file_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./file.js */ \"(rsc)/./node_modules/@web-std/file/src/file.js\");\n\n\n;\n\n\n// Electron-renderer should get the browser implementation instead of node\n// Browser configuration is not enough\n\n// Marking export as a DOM File object instead of custom class.\n/** @type {typeof globalThis.File} */\nconst File = typeof globalThis.File === \"function\" ? globalThis.File : _file_js__WEBPACK_IMPORTED_MODULE_1__.File\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmlsZS9zcmMvbGliLm5vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFZOztBQUVaLENBQW1DO0FBQ1E7O0FBRTNDO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLHdCQUF3QjtBQUNuQyx1RUFBdUUsMENBQU87O0FBRXpEIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmlsZS9zcmMvbGliLm5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCJcblxuaW1wb3J0IHsgQmxvYiB9IGZyb20gXCIuL3BhY2thZ2UuanNcIlxuaW1wb3J0IHsgRmlsZSBhcyBXZWJGaWxlIH0gZnJvbSBcIi4vZmlsZS5qc1wiXG5cbi8vIEVsZWN0cm9uLXJlbmRlcmVyIHNob3VsZCBnZXQgdGhlIGJyb3dzZXIgaW1wbGVtZW50YXRpb24gaW5zdGVhZCBvZiBub2RlXG4vLyBCcm93c2VyIGNvbmZpZ3VyYXRpb24gaXMgbm90IGVub3VnaFxuXG4vLyBNYXJraW5nIGV4cG9ydCBhcyBhIERPTSBGaWxlIG9iamVjdCBpbnN0ZWFkIG9mIGN1c3RvbSBjbGFzcy5cbi8qKiBAdHlwZSB7dHlwZW9mIGdsb2JhbFRoaXMuRmlsZX0gKi9cbmNvbnN0IEZpbGUgPSB0eXBlb2YgZ2xvYmFsVGhpcy5GaWxlID09PSBcImZ1bmN0aW9uXCIgPyBnbG9iYWxUaGlzLkZpbGUgOiBXZWJGaWxlXG5cbmV4cG9ydCB7IEZpbGUsIEJsb2IgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/file/src/lib.node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/file/src/package.js":
/*!***************************************************!*\
  !*** ./node_modules/@web-std/file/src/package.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport safe */ _web_std_blob__WEBPACK_IMPORTED_MODULE_0__.Blob)\n/* harmony export */ });\n/* harmony import */ var _web_std_blob__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web-std/blob */ \"(rsc)/./node_modules/@web-std/blob/src/lib.node.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmlsZS9zcmMvcGFja2FnZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvQyIsInNvdXJjZXMiOlsiL2hvbWUvYWx0Y29pbi1kYWRkeS9Eb3dubG9hZHMvb3dubHkvbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2ZpbGUvc3JjL3BhY2thZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgQmxvYiB9IGZyb20gXCJAd2ViLXN0ZC9ibG9iXCJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/file/src/package.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/form-data/src/form-data.js":
/*!**********************************************************!*\
  !*** ./node_modules/@web-std/form-data/src/form-data.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FormData: () => (/* binding */ FormData)\n/* harmony export */ });\n/**\n * @implements {globalThis.FormData}\n */\nclass FormData {\n  /**\n   * @param {HTMLFormElement} [form]\n   */\n  constructor(form) {\n    /**\n     * @private\n     * @readonly\n     * @type {Array<[string, FormDataEntryValue]>}\n     */\n    this._entries = []\n\n    Object.defineProperty(this, \"_entries\", { enumerable: false })\n\n    if (isHTMLFormElement(form)) {\n      for (const element of form.elements) {\n        if (isSelectElement(element)) {\n          for (const option of element.options) {\n            if (option.selected) {\n              this.append(element.name, option.value);\n            }\n          }\n        } else if (\n          isInputElement(element) &&\n          (element.checked || ![\"radio\", \"checkbox\"].includes(element.type)) &&\n          element.name\n        ) {\n          this.append(element.name, element.value);\n        }\n      }\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return \"FormData\"\n  }\n\n  /**\n   * Appends a new value onto an existing key inside a FormData object, or adds\n   * the key if it does not already exist.\n   *\n   * The difference between `set` and `append` is that if the specified key\n   * already exists, `set` will overwrite all existing values with the new one,\n   * whereas `append` will append the new value onto the end of the existing\n   * set of values.\n   *\n   * @param {string} name\n   * @param {string|Blob|File} value - The name of the field whose data is\n   * contained in value.\n   * @param {string} [filename] - The filename reported to the server, when a\n   * value is a `Blob` or a `File`. The default filename for a `Blob` objects is\n   * `\"blob\"`. The default filename for a `File` is the it's name.\n   */\n  append(\n    name,\n    value = panic(\n      new TypeError(\"FormData.append: requires at least 2 arguments\")\n    ),\n    filename\n  ) {\n    this._entries.push([name, toEntryValue(value, filename)])\n  }\n\n  /**\n   * Deletes a key and all its values from a FormData object.\n   *\n   * @param {string} name\n   */\n  delete(\n    name = panic(new TypeError(\"FormData.delete: requires string argument\"))\n  ) {\n    const entries = this._entries\n    let index = 0\n    while (index < entries.length) {\n      const [entryName] = /** @type {[string, FormDataEntryValue]}*/ (\n        entries[index]\n      )\n      if (entryName === name) {\n        entries.splice(index, 1)\n      } else {\n        index++\n      }\n    }\n  }\n\n  /**\n   * Returns the first value associated with a given key from within a\n   * FormData object.\n   *\n   * @param {string} name\n   * @returns {FormDataEntryValue|null}\n   */\n\n  get(name = panic(new TypeError(\"FormData.get: requires string argument\"))) {\n    for (const [entryName, value] of this._entries) {\n      if (entryName === name) {\n        return value\n      }\n    }\n    return null\n  }\n\n  /**\n   * Returns an array of all the values associated with a given key from within\n   * a FormData.\n   *\n   * @param {string} name\n   * @returns {FormDataEntryValue[]}\n   */\n  getAll(\n    name = panic(new TypeError(\"FormData.getAll: requires string argument\"))\n  ) {\n    const values = []\n    for (const [entryName, value] of this._entries) {\n      if (entryName === name) {\n        values.push(value)\n      }\n    }\n    return values\n  }\n\n  /**\n   * Returns a boolean stating whether a FormData object contains a certain key.\n   *\n   * @param {string} name\n   */\n\n  has(name = panic(new TypeError(\"FormData.has: requires string argument\"))) {\n    for (const [entryName] of this._entries) {\n      if (entryName === name) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * Sets a new value for an existing key inside a FormData object, or adds the\n   * key/value if it does not already exist.\n   *\n   * @param {string} name\n   * @param {string|Blob|File} value\n   * @param {string} [filename]\n   */\n\n  set(\n    name,\n    value = panic(new TypeError(\"FormData.set: requires at least 2 arguments\")),\n    filename\n  ) {\n    let index = 0\n    const { _entries: entries } = this\n    const entryValue = toEntryValue(value, filename)\n    let wasSet = false\n    while (index < entries.length) {\n      const entry = /** @type {[string, FormDataEntryValue]}*/ (entries[index])\n      if (entry[0] === name) {\n        if (wasSet) {\n          entries.splice(index, 1)\n        } else {\n          wasSet = true\n          entry[1] = entryValue\n          index++\n        }\n      } else {\n        index++\n      }\n    }\n\n    if (!wasSet) {\n      entries.push([name, entryValue])\n    }\n  }\n\n  /**\n   * Method returns an iterator allowing to go through all key/value pairs\n   * contained in this object.\n   */\n  entries() {\n    return this._entries.values()\n  }\n\n  /**\n   * Returns an iterator allowing to go through all keys of the key/value pairs\n   * contained in this object.\n   *\n   * @returns {IterableIterator<string>}\n   */\n  *keys() {\n    for (const [name] of this._entries) {\n      yield name\n    }\n  }\n\n  /**\n   * Returns an iterator allowing to go through all values contained in this\n   * object.\n   *\n   * @returns {IterableIterator<FormDataEntryValue>}\n   */\n  *values() {\n    for (const [_, value] of this._entries) {\n      yield value\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this._entries.values()\n  }\n\n  /**\n   * @param {(value: FormDataEntryValue, key: string, parent: globalThis.FormData) => void} fn\n   * @param {any} [thisArg]\n   * @returns {void}\n   */\n  forEach(fn, thisArg) {\n    for (const [key, value] of this._entries) {\n      fn.call(thisArg, value, key, this)\n    }\n  }\n}\n\n/**\n * @param {any} value\n * @returns {value is HTMLFormElement}\n */\nconst isHTMLFormElement = value =>\n  Object.prototype.toString.call(value) === \"[object HTMLFormElement]\"\n\n/**\n * @param {string|Blob|File} value\n * @param {string} [filename]\n * @returns {FormDataEntryValue}\n */\nconst toEntryValue = (value, filename) => {\n  if (isFile(value)) {\n    return filename != null ? new BlobFile([value], filename, value) : value\n  } else if (isBlob(value)) {\n    return new BlobFile([value], filename != null ? filename : \"blob\")\n  } else {\n    if (filename != null && filename != \"\") {\n      throw new TypeError(\n        \"filename is only supported when value is Blob or File\"\n      )\n    }\n    return `${value}`\n  }\n}\n\n/**\n * @param {any} value\n * @returns {value is File}\n */\nconst isFile = value =>\n  Object.prototype.toString.call(value) === \"[object File]\" &&\n  typeof value.name === \"string\"\n\n/**\n * @param {any} value\n * @returns {value is Blob}\n */\nconst isBlob = value =>\n  Object.prototype.toString.call(value) === \"[object Blob]\"\n\n/**\n * Simple `File` implementation that just wraps a given blob.\n * @implements {globalThis.File}\n */\nconst BlobFile = class File {\n  /**\n   * @param {[Blob]} parts\n   * @param {string} name\n   * @param {FilePropertyBag} [options]\n   */\n  constructor([blob], name, { lastModified = Date.now() } = {}) {\n    this.blob = blob\n    this.name = name\n    this.lastModified = lastModified\n  }\n  get webkitRelativePath() {\n    return \"\"\n  }\n  get size() {\n    return this.blob.size\n  }\n  get type() {\n    return this.blob.type\n  }\n  /**\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [contentType]\n   */\n  slice(start, end, contentType) {\n    return this.blob.slice(start, end, contentType)\n  }\n  stream() {\n    return this.blob.stream()\n  }\n  text() {\n    return this.blob.text()\n  }\n  arrayBuffer() {\n    return this.blob.arrayBuffer()\n  }\n  get [Symbol.toStringTag]() {\n    return \"File\"\n  }\n}\n\n/**\n * @param {*} error\n * @returns {never}\n */\nconst panic = error => {\n  throw error\n}\n\n/**\n *\n * @param {Element} element\n * @returns {element is HTMLSelectElement}\n */\nfunction isSelectElement(element) {\n  return element.tagName === \"SELECT\";\n}\n\n/**\n *\n * @param {Element} element\n * @returns {element is HTMLInputElement}\n */\nfunction isInputElement(element) {\n  return element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/form-data/src/form-data.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/form-data/src/lib.node.js":
/*!*********************************************************!*\
  !*** ./node_modules/@web-std/form-data/src/lib.node.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FormData: () => (/* binding */ FormData)\n/* harmony export */ });\n/* harmony import */ var _form_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form-data.js */ \"(rsc)/./node_modules/@web-std/form-data/src/form-data.js\");\n// @ts-check\n\n\n;\n\n// Electron-renderer should get the browser implementation instead of node\n// which is why we check global first.\nconst FormData =\n  typeof globalThis.FormData === \"function\"\n    ? globalThis.FormData\n    : _form_data_js__WEBPACK_IMPORTED_MODULE_0__.FormData\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZm9ybS1kYXRhL3NyYy9saWIubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ1k7O0FBRVosQ0FBMEM7O0FBRTFDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxNQUFNLG1EQUFpQiIsInNvdXJjZXMiOlsiL2hvbWUvYWx0Y29pbi1kYWRkeS9Eb3dubG9hZHMvb3dubHkvbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2Zvcm0tZGF0YS9zcmMvbGliLm5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLWNoZWNrXG5cInVzZSBzdHJpY3RcIlxuXG5pbXBvcnQgKiBhcyBwb2x5ZmlsbCBmcm9tIFwiLi9mb3JtLWRhdGEuanNcIlxuXG4vLyBFbGVjdHJvbi1yZW5kZXJlciBzaG91bGQgZ2V0IHRoZSBicm93c2VyIGltcGxlbWVudGF0aW9uIGluc3RlYWQgb2Ygbm9kZVxuLy8gd2hpY2ggaXMgd2h5IHdlIGNoZWNrIGdsb2JhbCBmaXJzdC5cbmV4cG9ydCBjb25zdCBGb3JtRGF0YSA9XG4gIHR5cGVvZiBnbG9iYWxUaGlzLkZvcm1EYXRhID09PSBcImZ1bmN0aW9uXCJcbiAgICA/IGdsb2JhbFRoaXMuRm9ybURhdGFcbiAgICA6IHBvbHlmaWxsLkZvcm1EYXRhXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/form-data/src/lib.node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/stream/src/lib.node.js":
/*!******************************************************!*\
  !*** ./node_modules/@web-std/stream/src/lib.node.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ByteLengthQueuingStrategy: () => (/* binding */ ByteLengthQueuingStrategy),\n/* harmony export */   CountQueuingStrategy: () => (/* binding */ CountQueuingStrategy),\n/* harmony export */   ReadableByteStreamController: () => (/* binding */ ReadableByteStreamController),\n/* harmony export */   ReadableStream: () => (/* binding */ ReadableStream),\n/* harmony export */   ReadableStreamBYOBReader: () => (/* binding */ ReadableStreamBYOBReader),\n/* harmony export */   ReadableStreamBYOBRequest: () => (/* binding */ ReadableStreamBYOBRequest),\n/* harmony export */   ReadableStreamDefaultController: () => (/* binding */ ReadableStreamDefaultController),\n/* harmony export */   ReadableStreamDefaultReader: () => (/* binding */ ReadableStreamDefaultReader),\n/* harmony export */   TextDecoderStream: () => (/* binding */ TextDecoderStream),\n/* harmony export */   TextEncoderStream: () => (/* binding */ TextEncoderStream),\n/* harmony export */   TransformStream: () => (/* binding */ TransformStream),\n/* harmony export */   TransformStreamDefaultController: () => (/* binding */ TransformStreamDefaultController),\n/* harmony export */   WritableStream: () => (/* binding */ WritableStream),\n/* harmony export */   WritableStreamDefaultController: () => (/* binding */ WritableStreamDefaultController),\n/* harmony export */   WritableStreamDefaultWriter: () => (/* binding */ WritableStreamDefaultWriter)\n/* harmony export */ });\n/* harmony import */ var _stream_cjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stream.cjs */ \"(rsc)/./node_modules/@web-std/stream/src/stream.cjs\");\n// @ts-ignore\n\nconst {\n  ReadableStream,\n  ReadableStreamDefaultReader,\n  ReadableStreamBYOBReader,\n  ReadableStreamBYOBRequest,\n  ReadableByteStreamController,\n  ReadableStreamDefaultController,\n  TransformStream,\n  TransformStreamDefaultController,\n  WritableStream,\n  WritableStreamDefaultWriter,\n  WritableStreamDefaultController,\n  ByteLengthQueuingStrategy,\n  CountQueuingStrategy,\n  TextEncoderStream,\n  TextDecoderStream,\n} = _stream_cjs__WEBPACK_IMPORTED_MODULE_0__\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvc3RyZWFtL3NyYy9saWIubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDa0M7QUFDM0I7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLEVBQUUsd0NBQU8iLCJzb3VyY2VzIjpbIi9ob21lL2FsdGNvaW4tZGFkZHkvRG93bmxvYWRzL293bmx5L25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9zdHJlYW0vc3JjL2xpYi5ub2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1pZ25vcmVcbmltcG9ydCBzdHJlYW1zIGZyb20gXCIuL3N0cmVhbS5janNcIlxuZXhwb3J0IGNvbnN0IHtcbiAgUmVhZGFibGVTdHJlYW0sXG4gIFJlYWRhYmxlU3RyZWFtRGVmYXVsdFJlYWRlcixcbiAgUmVhZGFibGVTdHJlYW1CWU9CUmVhZGVyLFxuICBSZWFkYWJsZVN0cmVhbUJZT0JSZXF1ZXN0LFxuICBSZWFkYWJsZUJ5dGVTdHJlYW1Db250cm9sbGVyLFxuICBSZWFkYWJsZVN0cmVhbURlZmF1bHRDb250cm9sbGVyLFxuICBUcmFuc2Zvcm1TdHJlYW0sXG4gIFRyYW5zZm9ybVN0cmVhbURlZmF1bHRDb250cm9sbGVyLFxuICBXcml0YWJsZVN0cmVhbSxcbiAgV3JpdGFibGVTdHJlYW1EZWZhdWx0V3JpdGVyLFxuICBXcml0YWJsZVN0cmVhbURlZmF1bHRDb250cm9sbGVyLFxuICBCeXRlTGVuZ3RoUXVldWluZ1N0cmF0ZWd5LFxuICBDb3VudFF1ZXVpbmdTdHJhdGVneSxcbiAgVGV4dEVuY29kZXJTdHJlYW0sXG4gIFRleHREZWNvZGVyU3RyZWFtLFxufSA9IHN0cmVhbXNcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/stream/src/lib.node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@web-std/stream/src/stream.cjs":
/*!*****************************************************!*\
  !*** ./node_modules/@web-std/stream/src/stream.cjs ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("try {\n  module.exports = __webpack_require__(/*! stream/web */ \"stream/web\")\n} catch (error) {\n  module.exports = __webpack_require__(/*! web-streams-polyfill/ponyfill */ \"(rsc)/./node_modules/web-streams-polyfill/dist/ponyfill.mjs\")\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvc3RyZWFtL3NyYy9zdHJlYW0uY2pzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsRUFBRSxvRUFBc0M7QUFDeEMsRUFBRTtBQUNGLEVBQUUsd0lBQXlEO0FBQzNEIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvc3RyZWFtL3NyYy9zdHJlYW0uY2pzIl0sInNvdXJjZXNDb250ZW50IjpbInRyeSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInN0cmVhbS93ZWJcIilcbn0gY2F0Y2ggKGVycm9yKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIndlYi1zdHJlYW1zLXBvbHlmaWxsL3BvbnlmaWxsXCIpXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@web-std/stream/src/stream.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/blob/src/blob.js":
/*!************************************************!*\
  !*** ./node_modules/@web-std/blob/src/blob.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* binding */ Blob),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.ReadableStream),\n/* harmony export */   TextDecoder: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.TextDecoder),\n/* harmony export */   TextEncoder: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.TextEncoder)\n/* harmony export */ });\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/blob/src/package.js\");\n\n\n/**\n * @implements {globalThis.Blob}\n */\nconst WebBlob = class Blob {\n  /**\n   * @param {BlobPart[]} [init]\n   * @param {BlobPropertyBag} [options]\n   */\n  constructor(init = [], options = {}) {\n    /** @type {Uint8Array[]} */\n    const parts = []\n\n    let size = 0\n    for (const part of init) {\n      if (typeof part === \"string\") {\n        const bytes = new _package_js__WEBPACK_IMPORTED_MODULE_0__.TextEncoder().encode(part)\n        parts.push(bytes)\n        size += bytes.byteLength\n      } else if (part instanceof WebBlob) {\n        size += part.size\n        // @ts-ignore - `_parts` is marked private so TS will complain about\n        // accessing it.\n        parts.push(...part._parts)\n      } else if (part instanceof ArrayBuffer) {\n        parts.push(new Uint8Array(part))\n        size += part.byteLength\n      } else if (part instanceof Uint8Array) {\n        parts.push(part)\n        size += part.byteLength\n      } else if (ArrayBuffer.isView(part)) {\n        const { buffer, byteOffset, byteLength } = part\n        parts.push(new Uint8Array(buffer, byteOffset, byteLength))\n        size += byteLength\n      } else {\n        const bytes = new _package_js__WEBPACK_IMPORTED_MODULE_0__.TextEncoder().encode(String(part))\n        parts.push(bytes)\n        size += bytes.byteLength\n      }\n    }\n\n    /** @private */\n    this._size = size\n    /** @private */\n    this._type = readType(options.type)\n    /** @private */\n    this._parts = parts\n\n    Object.defineProperties(this, {\n      _size: { enumerable: false },\n      _type: { enumerable: false },\n      _parts: { enumerable: false },\n    })\n  }\n\n  /**\n   * A string indicating the MIME type of the data contained in the Blob.\n   * If the type is unknown, this string is empty.\n   * @type {string}\n   */\n  get type() {\n    return this._type\n  }\n  /**\n   * The size, in bytes, of the data contained in the Blob object.\n   * @type {number}\n   */\n  get size() {\n    return this._size\n  }\n\n  /**\n   * Returns a new Blob object containing the data in the specified range of\n   * bytes of the blob on which it's called.\n   * @param {number} [start=0] - An index into the Blob indicating the first\n   * byte to include in the new Blob. If you specify a negative value, it's\n   * treated as an offset from the end of the Blob toward the beginning. For\n   * example, `-10` would be the 10th from last byte in the Blob. The default\n   * value is `0`. If you specify a value for start that is larger than the\n   * size of the source Blob, the returned Blob has size 0 and contains no\n   * data.\n   * @param {number} [end] - An index into the `Blob` indicating the first byte\n   *  that will *not* be included in the new `Blob` (i.e. the byte exactly at\n   * this index is not included). If you specify a negative value, it's treated\n   * as an offset from the end of the Blob toward the beginning. For example,\n   * `-10` would be the 10th from last byte in the `Blob`. The default value is\n   * size.\n   * @param {string} [type] - The content type to assign to the new Blob;\n   * this will be the value of its type property. The default value is an empty\n   * string.\n   * @returns {Blob}\n   */\n  slice(start = 0, end = this.size, type = \"\") {\n    const { size, _parts } = this\n    let offset = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n\n    let limit = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n    const span = Math.max(limit - offset, 0)\n    const blob = new Blob([], { type })\n\n    if (span === 0) {\n      return blob\n    }\n\n    let blobSize = 0\n    const blobParts = []\n    for (const part of _parts) {\n      const { byteLength } = part\n      if (offset > 0 && byteLength <= offset) {\n        offset -= byteLength\n        limit -= byteLength\n      } else {\n        const chunk = part.subarray(offset, Math.min(byteLength, limit))\n        blobParts.push(chunk)\n        blobSize += chunk.byteLength\n        // no longer need to take that into account\n        offset = 0\n\n        // don't add the overflow to new blobParts\n        if (blobSize >= span) {\n          break\n        }\n      }\n    }\n\n    blob._parts = blobParts\n    blob._size = blobSize\n\n    return blob\n  }\n\n  /**\n   * Returns a promise that resolves with an ArrayBuffer containing the entire\n   * contents of the Blob as binary data.\n   * @returns {Promise<ArrayBuffer>}\n   */\n  // eslint-disable-next-line require-await\n  async arrayBuffer() {\n    const buffer = new ArrayBuffer(this.size)\n    const bytes = new Uint8Array(buffer)\n    let offset = 0\n    for (const part of this._parts) {\n      bytes.set(part, offset)\n      offset += part.byteLength\n    }\n    return buffer\n  }\n\n  /**\n   * Returns a promise that resolves with a USVString containing the entire\n   * contents of the Blob interpreted as UTF-8 text.\n   * @returns {Promise<string>}\n   */\n  // eslint-disable-next-line require-await\n  async text() {\n    const decoder = new _package_js__WEBPACK_IMPORTED_MODULE_0__.TextDecoder()\n    let text = \"\"\n    for (const part of this._parts) {\n      text += decoder.decode(part)\n    }\n    return text\n  }\n\n  /**\n   * @returns {BlobStream}\n   */\n  stream() {\n    return new BlobStream(this._parts)\n  }\n\n  /**\n   * @returns {string}\n   */\n  toString() {\n    return \"[object Blob]\"\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"Blob\"\n  }\n}\n\n// Marking export as a DOM File object instead of custom class.\n/** @type {typeof globalThis.Blob} */\nconst Blob = WebBlob\n\n/**\n * Blob stream is a `ReadableStream` extension optimized to have minimal\n * overhead when consumed as `AsyncIterable<Uint8Array>`.\n * @extends {ReadableStream<Uint8Array>}\n * @implements {AsyncIterable<Uint8Array>}\n */\nclass BlobStream extends _package_js__WEBPACK_IMPORTED_MODULE_0__.ReadableStream {\n  /**\n   * @param {Uint8Array[]} chunks\n   */\n  constructor(chunks) {\n    // @ts-ignore\n    super(new BlobStreamController(chunks.values()), { type: \"bytes\" })\n    /** @private */\n    this._chunks = chunks\n  }\n\n  /**\n   * @param {Object} [_options]\n   * @property {boolean} [_options.preventCancel]\n   * @returns {AsyncIterator<Uint8Array>}\n   */\n  async *[Symbol.asyncIterator](_options) {\n    const reader = this.getReader()\n    yield* this._chunks\n    reader.releaseLock()\n  }\n}\n\nclass BlobStreamController {\n  /**\n   * @param {Iterator<Uint8Array>} chunks\n   */\n  constructor(chunks) {\n    this.chunks = chunks\n  }\n\n  /**\n   * @param {ReadableStreamDefaultController} controller\n   */\n  start(controller) {\n    this.work(controller)\n    this.isWorking = false\n    this.isCancelled = false\n  }\n  /**\n   *\n   * @param {ReadableStreamDefaultController} controller\n   */\n  async work(controller) {\n    const { chunks } = this\n\n    this.isWorking = true\n    while (!this.isCancelled && (controller.desiredSize || 0) > 0) {\n      let next = null\n      try {\n        next = chunks.next()\n      } catch (error) {\n        controller.error(error)\n        break\n      }\n\n      if (next) {\n        if (!next.done && !this.isCancelled) {\n          controller.enqueue(next.value)\n        } else {\n          controller.close()\n        }\n      }\n    }\n\n    this.isWorking = false\n  }\n\n  /**\n   * @param {ReadableStreamDefaultController} controller\n   */\n  pull(controller) {\n    if (!this.isWorking) {\n      this.work(controller)\n    }\n  }\n  cancel() {\n    this.isCancelled = true\n  }\n}\n\n/**\n * @param {string} [input]\n * @returns {string}\n */\nconst readType = (input = \"\") => {\n  const type = String(input).toLowerCase()\n  return /[^\\u0020-\\u007E]/.test(type) ? \"\" : type\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/blob/src/blob.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/blob/src/lib.node.js":
/*!****************************************************!*\
  !*** ./node_modules/@web-std/blob/src/lib.node.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* binding */ Blob),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.ReadableStream),\n/* harmony export */   TextDecoder: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.TextDecoder),\n/* harmony export */   TextEncoder: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.TextEncoder)\n/* harmony export */ });\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/blob/src/package.js\");\n/* harmony import */ var _blob_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blob.js */ \"(ssr)/./node_modules/@web-std/blob/src/blob.js\");\n\n// import { Blob as NodeBlob } from \"./blob.node.js\"\n;\n\n/** @type {typeof globalThis.Blob} */\n// Our first choise is to use global `Blob` because it may be available e.g. in\n// electron renderrer process. If not available fall back to node native\n// implementation, if also not available use our implementation.\nconst Blob =\n  globalThis.Blob || \n  // Disable node native blob until impractical perf issue is fixed\n  // @see https://github.com/nodejs/node/issues/42108\n  // NodeBlob ||\n  _blob_js__WEBPACK_IMPORTED_MODULE_1__.Blob\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvYmxvYi9zcmMvbGliLm5vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVFO0FBQ3ZFLFlBQVksbUJBQW1CO0FBQy9CLENBQTJDOztBQUUzQyxXQUFXLHdCQUF3QjtBQUNuQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSwwQ0FBTyIsInNvdXJjZXMiOlsiL2hvbWUvYWx0Y29pbi1kYWRkeS9Eb3dubG9hZHMvb3dubHkvbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2Jsb2Ivc3JjL2xpYi5ub2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IFRleHRFbmNvZGVyLCBUZXh0RGVjb2RlciwgUmVhZGFibGVTdHJlYW0gfSBmcm9tIFwiLi9wYWNrYWdlLmpzXCJcbi8vIGltcG9ydCB7IEJsb2IgYXMgTm9kZUJsb2IgfSBmcm9tIFwiLi9ibG9iLm5vZGUuanNcIlxuaW1wb3J0IHsgQmxvYiBhcyBXZWJCbG9iIH0gZnJvbSBcIi4vYmxvYi5qc1wiXG5cbi8qKiBAdHlwZSB7dHlwZW9mIGdsb2JhbFRoaXMuQmxvYn0gKi9cbi8vIE91ciBmaXJzdCBjaG9pc2UgaXMgdG8gdXNlIGdsb2JhbCBgQmxvYmAgYmVjYXVzZSBpdCBtYXkgYmUgYXZhaWxhYmxlIGUuZy4gaW5cbi8vIGVsZWN0cm9uIHJlbmRlcnJlciBwcm9jZXNzLiBJZiBub3QgYXZhaWxhYmxlIGZhbGwgYmFjayB0byBub2RlIG5hdGl2ZVxuLy8gaW1wbGVtZW50YXRpb24sIGlmIGFsc28gbm90IGF2YWlsYWJsZSB1c2Ugb3VyIGltcGxlbWVudGF0aW9uLlxuZXhwb3J0IGNvbnN0IEJsb2IgPVxuICBnbG9iYWxUaGlzLkJsb2IgfHwgXG4gIC8vIERpc2FibGUgbm9kZSBuYXRpdmUgYmxvYiB1bnRpbCBpbXByYWN0aWNhbCBwZXJmIGlzc3VlIGlzIGZpeGVkXG4gIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2lzc3Vlcy80MjEwOFxuICAvLyBOb2RlQmxvYiB8fFxuICBXZWJCbG9iXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/blob/src/lib.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/blob/src/package.js":
/*!***************************************************!*\
  !*** ./node_modules/@web-std/blob/src/package.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _web_std_stream__WEBPACK_IMPORTED_MODULE_1__.ReadableStream),\n/* harmony export */   TextDecoder: () => (/* reexport safe */ web_encoding__WEBPACK_IMPORTED_MODULE_0__.TextDecoder),\n/* harmony export */   TextEncoder: () => (/* reexport safe */ web_encoding__WEBPACK_IMPORTED_MODULE_0__.TextEncoder)\n/* harmony export */ });\n/* harmony import */ var web_encoding__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web-encoding */ \"(ssr)/./node_modules/web-encoding/src/lib.mjs\");\n/* harmony import */ var _web_std_stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web-std/stream */ \"(ssr)/./node_modules/@web-std/stream/src/lib.node.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvYmxvYi9zcmMvcGFja2FnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF1RDtBQUNQIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvYmxvYi9zcmMvcGFja2FnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBUZXh0RW5jb2RlciwgVGV4dERlY29kZXIgfSBmcm9tIFwid2ViLWVuY29kaW5nXCJcbmV4cG9ydCB7IFJlYWRhYmxlU3RyZWFtIH0gZnJvbSBcIkB3ZWItc3RkL3N0cmVhbVwiXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/blob/src/package.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/body.js":
/*!*************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/body.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   \"default\": () => (/* binding */ Body),\n/* harmony export */   extractContentType: () => (/* binding */ extractContentType),\n/* harmony export */   fromAsyncIterable: () => (/* binding */ fromAsyncIterable),\n/* harmony export */   fromStream: () => (/* binding */ fromStream),\n/* harmony export */   getTotalBytes: () => (/* binding */ getTotalBytes),\n/* harmony export */   streamIterator: () => (/* binding */ streamIterator),\n/* harmony export */   writeToStream: () => (/* binding */ writeToStream)\n/* harmony export */ });\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/blob/src/lib.node.js\");\n/* harmony import */ var _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./errors/fetch-error.js */ \"(ssr)/./node_modules/@web-std/fetch/src/errors/fetch-error.js\");\n/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./errors/base.js */ \"(ssr)/./node_modules/@web-std/fetch/src/errors/base.js\");\n/* harmony import */ var _utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/form-data.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/form-data.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/is.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/is.js\");\n/* harmony import */ var _utils_utf8_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/utf8.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/utf8.js\");\n// @ts-check\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\n\n\n\n\n\n\n\n\n\n\nconst {readableHighWaterMark} = new stream__WEBPACK_IMPORTED_MODULE_0__.Readable();\n\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n * @implements {globalThis.Body}\n */\n\nclass Body {\n\t/**\n\t * @param {BodyInit|Stream|null} body\n\t * @param {{size?:number}} options\n\t */\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tconst state = {\n\t\t\t/** @type {null|ReadableStream<Uint8Array>} */\n\t\t\tbody: null,\n\t\t\t/** @type {string|null} */\n\t\t\ttype: null,\n\t\t\t/** @type {number|null} */\n\t\t\tsize: null,\n\t\t\t/** @type {null|string} */\n\t\t\tboundary: null,\n\t\t\tdisturbed: false,\n\t\t\t/** @type {null|Error} */\n\t\t\terror: null\n\t\t};\n\t\t/** @private */\n\t\tthis[INTERNALS] = state;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tstate.body = null;\n\t\t\tstate.size = 0;\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isURLSearchParameters)(body)) {\n\t\t// Body is a URLSearchParams\n\t\t\tconst bytes = _utils_utf8_js__WEBPACK_IMPORTED_MODULE_3__.encode(body.toString());\n\t\t\tstate.body = fromBytes(bytes);\n\t\t\tstate.size = bytes.byteLength;\n\t\t\tstate.type = 'application/x-www-form-urlencoded;charset=UTF-8';\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(body)) {\n\t\t\t// Body is blob\n\t\t\tstate.size = body.size;\n\t\t\tstate.type = body.type || null;\n\t\t\tstate.body = body.stream();\n\t\t} else if (body instanceof Uint8Array) {\n\t\t\t// Body is Buffer\n\t\t\tstate.body = fromBytes(body);\n\t\t\tstate.size = body.byteLength;\n\t\t} else if (util__WEBPACK_IMPORTED_MODULE_1__.types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tconst bytes = new Uint8Array(body);\n\t\t\tstate.body = fromBytes(bytes);\n\t\t\tstate.size = bytes.byteLength;\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tconst bytes = new Uint8Array(body.buffer, body.byteOffset, body.byteLength);\n\t\t\tstate.body = fromBytes(bytes);\n\t\t\tstate.size = bytes.byteLength;\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isReadableStream)(body)) {\n\t\t\t// Body is stream\n\t\t\tstate.body = body;\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isFormData)(body)) {\n\t\t\t// Body is an instance of formdata-node\n\t\t\tconst boundary = `NodeFetchFormDataBoundary${(0,_utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__.getBoundary)()}`;\n\t\t\tstate.type = `multipart/form-data; boundary=${boundary}`;\n\t\t\tstate.size = (0,_utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__.getFormDataLength)(body, boundary);\n\t\t\tstate.body = fromAsyncIterable((0,_utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__.formDataIterator)(body, boundary));\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isMultipartFormDataStream)(body)) {\n\t\t\tstate.type = `multipart/form-data; boundary=${body.getBoundary()}`;\n\t\t\tstate.size = body.hasKnownLength() ? body.getLengthSync() : null;\n\t\t\tstate.body = fromStream(body);\n\t\t} else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {\n\t\t\tstate.body = fromStream(body);\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tconst bytes = _utils_utf8_js__WEBPACK_IMPORTED_MODULE_3__.encode(String(body));\n\t\t\tstate.type = 'text/plain;charset=UTF-8';\n\t\t\tstate.size = bytes.byteLength;\n\t\t\tstate.body = fromBytes(bytes);\n\t\t}\n\n\t\tthis.size = size;\n\n\t\t// if (body instanceof Stream) {\n\t\t// \tbody.on('error', err => {\n\t\t// \t\tconst error = err instanceof FetchBaseError ?\n\t\t// \t\t\terr :\n\t\t// \t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${err.message}`, 'system', err);\n\t\t// \t\tthis[INTERNALS].error = error;\n\t\t// \t});\n\t\t// }\n\t}\n\n\t/** @type {Headers} */\n\t/* c8 ignore next 3 */\n\tget headers() {\n\t\tthrow new TypeError(`'get headers' called on an object that does not implements interface.`)\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].type) || '';\n\t\tconst buf = await consumeBody(this);\n\n\t\treturn new _package_js__WEBPACK_IMPORTED_MODULE_5__.Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\treturn JSON.parse(await this.text());\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn _utils_utf8_js__WEBPACK_IMPORTED_MODULE_3__.decode(buffer);\n\t}\n\n\t/**\n\t * @returns {Promise<FormData>}\n\t */\n\n\tasync formData() {\n\t\treturn (0,_utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__.toFormData)(this)\n\t}\n}\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tformData: {enumerable: true}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @param {Body & {url?:string}} data\n * @return {Promise<Uint8Array>}\n */\nasync function consumeBody(data) {\n\tconst state = data[INTERNALS];\n\tif (state.disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tstate.disturbed = true;\n\n\tif (state.error) {\n\t\tthrow state.error;\n\t}\n\n\tconst {body} = state;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn new Uint8Array(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\t/** @type {[Uint8Array|null, Uint8Array[], number]} */\n\tconst [buffer, chunks, limit] = data.size > 0 ?\n\t\t[new Uint8Array(data.size), [], data.size] :\n\t\t[null, [], Infinity];\n\tlet offset = 0;\n\n\tconst source = streamIterator(body);\n\ttry {\n\t\tfor await (const chunk of source) {\n\t\t\tconst bytes = chunk instanceof Uint8Array ?\n\t\t\t\tchunk :\n\t\t\t\tBuffer.from(chunk);\n\n\t\t\tif (offset + bytes.byteLength > limit) {\n\t\t\t\tconst error = new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_6__.FetchError(`content size at ${data.url} over limit: ${limit}`, 'max-size');\n\t\t\t\tsource.throw(error);\n\t\t\t\tthrow error;\n\t\t\t} else if (buffer) {\n\t\t\t\tbuffer.set(bytes, offset);\n\t\t\t} else {\n\t\t\t\tchunks.push(bytes);\n\t\t\t}\n\n\t\t\toffset += bytes.byteLength;\n\t\t}\n\n\t\tif (buffer) {\n\t\t\tif (offset < buffer.byteLength) {\n\t\t\t\tthrow new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_6__.FetchError(`Premature close of server response while trying to fetch ${data.url}`, 'premature-close');\n\t\t\t} else {\n\t\t\t\treturn buffer;\n\t\t\t}\n\t\t} else {\n\t\t\treturn writeBytes(new Uint8Array(offset), chunks);\n\t\t}\n\t} catch (error) {\n\t\tif (error instanceof _errors_base_js__WEBPACK_IMPORTED_MODULE_7__.FetchBaseError) {\n\t\t\tthrow error;\n\t\t// @ts-expect-error - we know it will have a name\n\t\t} else if (error && error.name === 'AbortError') {\n\t\t\tthrow error;\n\t\t} else {\n\t\t\tconst e = /** @type {import('./errors/fetch-error').SystemError} */(error)\n\t\t\t// Other errors, such as incorrect content-encoding\n\t\t\tthrow new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_6__.FetchError(`Invalid response body while trying to fetch ${data.url}: ${e.message}`, 'system', e);\n\t\t}\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param {Body} instance       Response or Request instance\n * @return {ReadableStream<Uint8Array> | null}\n */\nconst clone = instance => {\n\tconst {body} = instance;\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\tif (!body) {\n\t\treturn null;\n\t}\n\n\tconst [left, right] = body.tee();\n\tinstance[INTERNALS].body = left;\n\treturn right;\n};\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {Body} source Any options.body input\n * @returns {string | null}\n */\nconst extractContentType = source => source[INTERNALS].type;\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {Body} source - Body object from the Body instance.\n * @returns {number | null}\n */\nconst getTotalBytes = source => source[INTERNALS].size;\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest - The stream to write to.\n * @param {Body} source - Body object from the Body instance.\n * @returns {void}\n */\nconst writeToStream = (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\tstream__WEBPACK_IMPORTED_MODULE_0__.Readable.from(streamIterator(body)).pipe(dest);\n\t}\n};\n\n/**\n * @template T\n * @implements {AsyncGenerator<T, void, void>}\n */\nclass StreamIterableIterator {\n\t/**\n\t * @param {ReadableStream<T>} stream\n\t */\n\tconstructor(stream) {\n\t\tthis.stream = stream;\n\t\tthis.reader = null;\n\t}\n\n\t/**\n\t * @returns {AsyncGenerator<T, void, void>}\n\t */\n\t[Symbol.asyncIterator]() {\n\t\treturn this;\n\t}\n\n\tgetReader() {\n\t\tif (this.reader) {\n\t\t\treturn this.reader;\n\t\t}\n\n\t\tconst reader = this.stream.getReader();\n\t\tthis.reader = reader;\n\t\treturn reader;\n\t}\n\n\t/**\n\t * @returns {Promise<IteratorResult<T, void>>}\n\t */\n\tnext() {\n\t\treturn /** @type {Promise<IteratorResult<T, void>>} */ (this.getReader().read());\n\t}\n\n\t/**\n\t * @returns {Promise<IteratorResult<T, void>>}\n\t */\n\tasync return() {\n\t\tif (this.reader) {\n\t\t\tawait this.reader.cancel();\n\t\t}\n\n\t\treturn {done: true, value: undefined};\n\t}\n\n\t/**\n\t * \n\t * @param {any} error \n\t * @returns {Promise<IteratorResult<T, void>>}\n\t */\n\tasync throw(error) {\n\t\tawait this.getReader().cancel(error);\n\t\treturn {done: true, value: undefined};\n\t}\n}\n\n/**\n * @template T\n * @param {ReadableStream<T>} stream\n */\nconst streamIterator = stream => new StreamIterableIterator(stream);\n\n/**\n * @param {Uint8Array} buffer\n * @param {Uint8Array[]} chunks\n */\nconst writeBytes = (buffer, chunks) => {\n\tlet offset = 0;\n\tfor (const chunk of chunks) {\n\t\tbuffer.set(chunk, offset);\n\t\toffset += chunk.byteLength;\n\t}\n\n\treturn buffer;\n};\n\n/**\n * @param {Uint8Array} bytes\n * @returns {ReadableStream<Uint8Array>}\n */\n// @ts-ignore\nconst fromBytes = bytes => new _package_js__WEBPACK_IMPORTED_MODULE_5__.ReadableStream({\n\tstart(controller) {\n\t\tcontroller.enqueue(bytes);\n\t\tcontroller.close();\n\t}\n});\n\n/**\n * @param {AsyncIterable<Uint8Array>} content\n * @returns {ReadableStream<Uint8Array>}\n */\nconst fromAsyncIterable = content =>\n\t// @ts-ignore\n\tnew _package_js__WEBPACK_IMPORTED_MODULE_5__.ReadableStream(new AsyncIterablePump(content));\n\n/**\n * @implements {UnderlyingSource<Uint8Array>}\n */\nclass AsyncIterablePump {\n\t/**\n\t * @param {AsyncIterable<Uint8Array>} source\n\t */\n\tconstructor(source) {\n\t\tthis.source = source[Symbol.asyncIterator]();\n\t}\n\n\t/**\n\t * @param {ReadableStreamController<Uint8Array>} controller\n\t */\n\tasync pull(controller) {\n\t\ttry {\n\t\t\twhile (controller.desiredSize || 0 > 0) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst next = await this.source.next();\n\t\t\t\tif (next.done) {\n\t\t\t\t\tcontroller.close();\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tcontroller.enqueue(next.value);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcontroller.error(error);\n\t\t}\n\t}\n\n\t/**\n\t * @param {any} [reason]\n\t */\n\tcancel(reason) {\n\t\tif (reason) {\n\t\t\tif (typeof this.source.throw === 'function') {\n\t\t\t\tthis.source.throw(reason);\n\t\t\t} else if (typeof this.source.return === 'function') {\n\t\t\t\tthis.source.return();\n\t\t\t}\n\t\t} else if (typeof this.source.return === 'function') {\n\t\t\tthis.source.return();\n\t\t}\n\t}\n}\n\n/**\n * @param {Stream & {readableHighWaterMark?:number}} source\n * @returns {ReadableStream<Uint8Array>}\n */\nconst fromStream = source => {\n\tconst pump = new StreamPump(source);\n\tconst stream = new _package_js__WEBPACK_IMPORTED_MODULE_5__.ReadableStream(pump, pump);\n\treturn stream;\n};\n\n/**\n * @implements {UnderlyingSource<Uint8Array>}\n * @implements {QueuingStrategy<Uint8Array>}\n */\nclass StreamPump {\n\t/**\n\t * @param {Stream & {\n\t * \treadableHighWaterMark?: number\n\t * \treadable?:boolean,\n\t * \tresume?: () => void,\n\t * \tpause?: () => void\n\t * \tdestroy?: (error?:Error) => void\n\t * }} stream\n\t */\n\tconstructor(stream) {\n\t\tthis.highWaterMark = stream.readableHighWaterMark || readableHighWaterMark;\n\t\tthis.accumalatedSize = 0;\n\t\tthis.stream = stream;\n\t\tthis.enqueue = this.enqueue.bind(this);\n\t\tthis.error = this.error.bind(this);\n\t\tthis.close = this.close.bind(this);\n\t}\n\n\t/**\n\t * @param {Uint8Array} [chunk]\n\t */\n\tsize(chunk) {\n\t\treturn chunk?.byteLength || 0;\n\t}\n\n\t/**\n\t * @param {ReadableStreamController<Uint8Array>} controller\n\t */\n\tstart(controller) {\n\t\tthis.controller = controller;\n\t\tthis.stream.on('data', this.enqueue);\n\t\tthis.stream.once('error', this.error);\n\t\tthis.stream.once('end', this.close);\n\t\tthis.stream.once('close', this.close);\n\t}\n\n\tpull() {\n\t\tthis.resume();\n\t}\n\n\t/**\n\t * @param {any} [reason]\n\t */\n\tcancel(reason) {\n\t\tif (this.stream.destroy) {\n\t\t\tthis.stream.destroy(reason);\n\t\t}\n\n\t\tthis.stream.off('data', this.enqueue);\n\t\tthis.stream.off('error', this.error);\n\t\tthis.stream.off('end', this.close);\n\t\tthis.stream.off('close', this.close);\n\t}\n\n\t/**\n\t * @param {Uint8Array|string} chunk\n\t */\n\tenqueue(chunk) {\n\t\tif (this.controller) {\n\t\t\ttry {\n\t\t\t\tconst bytes = chunk instanceof Uint8Array ?\n\t\t\t\t\tchunk :\n\t\t\t\t\tBuffer.from(chunk);\n\n\t\t\t\tconst available = (this.controller.desiredSize || 0) - bytes.byteLength;\n\t\t\t\tthis.controller.enqueue(bytes);\n\t\t\t\tif (available <= 0) {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tthis.controller.error(new Error('Could not create Buffer, chunk must be of type string or an instance of Buffer, ArrayBuffer, or Array or an Array-like Object'));\n\t\t\t\tthis.cancel();\n\t\t\t}\n\t\t}\n\t}\n\n\tpause() {\n\t\tif (this.stream.pause) {\n\t\t\tthis.stream.pause();\n\t\t}\n\t}\n\n\tresume() {\n\t\tif (this.stream.readable && this.stream.resume) {\n\t\t\tthis.stream.resume();\n\t\t}\n\t}\n\n\tclose() {\n\t\tif (this.controller) {\n\t\t\tthis.controller.close();\n\t\t\tdelete this.controller;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Error} error \n\t */\n\terror(error) {\n\t\tif (this.controller) {\n\t\t\tthis.controller.error(error);\n\t\t\tdelete this.controller;\n\t\t}\n\t}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/body.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/errors/abort-error.js":
/*!***************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/errors/abort-error.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* binding */ AbortError)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web-std/fetch/src/errors/base.js\");\n\n\n/**\n * AbortError interface for cancelled requests\n */\nclass AbortError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.FetchBaseError {\n\t/**\n\t * @param {string} message \n\t * @param {string} [type]\n\t */\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2Vycm9ycy9hYm9ydC1lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5Qzs7QUFFekM7QUFDQTtBQUNBO0FBQ08seUJBQXlCLG9EQUFjO0FBQzlDO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2Vycm9ycy9hYm9ydC1lcnJvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0ZldGNoQmFzZUVycm9yfSBmcm9tICcuL2Jhc2UuanMnO1xuXG4vKipcbiAqIEFib3J0RXJyb3IgaW50ZXJmYWNlIGZvciBjYW5jZWxsZWQgcmVxdWVzdHNcbiAqL1xuZXhwb3J0IGNsYXNzIEFib3J0RXJyb3IgZXh0ZW5kcyBGZXRjaEJhc2VFcnJvciB7XG5cdC8qKlxuXHQgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSBcblx0ICogQHBhcmFtIHtzdHJpbmd9IFt0eXBlXVxuXHQgKi9cblx0Y29uc3RydWN0b3IobWVzc2FnZSwgdHlwZSA9ICdhYm9ydGVkJykge1xuXHRcdHN1cGVyKG1lc3NhZ2UsIHR5cGUpO1xuXHR9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/errors/abort-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/errors/base.js":
/*!********************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/errors/base.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchBaseError: () => (/* binding */ FetchBaseError)\n/* harmony export */ });\n\n\nclass FetchBaseError extends Error {\n\t/**\n\t * @param {string} message \n\t * @param {string} type \n\t */\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2Vycm9ycy9iYXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTs7QUFFTjtBQUNQO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2Vycm9ycy9iYXNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IGNsYXNzIEZldGNoQmFzZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuXHQvKipcblx0ICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlIFxuXHQgKi9cblx0Y29uc3RydWN0b3IobWVzc2FnZSwgdHlwZSkge1xuXHRcdHN1cGVyKG1lc3NhZ2UpO1xuXHRcdC8vIEhpZGUgY3VzdG9tIGVycm9yIGltcGxlbWVudGF0aW9uIGRldGFpbHMgZnJvbSBlbmQtdXNlcnNcblx0XHRFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCB0aGlzLmNvbnN0cnVjdG9yKTtcblxuXHRcdHRoaXMudHlwZSA9IHR5cGU7XG5cdH1cblxuXHRnZXQgbmFtZSgpIHtcblx0XHRyZXR1cm4gdGhpcy5jb25zdHJ1Y3Rvci5uYW1lO1xuXHR9XG5cblx0Z2V0IFtTeW1ib2wudG9TdHJpbmdUYWddKCkge1xuXHRcdHJldHVybiB0aGlzLmNvbnN0cnVjdG9yLm5hbWU7XG5cdH1cbn1cblxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/errors/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/errors/fetch-error.js":
/*!***************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/errors/fetch-error.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchError: () => (/* binding */ FetchError)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web-std/fetch/src/errors/base.js\");\n\n\n\n/**\n * @typedef {{\n * address?: string\n * code: string\n * dest?: string\n * errno: number\n * info?: object\n * message: string\n * path?: string\n * port?: number\n * syscall: string\n * }} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nclass FetchError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} type -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2Vycm9ycy9mZXRjaC1lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDeUM7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047O0FBRUE7QUFDQTtBQUNBO0FBQ08seUJBQXlCLG9EQUFjO0FBQzlDO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLGFBQWE7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvYWx0Y29pbi1kYWRkeS9Eb3dubG9hZHMvb3dubHkvbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2ZldGNoL3NyYy9lcnJvcnMvZmV0Y2gtZXJyb3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQge0ZldGNoQmFzZUVycm9yfSBmcm9tICcuL2Jhc2UuanMnO1xuXG4vKipcbiAqIEB0eXBlZGVmIHt7XG4gKiBhZGRyZXNzPzogc3RyaW5nXG4gKiBjb2RlOiBzdHJpbmdcbiAqIGRlc3Q/OiBzdHJpbmdcbiAqIGVycm5vOiBudW1iZXJcbiAqIGluZm8/OiBvYmplY3RcbiAqIG1lc3NhZ2U6IHN0cmluZ1xuICogcGF0aD86IHN0cmluZ1xuICogcG9ydD86IG51bWJlclxuICogc3lzY2FsbDogc3RyaW5nXG4gKiB9fSBTeXN0ZW1FcnJvclxuKi9cblxuLyoqXG4gKiBGZXRjaEVycm9yIGludGVyZmFjZSBmb3Igb3BlcmF0aW9uYWwgZXJyb3JzXG4gKi9cbmV4cG9ydCBjbGFzcyBGZXRjaEVycm9yIGV4dGVuZHMgRmV0Y2hCYXNlRXJyb3Ige1xuXHQvKipcblx0ICogQHBhcmFtICB7c3RyaW5nfSBtZXNzYWdlIC0gICAgICBFcnJvciBtZXNzYWdlIGZvciBodW1hblxuXHQgKiBAcGFyYW0gIHtzdHJpbmd9IHR5cGUgLSAgICAgICAgRXJyb3IgdHlwZSBmb3IgbWFjaGluZVxuXHQgKiBAcGFyYW0gIHtTeXN0ZW1FcnJvcn0gW3N5c3RlbUVycm9yXSAtIEZvciBOb2RlLmpzIHN5c3RlbSBlcnJvclxuXHQgKi9cblx0Y29uc3RydWN0b3IobWVzc2FnZSwgdHlwZSwgc3lzdGVtRXJyb3IpIHtcblx0XHRzdXBlcihtZXNzYWdlLCB0eXBlKTtcblx0XHQvLyBXaGVuIGVyci50eXBlIGlzIGBzeXN0ZW1gLCBlcnIuZXJyb3JlZFN5c0NhbGwgY29udGFpbnMgc3lzdGVtIGVycm9yIGFuZCBlcnIuY29kZSBjb250YWlucyBzeXN0ZW0gZXJyb3IgY29kZVxuXHRcdGlmIChzeXN0ZW1FcnJvcikge1xuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW11bHRpLWFzc2lnblxuXHRcdFx0dGhpcy5jb2RlID0gdGhpcy5lcnJubyA9IHN5c3RlbUVycm9yLmNvZGU7XG5cdFx0XHR0aGlzLmVycm9yZWRTeXNDYWxsID0gc3lzdGVtRXJyb3Iuc3lzY2FsbDtcblx0XHR9XG5cdH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/errors/fetch-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/fetch.js":
/*!**************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/fetch.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_11__.Blob),\n/* harmony export */   FormData: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_12__.FormData),\n/* harmony export */   Headers: () => (/* reexport safe */ _headers_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_11__.ReadableStream),\n/* harmony export */   Request: () => (/* reexport safe */ _request_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]),\n/* harmony export */   Response: () => (/* reexport safe */ _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fetch: () => (/* binding */ fetch)\n/* harmony export */ });\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zlib */ \"zlib\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var mrmime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mrmime */ \"(ssr)/./node_modules/mrmime/index.mjs\");\n/* harmony import */ var data_uri_to_buffer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! data-uri-to-buffer */ \"(ssr)/./node_modules/data-uri-to-buffer/dist/src/index.js\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var _body_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./body.js */ \"(ssr)/./node_modules/@web-std/fetch/src/body.js\");\n/* harmony import */ var _response_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./response.js */ \"(ssr)/./node_modules/@web-std/fetch/src/response.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@web-std/fetch/src/headers.js\");\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./request.js */ \"(ssr)/./node_modules/@web-std/fetch/src/request.js\");\n/* harmony import */ var _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./errors/fetch-error.js */ \"(ssr)/./node_modules/@web-std/fetch/src/errors/fetch-error.js\");\n/* harmony import */ var _errors_abort_error_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./errors/abort-error.js */ \"(ssr)/./node_modules/@web-std/fetch/src/errors/abort-error.js\");\n/* harmony import */ var _utils_is_redirect_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/is-redirect.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/is-redirect.js\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/blob/src/lib.node.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/form-data/src/lib.node.js\");\n/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:', 'file:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request.js').default} url - Absolute url or Request instance\n * @param   {RequestInit & import('./request.js').RequestExtraOptions} [options_] - Fetch options\n * @return  {Promise<import('./response.js').default>}\n */\nasync function fetch(url, options_ = {}) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new _request_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"](url, options_);\n\t\tconst options = (0,_request_js__WEBPACK_IMPORTED_MODULE_9__.getNodeRequestOptions)(request);\n\t\tif (!supportedSchemas.has(options.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${options.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (options.protocol === 'data:') {\n\t\t\tconst data = data_uri_to_buffer__WEBPACK_IMPORTED_MODULE_5__(request.url.toString());\n\t\t\tconst response = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\tif (options.protocol === 'file:') {\n\t\t\tconst stream = fs__WEBPACK_IMPORTED_MODULE_3__.createReadStream(new URL(request.url))\n\t\t\tconst type = mrmime__WEBPACK_IMPORTED_MODULE_4__.lookup(request.url) || 'application/octet-stream'\n\t\t\tconst response = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](stream, {headers: {'Content-Type': type }});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (options.protocol === 'https:' ? https__WEBPACK_IMPORTED_MODULE_1__ : http__WEBPACK_IMPORTED_MODULE_0__).request;\n\t\tconst {signal} = request;\n\t\t/** @type {Response|null} */\n\t\tlet response = null;\n\t\t/** @type {import('http').IncomingMessage|null} */\n\t\tlet response_ = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new _errors_abort_error_js__WEBPACK_IMPORTED_MODULE_13__.AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body) {\n\t\t\t\trequest.body.cancel(error);\n\t\t\t}\n\n\t\t\tif (!response_) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse_.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', err => {\n\t\t\t// @ts-expect-error - err may not be SystemError\n\t\t\treject(new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__.FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, err => {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tresponse_?.emit(\"error\", err);\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = Object.assign(new Error('Premature close'), {\n\t\t\t\t\t\t\tcode: 'ERR_STREAM_PREMATURE_CLOSE'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresponse_?.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', incoming => {\n\t\t\tresponse_ = incoming;\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = (0,_headers_js__WEBPACK_IMPORTED_MODULE_8__.fromRawHeaders)(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif ((0,_utils_is_redirect_js__WEBPACK_IMPORTED_MODULE_15__.isRedirect)(Number(response_.statusCode))) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : new URL(location, request.url);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__.FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\theaders.set('Location', locationURL.toString());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__.FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new _headers_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"](request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\t// Note: We can not use `request.body` because send would have\n\t\t\t\t\t\t\t// consumed it already.\n\t\t\t\t\t\t\tbody: options_.body,\n\t\t\t\t\t\t\tsignal: signal,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tconst isStreamBody =\n\t\t\t\t\t\t\trequestOptions.body instanceof _package_js__WEBPACK_IMPORTED_MODULE_11__.ReadableStream ||\n\t\t\t\t\t\t\trequestOptions.body instanceof stream__WEBPACK_IMPORTED_MODULE_7__.Readable;\n\t\t\t\t\t\tif (response_.statusCode !== 303 && isStreamBody) {\n\t\t\t\t\t\t\treject(new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__.FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tfetch(new _request_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"](locationURL.href, requestOptions)).then(resolve, reject);\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(response_, new stream__WEBPACK_IMPORTED_MODULE_7__.PassThrough(), reject);\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib__WEBPACK_IMPORTED_MODULE_2__.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib__WEBPACK_IMPORTED_MODULE_2__.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(body, zlib__WEBPACK_IMPORTED_MODULE_2__.createGunzip(zlibOptions), reject);\n\t\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_body_js__WEBPACK_IMPORTED_MODULE_16__.fromAsyncIterable)(body), responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(response_, new stream__WEBPACK_IMPORTED_MODULE_7__.PassThrough(), reject);\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(body, zlib__WEBPACK_IMPORTED_MODULE_2__.createInflate(), reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(body, zlib__WEBPACK_IMPORTED_MODULE_2__.createInflateRaw(), reject);\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_body_js__WEBPACK_IMPORTED_MODULE_16__.fromAsyncIterable)(body), responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(body, zlib__WEBPACK_IMPORTED_MODULE_2__.createBrotliDecompress(), reject);\n\t\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_body_js__WEBPACK_IMPORTED_MODULE_16__.fromAsyncIterable)(body), responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_body_js__WEBPACK_IMPORTED_MODULE_16__.fromAsyncIterable)(body), responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t(0,_body_js__WEBPACK_IMPORTED_MODULE_16__.writeToStream)(request_, request);\n\t});\n}\n\n/**\n *\n * @param {import('http').ClientRequest} request\n * @param {(error:Error) => void} errorCallback\n */\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = buffer__WEBPACK_IMPORTED_MODULE_6__.Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\t/** @type {Buffer | undefined} */\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = Object.assign(new Error('Premature close'), {\n\t\t\t\t\tcode: 'ERR_STREAM_PREMATURE_CLOSE'\n\t\t\t\t});\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\t/** @param {Buffer} buf */\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = buffer__WEBPACK_IMPORTED_MODULE_6__.Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tbuffer__WEBPACK_IMPORTED_MODULE_6__.Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tbuffer__WEBPACK_IMPORTED_MODULE_6__.Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\tconst removeSocketListeners = () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t}\n\n\t\trequest.on('close', removeSocketListeners);\n\t\trequest.on('abort', removeSocketListeners);\n\t});\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fetch);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2ZldGNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFd0I7QUFDRTtBQUNGO0FBQ0o7QUFDVTtBQUNtQjtBQUNuQjs7QUFFNkI7QUFDdEI7QUFDZ0I7QUFDTztBQUNUO0FBQ0E7QUFDRDtBQUNHO0FBQ3BCO0FBQzhCOzs7QUFHSzs7QUFFcEU7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSwrQ0FBK0M7QUFDNUQsYUFBYSwwREFBMEQ7QUFDdkUsYUFBYTtBQUNiO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQSxzQkFBc0IsbURBQU87QUFDN0Isa0JBQWtCLGtFQUFxQjtBQUN2QztBQUNBLGlEQUFpRCxJQUFJLGdCQUFnQixtQ0FBbUM7QUFDeEc7O0FBRUE7QUFDQSxnQkFBZ0IsK0NBQWU7QUFDL0Isd0JBQXdCLHFEQUFRLFFBQVEsVUFBVSwrQkFBK0I7QUFDakY7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLGdEQUFtQjtBQUNyQyxnQkFBZ0IsMENBQVc7QUFDM0Isd0JBQXdCLHFEQUFRLFVBQVUsVUFBVSx1QkFBdUI7QUFDM0U7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0RBQWdELGtDQUFLLEdBQUcsaUNBQUk7QUFDNUQsU0FBUyxRQUFRO0FBQ2pCLGFBQWEsZUFBZTtBQUM1QjtBQUNBLGFBQWEscUNBQXFDO0FBQ2xEOztBQUVBO0FBQ0EscUJBQXFCLCtEQUFVO0FBQy9CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYywrREFBVSxlQUFlLGFBQWEsa0JBQWtCLFlBQVk7QUFDbEY7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwyREFBYzs7QUFFakM7QUFDQSxPQUFPLGtFQUFVO0FBQ2pCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0RBQVUsMkVBQTJFLFlBQVk7QUFDbEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0IsK0RBQVUsaUNBQWlDLFlBQVk7QUFDekU7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtREFBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxzQ0FBc0Msd0RBQWM7QUFDcEQsc0NBQXNDLDRDQUFlO0FBQ3JEO0FBQ0Esa0JBQWtCLCtEQUFVO0FBQzVCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsbURBQU87QUFDdkI7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0RBQXNELGlCQUFpQjtBQUN2RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBLGNBQWMsZ0RBQUksZ0JBQWdCLCtDQUFXO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIscURBQVE7QUFDM0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsOENBQWlCO0FBQzVCLGlCQUFpQiw4Q0FBaUI7QUFDbEM7O0FBRUE7QUFDQTtBQUNBLFdBQVcsZ0RBQUksT0FBTyw4Q0FBaUI7QUFDdkMsbUJBQW1CLHFEQUFRLENBQUMsNERBQWlCO0FBQzdDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnREFBSSxnQkFBZ0IsK0NBQVc7QUFDL0M7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnREFBSSxPQUFPLCtDQUFrQjtBQUMxQyxPQUFPO0FBQ1AsYUFBYSxnREFBSSxPQUFPLGtEQUFxQjtBQUM3Qzs7QUFFQSxvQkFBb0IscURBQVEsQ0FBQyw0REFBaUI7QUFDOUM7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxnREFBSSxPQUFPLHdEQUEyQjtBQUNqRCxtQkFBbUIscURBQVEsQ0FBQyw0REFBaUI7QUFDN0M7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLHFEQUFRLENBQUMsNERBQWlCO0FBQzVDO0FBQ0EsR0FBRzs7QUFFSCxFQUFFLHdEQUFhO0FBQ2YsRUFBRTtBQUNGOztBQUVBO0FBQ0E7QUFDQSxXQUFXLDhCQUE4QjtBQUN6QyxXQUFXLHVCQUF1QjtBQUNsQztBQUNBO0FBQ0Esb0JBQW9CLDBDQUFNOztBQUUxQjtBQUNBO0FBQ0EsWUFBWSxvQkFBb0I7QUFDaEM7O0FBRUE7QUFDQSxTQUFTLFNBQVM7QUFDbEI7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBLGNBQWMsUUFBUTtBQUN0QjtBQUNBLDZCQUE2QiwwQ0FBTTs7QUFFbkM7QUFDQTtBQUNBO0FBQ0EsS0FBSywwQ0FBTTtBQUNYLEtBQUssMENBQU07QUFDWDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRTtBQUNGOztBQUVBLGlFQUFlLEtBQUs7QUFDSiIsInNvdXJjZXMiOlsiL2hvbWUvYWx0Y29pbi1kYWRkeS9Eb3dubG9hZHMvb3dubHkvbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2ZldGNoL3NyYy9mZXRjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEluZGV4LmpzXG4gKlxuICogYSByZXF1ZXN0IEFQSSBjb21wYXRpYmxlIHdpdGggd2luZG93LmZldGNoXG4gKlxuICogQWxsIHNwZWMgYWxnb3JpdGhtIHN0ZXAgbnVtYmVycyBhcmUgYmFzZWQgb24gaHR0cHM6Ly9mZXRjaC5zcGVjLndoYXR3Zy5vcmcvY29tbWl0LXNuYXBzaG90cy9hZTcxNjgyMmNiM2E2MTg0MzIyNmNkMDkwZWVmYzY1ODk0NDZjMWQyLy5cbiAqL1xuXG5pbXBvcnQgaHR0cCBmcm9tICdodHRwJztcbmltcG9ydCBodHRwcyBmcm9tICdodHRwcyc7XG5pbXBvcnQgemxpYiBmcm9tICd6bGliJztcbmltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgKiBhcyBtaW1lIGZyb20gJ21ybWltZSdcbmltcG9ydCBkYXRhVXJpVG9CdWZmZXIgZnJvbSAnZGF0YS11cmktdG8tYnVmZmVyJztcbmltcG9ydCB7QnVmZmVyfSBmcm9tICdidWZmZXInO1xuXG5pbXBvcnQge3dyaXRlVG9TdHJlYW0sIGZyb21Bc3luY0l0ZXJhYmxlfSBmcm9tICcuL2JvZHkuanMnO1xuaW1wb3J0IFJlc3BvbnNlIGZyb20gJy4vcmVzcG9uc2UuanMnO1xuaW1wb3J0IEhlYWRlcnMsIHtmcm9tUmF3SGVhZGVyc30gZnJvbSAnLi9oZWFkZXJzLmpzJztcbmltcG9ydCBSZXF1ZXN0LCB7Z2V0Tm9kZVJlcXVlc3RPcHRpb25zfSBmcm9tICcuL3JlcXVlc3QuanMnO1xuaW1wb3J0IHtGZXRjaEVycm9yfSBmcm9tICcuL2Vycm9ycy9mZXRjaC1lcnJvci5qcyc7XG5pbXBvcnQge0Fib3J0RXJyb3J9IGZyb20gJy4vZXJyb3JzL2Fib3J0LWVycm9yLmpzJztcbmltcG9ydCB7aXNSZWRpcmVjdH0gZnJvbSAnLi91dGlscy9pcy1yZWRpcmVjdC5qcyc7XG5pbXBvcnQge3BpcGVsaW5lIGFzIHB1bXAsIFBhc3NUaHJvdWdofSBmcm9tICdzdHJlYW0nO1xuaW1wb3J0ICogYXMgU3RyZWFtIGZyb20gJ3N0cmVhbSc7XG5pbXBvcnQgeyBSZWFkYWJsZVN0cmVhbSwgQmxvYiwgRm9ybURhdGEgIH0gZnJvbSAnLi9wYWNrYWdlLmpzJztcblxuXG5leHBvcnQge0hlYWRlcnMsIFJlcXVlc3QsIFJlc3BvbnNlLCBSZWFkYWJsZVN0cmVhbSwgQmxvYiwgRm9ybURhdGF9O1xuXG5jb25zdCBzdXBwb3J0ZWRTY2hlbWFzID0gbmV3IFNldChbJ2RhdGE6JywgJ2h0dHA6JywgJ2h0dHBzOicsICdmaWxlOiddKTtcblxuLyoqXG4gKiBGZXRjaCBmdW5jdGlvblxuICpcbiAqIEBwYXJhbSAgIHtzdHJpbmcgfCBVUkwgfCBpbXBvcnQoJy4vcmVxdWVzdC5qcycpLmRlZmF1bHR9IHVybCAtIEFic29sdXRlIHVybCBvciBSZXF1ZXN0IGluc3RhbmNlXG4gKiBAcGFyYW0gICB7UmVxdWVzdEluaXQgJiBpbXBvcnQoJy4vcmVxdWVzdC5qcycpLlJlcXVlc3RFeHRyYU9wdGlvbnN9IFtvcHRpb25zX10gLSBGZXRjaCBvcHRpb25zXG4gKiBAcmV0dXJuICB7UHJvbWlzZTxpbXBvcnQoJy4vcmVzcG9uc2UuanMnKS5kZWZhdWx0Pn1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gZmV0Y2godXJsLCBvcHRpb25zXyA9IHt9KSB7XG5cdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0Ly8gQnVpbGQgcmVxdWVzdCBvYmplY3Rcblx0XHRjb25zdCByZXF1ZXN0ID0gbmV3IFJlcXVlc3QodXJsLCBvcHRpb25zXyk7XG5cdFx0Y29uc3Qgb3B0aW9ucyA9IGdldE5vZGVSZXF1ZXN0T3B0aW9ucyhyZXF1ZXN0KTtcblx0XHRpZiAoIXN1cHBvcnRlZFNjaGVtYXMuaGFzKG9wdGlvbnMucHJvdG9jb2wpKSB7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKGBub2RlLWZldGNoIGNhbm5vdCBsb2FkICR7dXJsfS4gVVJMIHNjaGVtZSBcIiR7b3B0aW9ucy5wcm90b2NvbC5yZXBsYWNlKC86JC8sICcnKX1cIiBpcyBub3Qgc3VwcG9ydGVkLmApO1xuXHRcdH1cblxuXHRcdGlmIChvcHRpb25zLnByb3RvY29sID09PSAnZGF0YTonKSB7XG5cdFx0XHRjb25zdCBkYXRhID0gZGF0YVVyaVRvQnVmZmVyKHJlcXVlc3QudXJsLnRvU3RyaW5nKCkpO1xuXHRcdFx0Y29uc3QgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2UoZGF0YSwge2hlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogZGF0YS50eXBlRnVsbH19KTtcblx0XHRcdHJlc29sdmUocmVzcG9uc2UpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmIChvcHRpb25zLnByb3RvY29sID09PSAnZmlsZTonKSB7XG5cdFx0XHRjb25zdCBzdHJlYW0gPSBmcy5jcmVhdGVSZWFkU3RyZWFtKG5ldyBVUkwocmVxdWVzdC51cmwpKVxuXHRcdFx0Y29uc3QgdHlwZSA9IG1pbWUubG9va3VwKHJlcXVlc3QudXJsKSB8fCAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJ1xuXHRcdFx0Y29uc3QgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2Uoc3RyZWFtLCB7aGVhZGVyczogeydDb250ZW50LVR5cGUnOiB0eXBlIH19KTtcblx0XHRcdHJlc29sdmUocmVzcG9uc2UpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIFdyYXAgaHR0cC5yZXF1ZXN0IGludG8gZmV0Y2hcblx0XHRjb25zdCBzZW5kID0gKG9wdGlvbnMucHJvdG9jb2wgPT09ICdodHRwczonID8gaHR0cHMgOiBodHRwKS5yZXF1ZXN0O1xuXHRcdGNvbnN0IHtzaWduYWx9ID0gcmVxdWVzdDtcblx0XHQvKiogQHR5cGUge1Jlc3BvbnNlfG51bGx9ICovXG5cdFx0bGV0IHJlc3BvbnNlID0gbnVsbDtcblx0XHQvKiogQHR5cGUge2ltcG9ydCgnaHR0cCcpLkluY29taW5nTWVzc2FnZXxudWxsfSAqL1xuXHRcdGxldCByZXNwb25zZV8gPSBudWxsO1xuXG5cdFx0Y29uc3QgYWJvcnQgPSAoKSA9PiB7XG5cdFx0XHRjb25zdCBlcnJvciA9IG5ldyBBYm9ydEVycm9yKCdUaGUgb3BlcmF0aW9uIHdhcyBhYm9ydGVkLicpO1xuXHRcdFx0cmVqZWN0KGVycm9yKTtcblx0XHRcdGlmIChyZXF1ZXN0LmJvZHkpIHtcblx0XHRcdFx0cmVxdWVzdC5ib2R5LmNhbmNlbChlcnJvcik7XG5cdFx0XHR9XG5cblx0XHRcdGlmICghcmVzcG9uc2VfKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0cmVzcG9uc2VfLmVtaXQoJ2Vycm9yJywgZXJyb3IpO1xuXHRcdH07XG5cblx0XHRpZiAoc2lnbmFsICYmIHNpZ25hbC5hYm9ydGVkKSB7XG5cdFx0XHRhYm9ydCgpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbnN0IGFib3J0QW5kRmluYWxpemUgPSAoKSA9PiB7XG5cdFx0XHRhYm9ydCgpO1xuXHRcdFx0ZmluYWxpemUoKTtcblx0XHR9O1xuXG5cdFx0Ly8gU2VuZCByZXF1ZXN0XG5cdFx0Y29uc3QgcmVxdWVzdF8gPSBzZW5kKG9wdGlvbnMpO1xuXG5cdFx0aWYgKHNpZ25hbCkge1xuXHRcdFx0c2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgYWJvcnRBbmRGaW5hbGl6ZSk7XG5cdFx0fVxuXG5cdFx0Y29uc3QgZmluYWxpemUgPSAoKSA9PiB7XG5cdFx0XHRyZXF1ZXN0Xy5hYm9ydCgpO1xuXHRcdFx0aWYgKHNpZ25hbCkge1xuXHRcdFx0XHRzaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBhYm9ydEFuZEZpbmFsaXplKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0cmVxdWVzdF8ub24oJ2Vycm9yJywgZXJyID0+IHtcblx0XHRcdC8vIEB0cy1leHBlY3QtZXJyb3IgLSBlcnIgbWF5IG5vdCBiZSBTeXN0ZW1FcnJvclxuXHRcdFx0cmVqZWN0KG5ldyBGZXRjaEVycm9yKGByZXF1ZXN0IHRvICR7cmVxdWVzdC51cmx9IGZhaWxlZCwgcmVhc29uOiAke2Vyci5tZXNzYWdlfWAsICdzeXN0ZW0nLCBlcnIpKTtcblx0XHRcdGZpbmFsaXplKCk7XG5cdFx0fSk7XG5cblx0XHRmaXhSZXNwb25zZUNodW5rZWRUcmFuc2ZlckJhZEVuZGluZyhyZXF1ZXN0XywgZXJyID0+IHtcblx0XHRcdGlmIChzaWduYWwgJiYgc2lnbmFsLmFib3J0ZWQpIHtcblx0XHRcdFx0cmV0dXJuXG5cdFx0XHR9XG5cblx0XHRcdHJlc3BvbnNlXz8uZW1pdChcImVycm9yXCIsIGVycik7XG5cdFx0fSk7XG5cblx0XHQvKiBjOCBpZ25vcmUgbmV4dCAxOCAqL1xuXHRcdGlmIChwYXJzZUludChwcm9jZXNzLnZlcnNpb24uc3Vic3RyaW5nKDEpKSA8IDE0KSB7XG5cdFx0XHQvLyBCZWZvcmUgTm9kZS5qcyAxNCwgcGlwZWxpbmUoKSBkb2VzIG5vdCBmdWxseSBzdXBwb3J0IGFzeW5jIGl0ZXJhdG9ycyBhbmQgZG9lcyBub3QgYWx3YXlzXG5cdFx0XHQvLyBwcm9wZXJseSBoYW5kbGUgd2hlbiB0aGUgc29ja2V0IGNsb3NlL2VuZCBldmVudHMgYXJlIG91dCBvZiBvcmRlci5cblx0XHRcdHJlcXVlc3RfLm9uKCdzb2NrZXQnLCBzID0+IHtcblx0XHRcdFx0cy5wcmVwZW5kTGlzdGVuZXIoJ2Nsb3NlJywgaGFkRXJyb3IgPT4ge1xuXHRcdFx0XHRcdC8vIGlmIGEgZGF0YSBsaXN0ZW5lciBpcyBzdGlsbCBwcmVzZW50IHdlIGRpZG4ndCBlbmQgY2xlYW5seVxuXHRcdFx0XHRcdGNvbnN0IGhhc0RhdGFMaXN0ZW5lciA9IHMubGlzdGVuZXJDb3VudCgnZGF0YScpID4gMFxuXG5cdFx0XHRcdFx0Ly8gaWYgZW5kIGhhcHBlbmVkIGJlZm9yZSBjbG9zZSBidXQgdGhlIHNvY2tldCBkaWRuJ3QgZW1pdCBhbiBlcnJvciwgZG8gaXQgbm93XG5cdFx0XHRcdFx0aWYgKHJlc3BvbnNlICYmIGhhc0RhdGFMaXN0ZW5lciAmJiAhaGFkRXJyb3IgJiYgIShzaWduYWwgJiYgc2lnbmFsLmFib3J0ZWQpKSB7XG5cdFx0XHRcdFx0XHRjb25zdCBlcnIgPSBPYmplY3QuYXNzaWduKG5ldyBFcnJvcignUHJlbWF0dXJlIGNsb3NlJyksIHtcblx0XHRcdFx0XHRcdFx0Y29kZTogJ0VSUl9TVFJFQU1fUFJFTUFUVVJFX0NMT1NFJ1xuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRyZXNwb25zZV8/LmVtaXQoJ2Vycm9yJywgZXJyKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0cmVxdWVzdF8ub24oJ3Jlc3BvbnNlJywgaW5jb21pbmcgPT4ge1xuXHRcdFx0cmVzcG9uc2VfID0gaW5jb21pbmc7XG5cdFx0XHRyZXF1ZXN0Xy5zZXRUaW1lb3V0KDApO1xuXHRcdFx0Y29uc3QgaGVhZGVycyA9IGZyb21SYXdIZWFkZXJzKHJlc3BvbnNlXy5yYXdIZWFkZXJzKTtcblxuXHRcdFx0Ly8gSFRUUCBmZXRjaCBzdGVwIDVcblx0XHRcdGlmIChpc1JlZGlyZWN0KE51bWJlcihyZXNwb25zZV8uc3RhdHVzQ29kZSkpKSB7XG5cdFx0XHRcdC8vIEhUVFAgZmV0Y2ggc3RlcCA1LjJcblx0XHRcdFx0Y29uc3QgbG9jYXRpb24gPSBoZWFkZXJzLmdldCgnTG9jYXRpb24nKTtcblxuXHRcdFx0XHQvLyBIVFRQIGZldGNoIHN0ZXAgNS4zXG5cdFx0XHRcdGNvbnN0IGxvY2F0aW9uVVJMID0gbG9jYXRpb24gPT09IG51bGwgPyBudWxsIDogbmV3IFVSTChsb2NhdGlvbiwgcmVxdWVzdC51cmwpO1xuXG5cdFx0XHRcdC8vIEhUVFAgZmV0Y2ggc3RlcCA1LjVcblx0XHRcdFx0c3dpdGNoIChyZXF1ZXN0LnJlZGlyZWN0KSB7XG5cdFx0XHRcdFx0Y2FzZSAnZXJyb3InOlxuXHRcdFx0XHRcdFx0cmVqZWN0KG5ldyBGZXRjaEVycm9yKGB1cmkgcmVxdWVzdGVkIHJlc3BvbmRzIHdpdGggYSByZWRpcmVjdCwgcmVkaXJlY3QgbW9kZSBpcyBzZXQgdG8gZXJyb3I6ICR7cmVxdWVzdC51cmx9YCwgJ25vLXJlZGlyZWN0JykpO1xuXHRcdFx0XHRcdFx0ZmluYWxpemUoKTtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHRjYXNlICdtYW51YWwnOlxuXHRcdFx0XHRcdFx0Ly8gTm9kZS1mZXRjaC1zcGVjaWZpYyBzdGVwOiBtYWtlIG1hbnVhbCByZWRpcmVjdCBhIGJpdCBlYXNpZXIgdG8gdXNlIGJ5IHNldHRpbmcgdGhlIExvY2F0aW9uIGhlYWRlciB2YWx1ZSB0byB0aGUgcmVzb2x2ZWQgVVJMLlxuXHRcdFx0XHRcdFx0aWYgKGxvY2F0aW9uVVJMICE9PSBudWxsKSB7XG5cdFx0XHRcdFx0XHRcdGhlYWRlcnMuc2V0KCdMb2NhdGlvbicsIGxvY2F0aW9uVVJMLnRvU3RyaW5nKCkpO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRjYXNlICdmb2xsb3cnOiB7XG5cdFx0XHRcdFx0XHQvLyBIVFRQLXJlZGlyZWN0IGZldGNoIHN0ZXAgMlxuXHRcdFx0XHRcdFx0aWYgKGxvY2F0aW9uVVJMID09PSBudWxsKSB7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBIVFRQLXJlZGlyZWN0IGZldGNoIHN0ZXAgNVxuXHRcdFx0XHRcdFx0aWYgKHJlcXVlc3QuY291bnRlciA+PSByZXF1ZXN0LmZvbGxvdykge1xuXHRcdFx0XHRcdFx0XHRyZWplY3QobmV3IEZldGNoRXJyb3IoYG1heGltdW0gcmVkaXJlY3QgcmVhY2hlZCBhdDogJHtyZXF1ZXN0LnVybH1gLCAnbWF4LXJlZGlyZWN0JykpO1xuXHRcdFx0XHRcdFx0XHRmaW5hbGl6ZSgpO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIEhUVFAtcmVkaXJlY3QgZmV0Y2ggc3RlcCA2IChjb3VudGVyIGluY3JlbWVudClcblx0XHRcdFx0XHRcdC8vIENyZWF0ZSBhIG5ldyBSZXF1ZXN0IG9iamVjdC5cblx0XHRcdFx0XHRcdGNvbnN0IHJlcXVlc3RPcHRpb25zID0ge1xuXHRcdFx0XHRcdFx0XHRoZWFkZXJzOiBuZXcgSGVhZGVycyhyZXF1ZXN0LmhlYWRlcnMpLFxuXHRcdFx0XHRcdFx0XHRmb2xsb3c6IHJlcXVlc3QuZm9sbG93LFxuXHRcdFx0XHRcdFx0XHRjb3VudGVyOiByZXF1ZXN0LmNvdW50ZXIgKyAxLFxuXHRcdFx0XHRcdFx0XHRhZ2VudDogcmVxdWVzdC5hZ2VudCxcblx0XHRcdFx0XHRcdFx0Y29tcHJlc3M6IHJlcXVlc3QuY29tcHJlc3MsXG5cdFx0XHRcdFx0XHRcdG1ldGhvZDogcmVxdWVzdC5tZXRob2QsXG5cdFx0XHRcdFx0XHRcdC8vIE5vdGU6IFdlIGNhbiBub3QgdXNlIGByZXF1ZXN0LmJvZHlgIGJlY2F1c2Ugc2VuZCB3b3VsZCBoYXZlXG5cdFx0XHRcdFx0XHRcdC8vIGNvbnN1bWVkIGl0IGFscmVhZHkuXG5cdFx0XHRcdFx0XHRcdGJvZHk6IG9wdGlvbnNfLmJvZHksXG5cdFx0XHRcdFx0XHRcdHNpZ25hbDogc2lnbmFsLFxuXHRcdFx0XHRcdFx0XHRzaXplOiByZXF1ZXN0LnNpemVcblx0XHRcdFx0XHRcdH07XG5cblx0XHRcdFx0XHRcdC8vIEhUVFAtcmVkaXJlY3QgZmV0Y2ggc3RlcCA5XG5cdFx0XHRcdFx0XHRjb25zdCBpc1N0cmVhbUJvZHkgPVxuXHRcdFx0XHRcdFx0XHRyZXF1ZXN0T3B0aW9ucy5ib2R5IGluc3RhbmNlb2YgUmVhZGFibGVTdHJlYW0gfHxcblx0XHRcdFx0XHRcdFx0cmVxdWVzdE9wdGlvbnMuYm9keSBpbnN0YW5jZW9mIFN0cmVhbS5SZWFkYWJsZTtcblx0XHRcdFx0XHRcdGlmIChyZXNwb25zZV8uc3RhdHVzQ29kZSAhPT0gMzAzICYmIGlzU3RyZWFtQm9keSkge1xuXHRcdFx0XHRcdFx0XHRyZWplY3QobmV3IEZldGNoRXJyb3IoJ0Nhbm5vdCBmb2xsb3cgcmVkaXJlY3Qgd2l0aCBib2R5IGJlaW5nIGEgcmVhZGFibGUgc3RyZWFtJywgJ3Vuc3VwcG9ydGVkLXJlZGlyZWN0JykpO1xuXHRcdFx0XHRcdFx0XHRmaW5hbGl6ZSgpO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIEhUVFAtcmVkaXJlY3QgZmV0Y2ggc3RlcCAxMVxuXHRcdFx0XHRcdFx0aWYgKHJlc3BvbnNlXy5zdGF0dXNDb2RlID09PSAzMDMgfHwgKChyZXNwb25zZV8uc3RhdHVzQ29kZSA9PT0gMzAxIHx8IHJlc3BvbnNlXy5zdGF0dXNDb2RlID09PSAzMDIpICYmIHJlcXVlc3QubWV0aG9kID09PSAnUE9TVCcpKSB7XG5cdFx0XHRcdFx0XHRcdHJlcXVlc3RPcHRpb25zLm1ldGhvZCA9ICdHRVQnO1xuXHRcdFx0XHRcdFx0XHRyZXF1ZXN0T3B0aW9ucy5ib2R5ID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdFx0XHRyZXF1ZXN0T3B0aW9ucy5oZWFkZXJzLmRlbGV0ZSgnY29udGVudC1sZW5ndGgnKTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gSFRUUC1yZWRpcmVjdCBmZXRjaCBzdGVwIDE1XG5cdFx0XHRcdFx0XHRmZXRjaChuZXcgUmVxdWVzdChsb2NhdGlvblVSTC5ocmVmLCByZXF1ZXN0T3B0aW9ucykpLnRoZW4ocmVzb2x2ZSwgcmVqZWN0KTtcblx0XHRcdFx0XHRcdGZpbmFsaXplKCk7XG5cdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRcdHJldHVybiByZWplY3QobmV3IFR5cGVFcnJvcihgUmVkaXJlY3Qgb3B0aW9uICcke3JlcXVlc3QucmVkaXJlY3R9JyBpcyBub3QgYSB2YWxpZCB2YWx1ZSBvZiBSZXF1ZXN0UmVkaXJlY3RgKSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gUHJlcGFyZSByZXNwb25zZVxuXHRcdFx0aWYgKHNpZ25hbCkge1xuXHRcdFx0XHRyZXNwb25zZV8ub25jZSgnZW5kJywgKCkgPT4ge1xuXHRcdFx0XHRcdHNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKCdhYm9ydCcsIGFib3J0QW5kRmluYWxpemUpO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblxuXHRcdFx0bGV0IGJvZHkgPSBwdW1wKHJlc3BvbnNlXywgbmV3IFBhc3NUaHJvdWdoKCksIHJlamVjdCk7XG5cdFx0XHQvLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL3B1bGwvMjkzNzZcblx0XHRcdC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cblx0XHRcdGlmIChwcm9jZXNzLnZlcnNpb24gPCAndjEyLjEwJykge1xuXHRcdFx0XHRyZXNwb25zZV8ub24oJ2Fib3J0ZWQnLCBhYm9ydEFuZEZpbmFsaXplKTtcblx0XHRcdH1cblxuXHRcdFx0Y29uc3QgcmVzcG9uc2VPcHRpb25zID0ge1xuXHRcdFx0XHR1cmw6IHJlcXVlc3QudXJsLFxuXHRcdFx0XHRzdGF0dXM6IHJlc3BvbnNlXy5zdGF0dXNDb2RlLFxuXHRcdFx0XHRzdGF0dXNUZXh0OiByZXNwb25zZV8uc3RhdHVzTWVzc2FnZSxcblx0XHRcdFx0aGVhZGVycyxcblx0XHRcdFx0c2l6ZTogcmVxdWVzdC5zaXplLFxuXHRcdFx0XHRjb3VudGVyOiByZXF1ZXN0LmNvdW50ZXIsXG5cdFx0XHRcdGhpZ2hXYXRlck1hcms6IHJlcXVlc3QuaGlnaFdhdGVyTWFya1xuXHRcdFx0fTtcblxuXHRcdFx0Ly8gSFRUUC1uZXR3b3JrIGZldGNoIHN0ZXAgMTIuMS4xLjNcblx0XHRcdGNvbnN0IGNvZGluZ3MgPSBoZWFkZXJzLmdldCgnQ29udGVudC1FbmNvZGluZycpO1xuXG5cdFx0XHQvLyBIVFRQLW5ldHdvcmsgZmV0Y2ggc3RlcCAxMi4xLjEuNDogaGFuZGxlIGNvbnRlbnQgY29kaW5nc1xuXG5cdFx0XHQvLyBpbiBmb2xsb3dpbmcgc2NlbmFyaW9zIHdlIGlnbm9yZSBjb21wcmVzc2lvbiBzdXBwb3J0XG5cdFx0XHQvLyAxLiBjb21wcmVzc2lvbiBzdXBwb3J0IGlzIGRpc2FibGVkXG5cdFx0XHQvLyAyLiBIRUFEIHJlcXVlc3Rcblx0XHRcdC8vIDMuIG5vIENvbnRlbnQtRW5jb2RpbmcgaGVhZGVyXG5cdFx0XHQvLyA0LiBubyBjb250ZW50IHJlc3BvbnNlICgyMDQpXG5cdFx0XHQvLyA1LiBjb250ZW50IG5vdCBtb2RpZmllZCByZXNwb25zZSAoMzA0KVxuXHRcdFx0aWYgKCFyZXF1ZXN0LmNvbXByZXNzIHx8IHJlcXVlc3QubWV0aG9kID09PSAnSEVBRCcgfHwgY29kaW5ncyA9PT0gbnVsbCB8fCByZXNwb25zZV8uc3RhdHVzQ29kZSA9PT0gMjA0IHx8IHJlc3BvbnNlXy5zdGF0dXNDb2RlID09PSAzMDQpIHtcblx0XHRcdFx0cmVzcG9uc2UgPSBuZXcgUmVzcG9uc2UoYm9keSwgcmVzcG9uc2VPcHRpb25zKTtcblx0XHRcdFx0cmVzb2x2ZShyZXNwb25zZSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gRm9yIE5vZGUgdjYrXG5cdFx0XHQvLyBCZSBsZXNzIHN0cmljdCB3aGVuIGRlY29kaW5nIGNvbXByZXNzZWQgcmVzcG9uc2VzLCBzaW5jZSBzb21ldGltZXNcblx0XHRcdC8vIHNlcnZlcnMgc2VuZCBzbGlnaHRseSBpbnZhbGlkIHJlc3BvbnNlcyB0aGF0IGFyZSBzdGlsbCBhY2NlcHRlZFxuXHRcdFx0Ly8gYnkgY29tbW9uIGJyb3dzZXJzLlxuXHRcdFx0Ly8gQWx3YXlzIHVzaW5nIFpfU1lOQ19GTFVTSCBpcyB3aGF0IGNVUkwgZG9lcy5cblx0XHRcdGNvbnN0IHpsaWJPcHRpb25zID0ge1xuXHRcdFx0XHRmbHVzaDogemxpYi5aX1NZTkNfRkxVU0gsXG5cdFx0XHRcdGZpbmlzaEZsdXNoOiB6bGliLlpfU1lOQ19GTFVTSFxuXHRcdFx0fTtcblxuXHRcdFx0Ly8gRm9yIGd6aXBcblx0XHRcdGlmIChjb2RpbmdzID09PSAnZ3ppcCcgfHwgY29kaW5ncyA9PT0gJ3gtZ3ppcCcpIHtcblx0XHRcdFx0Ym9keSA9IHB1bXAoYm9keSwgemxpYi5jcmVhdGVHdW56aXAoemxpYk9wdGlvbnMpLCByZWplY3QpO1xuXHRcdFx0XHRyZXNwb25zZSA9IG5ldyBSZXNwb25zZShmcm9tQXN5bmNJdGVyYWJsZShib2R5KSwgcmVzcG9uc2VPcHRpb25zKTtcblx0XHRcdFx0cmVzb2x2ZShyZXNwb25zZSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gRm9yIGRlZmxhdGVcblx0XHRcdGlmIChjb2RpbmdzID09PSAnZGVmbGF0ZScgfHwgY29kaW5ncyA9PT0gJ3gtZGVmbGF0ZScpIHtcblx0XHRcdFx0Ly8gSGFuZGxlIHRoZSBpbmZhbW91cyByYXcgZGVmbGF0ZSByZXNwb25zZSBmcm9tIG9sZCBzZXJ2ZXJzXG5cdFx0XHRcdC8vIGEgaGFjayBmb3Igb2xkIElJUyBhbmQgQXBhY2hlIHNlcnZlcnNcblx0XHRcdFx0Y29uc3QgcmF3ID0gcHVtcChyZXNwb25zZV8sIG5ldyBQYXNzVGhyb3VnaCgpLCByZWplY3QpO1xuXHRcdFx0XHRyYXcub25jZSgnZGF0YScsIGNodW5rID0+IHtcblx0XHRcdFx0XHQvLyBTZWUgaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zNzUxOTgyOFxuXHRcdFx0XHRcdGlmICgoY2h1bmtbMF0gJiAweDBGKSA9PT0gMHgwOCkge1xuXHRcdFx0XHRcdFx0Ym9keSA9IHB1bXAoYm9keSwgemxpYi5jcmVhdGVJbmZsYXRlKCksIHJlamVjdCk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGJvZHkgPSBwdW1wKGJvZHksIHpsaWIuY3JlYXRlSW5mbGF0ZVJhdygpLCByZWplY3QpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJlc3BvbnNlID0gbmV3IFJlc3BvbnNlKGZyb21Bc3luY0l0ZXJhYmxlKGJvZHkpLCByZXNwb25zZU9wdGlvbnMpO1xuXHRcdFx0XHRcdHJlc29sdmUocmVzcG9uc2UpO1xuXHRcdFx0XHR9KTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3IgYnJcblx0XHRcdGlmIChjb2RpbmdzID09PSAnYnInKSB7XG5cdFx0XHRcdGJvZHkgPSBwdW1wKGJvZHksIHpsaWIuY3JlYXRlQnJvdGxpRGVjb21wcmVzcygpLCByZWplY3QpO1xuXHRcdFx0XHRyZXNwb25zZSA9IG5ldyBSZXNwb25zZShmcm9tQXN5bmNJdGVyYWJsZShib2R5KSwgcmVzcG9uc2VPcHRpb25zKTtcblx0XHRcdFx0cmVzb2x2ZShyZXNwb25zZSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT3RoZXJ3aXNlLCB1c2UgcmVzcG9uc2UgYXMtaXNcblx0XHRcdHJlc3BvbnNlID0gbmV3IFJlc3BvbnNlKGZyb21Bc3luY0l0ZXJhYmxlKGJvZHkpLCByZXNwb25zZU9wdGlvbnMpO1xuXHRcdFx0cmVzb2x2ZShyZXNwb25zZSk7XG5cdFx0fSk7XG5cblx0XHR3cml0ZVRvU3RyZWFtKHJlcXVlc3RfLCByZXF1ZXN0KTtcblx0fSk7XG59XG5cbi8qKlxuICpcbiAqIEBwYXJhbSB7aW1wb3J0KCdodHRwJykuQ2xpZW50UmVxdWVzdH0gcmVxdWVzdFxuICogQHBhcmFtIHsoZXJyb3I6RXJyb3IpID0+IHZvaWR9IGVycm9yQ2FsbGJhY2tcbiAqL1xuZnVuY3Rpb24gZml4UmVzcG9uc2VDaHVua2VkVHJhbnNmZXJCYWRFbmRpbmcocmVxdWVzdCwgZXJyb3JDYWxsYmFjaykge1xuXHRjb25zdCBMQVNUX0NIVU5LID0gQnVmZmVyLmZyb20oJzBcXHJcXG5cXHJcXG4nKTtcblxuXHRsZXQgaXNDaHVua2VkVHJhbnNmZXIgPSBmYWxzZTtcblx0bGV0IHByb3Blckxhc3RDaHVua1JlY2VpdmVkID0gZmFsc2U7XG5cdC8qKiBAdHlwZSB7QnVmZmVyIHwgdW5kZWZpbmVkfSAqL1xuXHRsZXQgcHJldmlvdXNDaHVuaztcblxuXHRyZXF1ZXN0Lm9uKCdyZXNwb25zZScsIHJlc3BvbnNlID0+IHtcblx0XHRjb25zdCB7aGVhZGVyc30gPSByZXNwb25zZTtcblx0XHRpc0NodW5rZWRUcmFuc2ZlciA9IGhlYWRlcnNbJ3RyYW5zZmVyLWVuY29kaW5nJ10gPT09ICdjaHVua2VkJyAmJiAhaGVhZGVyc1snY29udGVudC1sZW5ndGgnXTtcblx0fSk7XG5cblx0cmVxdWVzdC5vbignc29ja2V0Jywgc29ja2V0ID0+IHtcblx0XHRjb25zdCBvblNvY2tldENsb3NlID0gKCkgPT4ge1xuXHRcdFx0aWYgKGlzQ2h1bmtlZFRyYW5zZmVyICYmICFwcm9wZXJMYXN0Q2h1bmtSZWNlaXZlZCkge1xuXHRcdFx0XHRjb25zdCBlcnJvciA9IE9iamVjdC5hc3NpZ24obmV3IEVycm9yKCdQcmVtYXR1cmUgY2xvc2UnKSwge1xuXHRcdFx0XHRcdGNvZGU6ICdFUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRSdcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGVycm9yQ2FsbGJhY2soZXJyb3IpO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0XHQvKiogQHBhcmFtIHtCdWZmZXJ9IGJ1ZiAqL1xuXHRcdGNvbnN0IG9uRGF0YSA9IGJ1ZiA9PiB7XG5cdFx0XHRwcm9wZXJMYXN0Q2h1bmtSZWNlaXZlZCA9IEJ1ZmZlci5jb21wYXJlKGJ1Zi5zbGljZSgtNSksIExBU1RfQ0hVTkspID09PSAwO1xuXG5cdFx0XHQvLyBTb21ldGltZXMgZmluYWwgMC1sZW5ndGggY2h1bmsgYW5kIGVuZCBvZiBtZXNzYWdlIGNvZGUgYXJlIGluIHNlcGFyYXRlIHBhY2tldHNcblx0XHRcdGlmICghcHJvcGVyTGFzdENodW5rUmVjZWl2ZWQgJiYgcHJldmlvdXNDaHVuaykge1xuXHRcdFx0XHRwcm9wZXJMYXN0Q2h1bmtSZWNlaXZlZCA9IChcblx0XHRcdFx0XHRCdWZmZXIuY29tcGFyZShwcmV2aW91c0NodW5rLnNsaWNlKC0zKSwgTEFTVF9DSFVOSy5zbGljZSgwLCAzKSkgPT09IDAgJiZcblx0XHRcdFx0XHRCdWZmZXIuY29tcGFyZShidWYuc2xpY2UoLTIpLCBMQVNUX0NIVU5LLnNsaWNlKDMpKSA9PT0gMFxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXG5cdFx0XHRwcmV2aW91c0NodW5rID0gYnVmO1xuXHRcdH07XG5cblx0XHRzb2NrZXQucHJlcGVuZExpc3RlbmVyKCdjbG9zZScsIG9uU29ja2V0Q2xvc2UpO1xuXHRcdHNvY2tldC5vbignZGF0YScsIG9uRGF0YSk7XG5cblx0XHRjb25zdCByZW1vdmVTb2NrZXRMaXN0ZW5lcnMgPSAoKSA9PiB7XG5cdFx0XHRzb2NrZXQucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgb25Tb2NrZXRDbG9zZSk7XG5cdFx0XHRzb2NrZXQucmVtb3ZlTGlzdGVuZXIoJ2RhdGEnLCBvbkRhdGEpO1xuXHRcdH1cblxuXHRcdHJlcXVlc3Qub24oJ2Nsb3NlJywgcmVtb3ZlU29ja2V0TGlzdGVuZXJzKTtcblx0XHRyZXF1ZXN0Lm9uKCdhYm9ydCcsIHJlbW92ZVNvY2tldExpc3RlbmVycyk7XG5cdH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmZXRjaFxuZXhwb3J0IHsgZmV0Y2ggfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/fetch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/headers.js":
/*!****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/headers.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Headers),\n/* harmony export */   fromRawHeaders: () => (/* binding */ fromRawHeaders)\n/* harmony export */ });\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/is.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/is.js\");\n/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\n\n\n\n\nconst validators = /** @type {{validateHeaderName?:(name:string) => any, validateHeaderValue?:(name:string, value:string) => any}} */\n(http__WEBPACK_IMPORTED_MODULE_1__)\n\nconst validateHeaderName = typeof validators.validateHeaderName === 'function' ?\n\tvalidators.validateHeaderName :\n\t/**\n\t * @param {string} name \n\t */\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst err = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(err, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow err;\n\t\t}\n\t};\n\nconst validateHeaderValue = typeof validators.validateHeaderValue === 'function' ?\n\tvalidators.validateHeaderValue :\n\t/**\n\t * @param {string} name \n\t * @param {string} value \n\t */\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst err = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(err, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow err;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n * @implements {globalThis.Headers}\n */\nclass Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isIterable)(init)) {\n\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\tresult = [...init]\n\t\t\t\t.map(pair => {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof pair !== 'object' || util__WEBPACK_IMPORTED_MODULE_0__.types.isBoxedPrimitive(pair)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [...pair];\n\t\t\t\t}).map(pair => {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [...pair];\n\t\t\t\t});\n\t\t} else if (typeof init === \"object\" && init !== null) {\n\t\t\t// Record<ByteString, ByteString>\n\t\t\tresult.push(...Object.entries(init));\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\t[];\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @param {string} name\n\t\t\t\t\t\t * @param {string} value\n\t\t\t\t\t\t */\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\treceiver,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @param {string} name\n\t\t\t\t\t\t */\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\treceiver,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* c8 ignore next */\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\t/**\n\t * \n\t * @param {string} name \n\t */\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * @param {(value: string, key: string, parent: this) => void} callback \n\t * @param {any} thisArg \n\t * @returns {void}\n\t */\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tif (name.toLowerCase() === 'set-cookie') {\n\t\t\t\tlet cookies = this.getAll(name);\n\t\t\t\twhile (cookies.length > 0) {\n\t\t\t\t\tReflect.apply(callback, thisArg, [cookies.shift(), name, this])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {IterableIterator<string>}\n\t */\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tif (name.toLowerCase() === 'set-cookie') {\n\t\t\t\tlet cookies = this.getAll(name);\n\t\t\t\twhile (cookies.length > 0) {\n\t\t\t\t\tyield /** @type {string} */(cookies.shift());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tyield /** @type {string} */(this.get(name));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tif (name.toLowerCase() === 'set-cookie') {\n\t\t\t\tlet cookies = this.getAll(name);\n\t\t\t\twhile (cookies.length > 0) {\n\t\t\t\t\tyield [name, /** @type {string} */(cookies.shift())];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tyield [name, /** @type {string} */(this.get(name))];\n\t\t\t}\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, /** @type {Record<string, string[]>} */({}));\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, /** @type {Record<string, string|string[]>} */({}));\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, /** @type {Record<string, {enumerable:true}>} */ ({}))\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nfunction fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, /** @type {string[][]} */([]))\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/headers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/lib.node.js":
/*!*****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/lib.node.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.Blob),\n/* harmony export */   File: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_2__.File),\n/* harmony export */   FormData: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_1__.FormData),\n/* harmony export */   Headers: () => (/* binding */ Headers),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.ReadableStream),\n/* harmony export */   Request: () => (/* binding */ Request),\n/* harmony export */   Response: () => (/* binding */ Response),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fetch: () => (/* binding */ fetch)\n/* harmony export */ });\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fetch.js */ \"(ssr)/./node_modules/@web-std/fetch/src/fetch.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fetch.js */ \"(ssr)/./node_modules/@web-std/fetch/src/headers.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fetch.js */ \"(ssr)/./node_modules/@web-std/fetch/src/request.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fetch.js */ \"(ssr)/./node_modules/@web-std/fetch/src/response.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/blob/src/lib.node.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/form-data/src/lib.node.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/file/src/lib.node.js\");\n\n\n\n// Electron-renderer should get the browser implementation instead of node\n// Browser configuration is not enough\n\n// Marking export as a DOM File object instead of custom class.\nconst fetch = /** @type {typeof globalThis.fetch} */\n  (typeof globalThis.fetch === \"function\" ? globalThis.fetch.bind(globalThis) : _fetch_js__WEBPACK_IMPORTED_MODULE_3__.fetch)\n\nconst Headers = globalThis.Headers || _fetch_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\nconst Request = globalThis.Request || _fetch_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\nconst Response = globalThis.Response || _fetch_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fetch);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2xpYi5ub2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBcUg7O0FBRWhEO0FBQ3JFO0FBQ0E7O0FBRUE7QUFDTyx5QkFBeUIseUJBQXlCO0FBQ3pELGdGQUFnRiw0Q0FBUTs7QUFFakYsc0NBQXNDLGlEQUFVO0FBQ2hELHNDQUFzQyxpREFBVTtBQUNoRCx3Q0FBd0MsaURBQVc7O0FBRTFELGlFQUFlLEtBQUsiLCJzb3VyY2VzIjpbIi9ob21lL2FsdGNvaW4tZGFkZHkvRG93bmxvYWRzL293bmx5L25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9mZXRjaC9zcmMvbGliLm5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmV0Y2ggYXMgd2ViRmV0Y2gsIEhlYWRlcnMgYXMgV2ViSGVhZGVycywgUmVxdWVzdCBhcyBXZWJSZXF1ZXN0LCBSZXNwb25zZSBhcyBXZWJSZXNwb25zZSB9IGZyb20gXCIuL2ZldGNoLmpzXCJcblxuZXhwb3J0IHsgUmVhZGFibGVTdHJlYW0sIEJsb2IsIEZvcm1EYXRhLCBGaWxlICB9IGZyb20gJy4vcGFja2FnZS5qcyc7XG4vLyBFbGVjdHJvbi1yZW5kZXJlciBzaG91bGQgZ2V0IHRoZSBicm93c2VyIGltcGxlbWVudGF0aW9uIGluc3RlYWQgb2Ygbm9kZVxuLy8gQnJvd3NlciBjb25maWd1cmF0aW9uIGlzIG5vdCBlbm91Z2hcblxuLy8gTWFya2luZyBleHBvcnQgYXMgYSBET00gRmlsZSBvYmplY3QgaW5zdGVhZCBvZiBjdXN0b20gY2xhc3MuXG5leHBvcnQgY29uc3QgZmV0Y2ggPSAvKiogQHR5cGUge3R5cGVvZiBnbG9iYWxUaGlzLmZldGNofSAqL1xuICAodHlwZW9mIGdsb2JhbFRoaXMuZmV0Y2ggPT09IFwiZnVuY3Rpb25cIiA/IGdsb2JhbFRoaXMuZmV0Y2guYmluZChnbG9iYWxUaGlzKSA6IHdlYkZldGNoKVxuXG5leHBvcnQgY29uc3QgSGVhZGVycyA9IGdsb2JhbFRoaXMuSGVhZGVycyB8fCBXZWJIZWFkZXJzXG5leHBvcnQgY29uc3QgUmVxdWVzdCA9IGdsb2JhbFRoaXMuUmVxdWVzdCB8fCBXZWJSZXF1ZXN0XG5leHBvcnQgY29uc3QgUmVzcG9uc2UgPSBnbG9iYWxUaGlzLlJlc3BvbnNlIHx8IFdlYlJlc3BvbnNlXG5cbmV4cG9ydCBkZWZhdWx0IGZldGNoXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/lib.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/request.js":
/*!****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/request.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Request),\n/* harmony export */   getNodeRequestOptions: () => (/* binding */ getNodeRequestOptions)\n/* harmony export */ });\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var abort_controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! abort-controller */ \"(ssr)/./node_modules/abort-controller/dist/abort-controller.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@web-std/fetch/src/headers.js\");\n/* harmony import */ var _body_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./body.js */ \"(ssr)/./node_modules/@web-std/fetch/src/body.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/is.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/is.js\");\n/* harmony import */ var _utils_get_search_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/get-search.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/get-search.js\");\n\n/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\n\n\n\n\n\n\n\nconst INTERNALS = Symbol('Request internals');\n\nconst forbiddenMethods = new Set([\"CONNECT\", \"TRACE\", \"TRACK\"]);\nconst normalizedMethods = new Set([\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"POST\", \"PUT\"]);\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {any} object\n * @return {object is Request}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\n\n/**\n * Request class\n * @implements {globalThis.Request}\n *\n * @typedef {Object} RequestState\n * @property {string} method\n * @property {RequestRedirect} redirect\n * @property {globalThis.Headers} headers\n * @property {RequestCredentials} credentials\n * @property {URL} parsedURL\n * @property {AbortSignal|null} signal\n *\n * @typedef {Object} RequestExtraOptions\n * @property {number} [follow]\n * @property {boolean} [compress]\n * @property {number} [size]\n * @property {number} [counter]\n * @property {Agent} [agent]\n * @property {number} [highWaterMark]\n * @property {boolean} [insecureHTTPParser]\n *\n * @typedef {((url:URL) => import('http').Agent | import('https').Agent) | import('http').Agent | import('https').Agent} Agent\n *\n * @typedef {Object} RequestOptions\n * @property {string} [method]\n * @property {ReadableStream<Uint8Array>|null} [body]\n * @property {globalThis.Headers} [headers]\n * @property {RequestRedirect} [redirect]\n *\n */\nclass Request extends _body_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n\t/**\n\t * @param {string|Request|URL} info  Url or Request instance\n\t * @param {RequestInit & RequestExtraOptions} init   Custom options\n\t */\n\tconstructor(info, init = {}) {\n\t\tlet parsedURL;\n\t\t/** @type {RequestOptions & RequestExtraOptions} */\n\t\tlet settings\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(info)) {\n\t\t\tparsedURL = new URL(info.url);\n\t\t\tsettings = (info)\n\t\t} else {\n\t\t\tparsedURL = new URL(info);\n\t\t\tsettings = {};\n\t\t}\n\n\n\n\t\t// Normalize method: https://fetch.spec.whatwg.org/#methods\n\t\tlet method = init.method || settings.method || 'GET';\n\t\tif (forbiddenMethods.has(method.toUpperCase())) {\n\t\t\tthrow new TypeError(`Failed to construct 'Request': '${method}' HTTP method is unsupported.`)\n\t\t} else if (normalizedMethods.has(method.toUpperCase())) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tconst inputBody = init.body != null\n\t\t\t? init.body\n\t\t\t: (isRequest(info) && info.body !== null)\n\t\t\t? (0,_body_js__WEBPACK_IMPORTED_MODULE_2__.clone)(info)\n\t\t\t: null;\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (inputBody != null && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || settings.size || 0\n\t\t});\n\t\tconst input = settings\n\n\n\t\tconst headers = /** @type {globalThis.Headers} */\n\t\t\t(new _headers_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](init.headers || input.headers || {}));\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = (0,_body_js__WEBPACK_IMPORTED_MODULE_2__.extractContentType)(this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = 'signal' in init\n\t\t\t? init.signal\n\t\t\t: isRequest(input)\n\t\t\t? input.signal\n\t\t\t: null;\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_4__.isAbortSignal)(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\t\t\n\t\tif (!signal) {\n\t\t\tlet AbortControllerConstructor = typeof AbortController != \"undefined\"\n\t\t\t? AbortController\n\t\t\t: abort_controller__WEBPACK_IMPORTED_MODULE_1__.AbortController;\n\t\t\t/** @type {any} */\n\t\t\tlet newSignal = new AbortControllerConstructor().signal;\n\t\t\tsignal = newSignal;\n\t\t}\n\n\t\t/** @type {RequestState} */\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tcredentials: init.credentials || 'same-origin',\n\t\t\tparsedURL,\n\t\t\tsignal: signal || null\n\t\t};\n\n\t\t/** @type {boolean} */\n\t\tthis.keepalive\n\n\t\t// Node-fetch-only options\n\t\t/** @type {number} */\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\t/** @type {boolean} */\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\t/** @type {number} */\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\t/** @type {Agent|undefined} */\n\t\tthis.agent = init.agent || input.agent;\n\t\t/** @type {number} */\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\t/** @type {boolean} */\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\t}\n\n\t/**\n\t * @type {RequestCache}\n\t */\n\tget cache() {\n\t\treturn \"default\"\n\t}\n\n\t/**\n\t * @type {RequestCredentials}\n\t */\n\n\tget credentials() {\n\t\treturn this[INTERNALS].credentials\n\t}\n\n\t/**\n\t * @type {RequestDestination}\n\t */\n\tget destination() {\n\t\treturn \"\"\n\t}\n\n\tget integrity() {\n\t\treturn \"\"\n\t}\n\n\t/** @type {RequestMode} */\n\tget mode() {\n\t\treturn \"cors\"\n\t}\n\n\t/** @type {string} */\n\tget referrer() {\n\t\treturn  \"\"\n\t}\n\n\t/** @type {ReferrerPolicy} */\n\tget referrerPolicy() {\n\t\treturn \"\"\n\t}\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget url() {\n\t\treturn (0,url__WEBPACK_IMPORTED_MODULE_0__.format)(this[INTERNALS].parsedURL);\n\t}\n\n\t/**\n\t * @type {globalThis.Headers}\n\t */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/**\n\t * @returns {AbortSignal}\n\t */\n\tget signal() {\n\t\t// @ts-ignore\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  {globalThis.Request}\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n * The options object to be passed to http.request\n *\n * @param {Request & Record<INTERNALS, RequestState>} request -  A Request instance\n */\nconst getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new _headers_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = (0,_body_js__WEBPACK_IMPORTED_MODULE_2__.getTotalBytes)(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate,br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = (0,_utils_get_search_js__WEBPACK_IMPORTED_MODULE_5__.getSearch)(parsedURL);\n\n\t// Manually spread the URL object instead of spread syntax\n\tconst requestOptions = {\n\t\tpath: parsedURL.pathname + search,\n\t\tpathname: parsedURL.pathname,\n\t\thostname: parsedURL.hostname,\n\t\tprotocol: parsedURL.protocol,\n\t\tport: parsedURL.port,\n\t\thash: parsedURL.hash,\n\t\tsearch: parsedURL.search,\n\t\t// @ts-ignore - it does not has a query\n\t\tquery: parsedURL.query,\n\t\thref: parsedURL.href,\n\t\tmethod: request.method,\n\t\t// @ts-ignore - not sure what this supposed to do\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn requestOptions;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/request.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/response.js":
/*!*****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/response.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Response)\n/* harmony export */ });\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@web-std/fetch/src/headers.js\");\n/* harmony import */ var _body_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./body.js */ \"(ssr)/./node_modules/@web-std/fetch/src/body.js\");\n/* harmony import */ var _utils_is_redirect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/is-redirect.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/is-redirect.js\");\n/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\n\n\n\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n * \n * @typedef {Object} Ext\n * @property {number} [size]\n * @property {string} [url]\n * @property {number} [counter]\n * @property {number} [highWaterMark]\n * \n * @implements {globalThis.Response}\n */\nclass Response extends _body_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\t/**\n\t * @param {BodyInit|import('stream').Stream|null} [body] - Readable stream\n\t * @param {ResponseInit & Ext} [options] - Response options\n\t */\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\tconst status = options.status || 200;\n\t\tconst headers = new _headers_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = (0,_body_js__WEBPACK_IMPORTED_MODULE_0__.extractContentType)(this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @private\n\t\t*/\n\t\tthis[INTERNALS] = {\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter || 0,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\t/**\n\t * @type {ResponseType}\n\t */\n\tget type() {\n\t\treturn \"default\"\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\t/**\n\t * @type {Headers}\n\t */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @returns {Response}\n\t */\n\tclone() {\n\t\treturn new Response((0,_body_js__WEBPACK_IMPORTED_MODULE_0__.clone)(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tsize: this.size\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!(0,_utils_is_redirect_js__WEBPACK_IMPORTED_MODULE_2__.isRedirect)(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVtQztBQUN1QjtBQUNSOztBQUVsRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ2UsdUJBQXVCLGdEQUFJO0FBQzFDO0FBQ0EsWUFBWSx1Q0FBdUM7QUFDbkQsWUFBWSxvQkFBb0I7QUFDaEM7QUFDQSxzQ0FBc0M7QUFDdEM7O0FBRUE7QUFDQSxzQkFBc0IsbURBQU87O0FBRTdCO0FBQ0EsdUJBQXVCLDREQUFrQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQSxzQkFBc0IsK0NBQUs7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBLFlBQVksUUFBUTtBQUNwQixZQUFZLFFBQVE7QUFDcEIsY0FBYyxhQUFhO0FBQzNCO0FBQ0E7QUFDQSxPQUFPLGlFQUFVO0FBQ2pCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTyxpQkFBaUI7QUFDeEIsVUFBVSxpQkFBaUI7QUFDM0IsTUFBTSxpQkFBaUI7QUFDdkIsY0FBYyxpQkFBaUI7QUFDL0IsY0FBYyxpQkFBaUI7QUFDL0IsV0FBVyxpQkFBaUI7QUFDNUIsU0FBUztBQUNULENBQUMiLCJzb3VyY2VzIjpbIi9ob21lL2FsdGNvaW4tZGFkZHkvRG93bmxvYWRzL293bmx5L25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9mZXRjaC9zcmMvcmVzcG9uc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXNwb25zZS5qc1xuICpcbiAqIFJlc3BvbnNlIGNsYXNzIHByb3ZpZGVzIGNvbnRlbnQgZGVjb2RpbmdcbiAqL1xuXG5pbXBvcnQgSGVhZGVycyBmcm9tICcuL2hlYWRlcnMuanMnO1xuaW1wb3J0IEJvZHksIHtjbG9uZSwgZXh0cmFjdENvbnRlbnRUeXBlfSBmcm9tICcuL2JvZHkuanMnO1xuaW1wb3J0IHtpc1JlZGlyZWN0fSBmcm9tICcuL3V0aWxzL2lzLXJlZGlyZWN0LmpzJztcblxuY29uc3QgSU5URVJOQUxTID0gU3ltYm9sKCdSZXNwb25zZSBpbnRlcm5hbHMnKTtcblxuLyoqXG4gKiBSZXNwb25zZSBjbGFzc1xuICogXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBFeHRcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBbc2l6ZV1cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBbdXJsXVxuICogQHByb3BlcnR5IHtudW1iZXJ9IFtjb3VudGVyXVxuICogQHByb3BlcnR5IHtudW1iZXJ9IFtoaWdoV2F0ZXJNYXJrXVxuICogXG4gKiBAaW1wbGVtZW50cyB7Z2xvYmFsVGhpcy5SZXNwb25zZX1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVzcG9uc2UgZXh0ZW5kcyBCb2R5IHtcblx0LyoqXG5cdCAqIEBwYXJhbSB7Qm9keUluaXR8aW1wb3J0KCdzdHJlYW0nKS5TdHJlYW18bnVsbH0gW2JvZHldIC0gUmVhZGFibGUgc3RyZWFtXG5cdCAqIEBwYXJhbSB7UmVzcG9uc2VJbml0ICYgRXh0fSBbb3B0aW9uc10gLSBSZXNwb25zZSBvcHRpb25zXG5cdCAqL1xuXHRjb25zdHJ1Y3Rvcihib2R5ID0gbnVsbCwgb3B0aW9ucyA9IHt9KSB7XG5cdFx0c3VwZXIoYm9keSwgb3B0aW9ucyk7XG5cblx0XHRjb25zdCBzdGF0dXMgPSBvcHRpb25zLnN0YXR1cyB8fCAyMDA7XG5cdFx0Y29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKG9wdGlvbnMuaGVhZGVycyk7XG5cblx0XHRpZiAoYm9keSAhPT0gbnVsbCAmJiAhaGVhZGVycy5oYXMoJ0NvbnRlbnQtVHlwZScpKSB7XG5cdFx0XHRjb25zdCBjb250ZW50VHlwZSA9IGV4dHJhY3RDb250ZW50VHlwZSh0aGlzKTtcblx0XHRcdGlmIChjb250ZW50VHlwZSkge1xuXHRcdFx0XHRoZWFkZXJzLmFwcGVuZCgnQ29udGVudC1UeXBlJywgY29udGVudFR5cGUpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8qKlxuXHRcdCAqIEBwcml2YXRlXG5cdFx0Ki9cblx0XHR0aGlzW0lOVEVSTkFMU10gPSB7XG5cdFx0XHR1cmw6IG9wdGlvbnMudXJsLFxuXHRcdFx0c3RhdHVzLFxuXHRcdFx0c3RhdHVzVGV4dDogb3B0aW9ucy5zdGF0dXNUZXh0IHx8ICcnLFxuXHRcdFx0aGVhZGVycyxcblx0XHRcdGNvdW50ZXI6IG9wdGlvbnMuY291bnRlciB8fCAwLFxuXHRcdFx0aGlnaFdhdGVyTWFyazogb3B0aW9ucy5oaWdoV2F0ZXJNYXJrXG5cdFx0fTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAdHlwZSB7UmVzcG9uc2VUeXBlfVxuXHQgKi9cblx0Z2V0IHR5cGUoKSB7XG5cdFx0cmV0dXJuIFwiZGVmYXVsdFwiXG5cdH1cblxuXHRnZXQgdXJsKCkge1xuXHRcdHJldHVybiB0aGlzW0lOVEVSTkFMU10udXJsIHx8ICcnO1xuXHR9XG5cblx0Z2V0IHN0YXR1cygpIHtcblx0XHRyZXR1cm4gdGhpc1tJTlRFUk5BTFNdLnN0YXR1cztcblx0fVxuXG5cdC8qKlxuXHQgKiBDb252ZW5pZW5jZSBwcm9wZXJ0eSByZXByZXNlbnRpbmcgaWYgdGhlIHJlcXVlc3QgZW5kZWQgbm9ybWFsbHlcblx0ICovXG5cdGdldCBvaygpIHtcblx0XHRyZXR1cm4gdGhpc1tJTlRFUk5BTFNdLnN0YXR1cyA+PSAyMDAgJiYgdGhpc1tJTlRFUk5BTFNdLnN0YXR1cyA8IDMwMDtcblx0fVxuXG5cdGdldCByZWRpcmVjdGVkKCkge1xuXHRcdHJldHVybiB0aGlzW0lOVEVSTkFMU10uY291bnRlciA+IDA7XG5cdH1cblxuXHRnZXQgc3RhdHVzVGV4dCgpIHtcblx0XHRyZXR1cm4gdGhpc1tJTlRFUk5BTFNdLnN0YXR1c1RleHQ7XG5cdH1cblxuXHQvKipcblx0ICogQHR5cGUge0hlYWRlcnN9XG5cdCAqL1xuXHRnZXQgaGVhZGVycygpIHtcblx0XHRyZXR1cm4gdGhpc1tJTlRFUk5BTFNdLmhlYWRlcnM7XG5cdH1cblxuXHRnZXQgaGlnaFdhdGVyTWFyaygpIHtcblx0XHRyZXR1cm4gdGhpc1tJTlRFUk5BTFNdLmhpZ2hXYXRlck1hcms7XG5cdH1cblxuXHQvKipcblx0ICogQ2xvbmUgdGhpcyByZXNwb25zZVxuXHQgKlxuXHQgKiBAcmV0dXJucyB7UmVzcG9uc2V9XG5cdCAqL1xuXHRjbG9uZSgpIHtcblx0XHRyZXR1cm4gbmV3IFJlc3BvbnNlKGNsb25lKHRoaXMpLCB7XG5cdFx0XHR1cmw6IHRoaXMudXJsLFxuXHRcdFx0c3RhdHVzOiB0aGlzLnN0YXR1cyxcblx0XHRcdHN0YXR1c1RleHQ6IHRoaXMuc3RhdHVzVGV4dCxcblx0XHRcdGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcblx0XHRcdHNpemU6IHRoaXMuc2l6ZVxuXHRcdH0pO1xuXHR9XG5cblx0LyoqXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgICAgVGhlIFVSTCB0aGF0IHRoZSBuZXcgcmVzcG9uc2UgaXMgdG8gb3JpZ2luYXRlIGZyb20uXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSBzdGF0dXMgQW4gb3B0aW9uYWwgc3RhdHVzIGNvZGUgZm9yIHRoZSByZXNwb25zZSAoZS5nLiwgMzAyLilcblx0ICogQHJldHVybnMge1Jlc3BvbnNlfSAgICBBIFJlc3BvbnNlIG9iamVjdC5cblx0ICovXG5cdHN0YXRpYyByZWRpcmVjdCh1cmwsIHN0YXR1cyA9IDMwMikge1xuXHRcdGlmICghaXNSZWRpcmVjdChzdGF0dXMpKSB7XG5cdFx0XHR0aHJvdyBuZXcgUmFuZ2VFcnJvcignRmFpbGVkIHRvIGV4ZWN1dGUgXCJyZWRpcmVjdFwiIG9uIFwicmVzcG9uc2VcIjogSW52YWxpZCBzdGF0dXMgY29kZScpO1xuXHRcdH1cblxuXHRcdHJldHVybiBuZXcgUmVzcG9uc2UobnVsbCwge1xuXHRcdFx0aGVhZGVyczoge1xuXHRcdFx0XHRsb2NhdGlvbjogbmV3IFVSTCh1cmwpLnRvU3RyaW5nKClcblx0XHRcdH0sXG5cdFx0XHRzdGF0dXNcblx0XHR9KTtcblx0fVxuXG5cdGdldCBbU3ltYm9sLnRvU3RyaW5nVGFnXSgpIHtcblx0XHRyZXR1cm4gJ1Jlc3BvbnNlJztcblx0fVxufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhSZXNwb25zZS5wcm90b3R5cGUsIHtcblx0dXJsOiB7ZW51bWVyYWJsZTogdHJ1ZX0sXG5cdHN0YXR1czoge2VudW1lcmFibGU6IHRydWV9LFxuXHRvazoge2VudW1lcmFibGU6IHRydWV9LFxuXHRyZWRpcmVjdGVkOiB7ZW51bWVyYWJsZTogdHJ1ZX0sXG5cdHN0YXR1c1RleHQ6IHtlbnVtZXJhYmxlOiB0cnVlfSxcblx0aGVhZGVyczoge2VudW1lcmFibGU6IHRydWV9LFxuXHRjbG9uZToge2VudW1lcmFibGU6IHRydWV9XG59KTtcblxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/response.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/utils/form-data.js":
/*!************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/form-data.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formDataIterator: () => (/* binding */ formDataIterator),\n/* harmony export */   getBoundary: () => (/* binding */ getBoundary),\n/* harmony export */   getFormDataLength: () => (/* binding */ getFormDataLength),\n/* harmony export */   toFormData: () => (/* binding */ toFormData)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _web3_storage_multipart_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/multipart-parser */ \"(ssr)/./node_modules/@web3-storage/multipart-parser/esm/src/index.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../package.js */ \"(ssr)/./node_modules/@web-std/form-data/src/lib.node.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../package.js */ \"(ssr)/./node_modules/@web-std/file/src/lib.node.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/is.js\");\n\n\n\n\n\nconst carriage = '\\r\\n';\nconst dashes = '-'.repeat(2);\nconst carriageLength = Buffer.byteLength(carriage);\n\n/**\n * @param {string} boundary\n */\nconst getFooter = boundary => `${dashes}${boundary}${dashes}${carriage.repeat(2)}`;\n\n/**\n * @param {string} boundary\n * @param {string} name\n * @param {*} field\n *\n * @return {string}\n */\nfunction getHeader(boundary, name, field) {\n\tlet header = '';\n\n\theader += `${dashes}${boundary}${carriage}`;\n\theader += `Content-Disposition: form-data; name=\"${name}\"`;\n\n\tif ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(field)) {\n\t\tconst { name = 'blob', type } = /** @type {Blob & {name?:string}} */ (field);\n\t\theader += `; filename=\"${name}\"${carriage}`;\n\t\theader += `Content-Type: ${type || 'application/octet-stream'}`;\n\t}\n\n\treturn `${header}${carriage.repeat(2)}`;\n}\n\n/**\n * @return {string}\n */\nconst getBoundary = () => (0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(8).toString('hex');\n\n/**\n * @param {FormData} form\n * @param {string} boundary\n */\nasync function * formDataIterator(form, boundary) {\n\tconst encoder = new TextEncoder();\n\tfor (const [name, value] of form) {\n\t\tyield encoder.encode(getHeader(boundary, name, value));\n\n\t\tif ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(value)) {\n\t\t\t// @ts-ignore - we know our streams implement aysnc iteration\n\t\t\tyield * value.stream();\n\t\t} else {\n\t\t\tyield encoder.encode(value);\n\t\t}\n\n\t\tyield encoder.encode(carriage);\n\t}\n\n\tyield encoder.encode(getFooter(boundary));\n}\n\n/**\n * @param {FormData} form\n * @param {string} boundary\n */\nfunction getFormDataLength(form, boundary) {\n\tlet length = 0;\n\n\tfor (const [name, value] of form) {\n\t\tlength += Buffer.byteLength(getHeader(boundary, name, value));\n\n\t\tif ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(value)) {\n\t\t\tlength += value.size;\n\t\t} else {\n\t\t\tlength += Buffer.byteLength(String(value));\n\t\t}\n\n\t\tlength += carriageLength;\n\t}\n\n\tlength += Buffer.byteLength(getFooter(boundary));\n\n\treturn length;\n}\n\n/**\n * @param {Body & {headers?:Headers}} source\n */\nconst toFormData = async (source) => {\n  let { body, headers } = source;\n  const contentType = headers?.get('Content-Type') || ''\n\n  if (contentType.startsWith('application/x-www-form-urlencoded') && body != null) {\n\tconst form = new _package_js__WEBPACK_IMPORTED_MODULE_3__.FormData();\n\tlet bodyText = await source.text();\n\tnew URLSearchParams(bodyText).forEach((v, k) => form.append(k, v));\n\treturn form;\n  }\n\n  const [type, boundary] = contentType.split(/\\s*;\\s*boundary=/)\n  if (type === 'multipart/form-data' && boundary != null && body != null) {\n    const form = new _package_js__WEBPACK_IMPORTED_MODULE_3__.FormData()\n    const parts = (0,_web3_storage_multipart_parser__WEBPACK_IMPORTED_MODULE_1__.iterateMultipart)(body, boundary)\n    for await (const { name, data, filename, contentType } of parts) {\n      if (typeof filename === 'string') {\n        form.append(name, new _package_js__WEBPACK_IMPORTED_MODULE_4__.File([data], filename, { type: contentType }))\n      } else if (typeof filename !== 'undefined') {\n        form.append(name, new _package_js__WEBPACK_IMPORTED_MODULE_4__.File([], '', { type: contentType }))\n      } else {\n        form.append(name, new TextDecoder().decode(data), filename)\n      }\n    }\n    return form\n  } else {\n    throw new TypeError('Could not parse content as FormData.')\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2Zvcm0tZGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBbUM7QUFDK0I7QUFDbkI7QUFDZDs7QUFFakM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsaUNBQWlDLE9BQU8sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLG1CQUFtQjs7QUFFakY7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUztBQUMzQyw0Q0FBNEMsUUFBUSxLQUFLOztBQUV6RCxLQUFLLDhDQUFNO0FBQ1gsVUFBVSxzQkFBc0IsYUFBYSxRQUFRLGVBQWU7QUFDcEUsZUFBZSxZQUFZLEtBQUssR0FBRyxTQUFTO0FBQzVDLDZCQUE2QixtQ0FBbUM7QUFDaEU7O0FBRUEsV0FBVyxPQUFPLEVBQUUsbUJBQW1CO0FBQ3ZDOztBQUVBO0FBQ0EsWUFBWTtBQUNaO0FBQ08sMEJBQTBCLG1EQUFXOztBQUU1QztBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkI7QUFDTztBQUNQO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLDhDQUFNO0FBQ1o7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkI7QUFDTztBQUNQOztBQUVBO0FBQ0E7O0FBRUEsTUFBTSw4Q0FBTTtBQUNaO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRLG1CQUFtQjtBQUN0QztBQUNPO0FBQ1AsUUFBUSxnQkFBZ0I7QUFDeEI7O0FBRUE7QUFDQSxrQkFBa0IsaURBQVE7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0RBQWtEO0FBQ2xEO0FBQ0EscUJBQXFCLGlEQUFRO0FBQzdCLGtCQUFrQixnRkFBZ0I7QUFDbEMsdUJBQXVCLG9DQUFvQztBQUMzRDtBQUNBLDhCQUE4Qiw2Q0FBSSxxQkFBcUIsbUJBQW1CO0FBQzFFLFFBQVE7QUFDUiw4QkFBOEIsNkNBQUksV0FBVyxtQkFBbUI7QUFDaEUsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvYWx0Y29pbi1kYWRkeS9Eb3dubG9hZHMvb3dubHkvbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2ZldGNoL3NyYy91dGlscy9mb3JtLWRhdGEuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtyYW5kb21CeXRlc30gZnJvbSAnY3J5cHRvJztcbmltcG9ydCB7IGl0ZXJhdGVNdWx0aXBhcnQgfSBmcm9tICdAd2ViMy1zdG9yYWdlL211bHRpcGFydC1wYXJzZXInO1xuaW1wb3J0IHsgRm9ybURhdGEsIEZpbGUgfSBmcm9tICcuLi9wYWNrYWdlLmpzJztcbmltcG9ydCB7IGlzQmxvYiB9IGZyb20gJy4vaXMuanMnO1xuXG5jb25zdCBjYXJyaWFnZSA9ICdcXHJcXG4nO1xuY29uc3QgZGFzaGVzID0gJy0nLnJlcGVhdCgyKTtcbmNvbnN0IGNhcnJpYWdlTGVuZ3RoID0gQnVmZmVyLmJ5dGVMZW5ndGgoY2FycmlhZ2UpO1xuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBib3VuZGFyeVxuICovXG5jb25zdCBnZXRGb290ZXIgPSBib3VuZGFyeSA9PiBgJHtkYXNoZXN9JHtib3VuZGFyeX0ke2Rhc2hlc30ke2NhcnJpYWdlLnJlcGVhdCgyKX1gO1xuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBib3VuZGFyeVxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7Kn0gZmllbGRcbiAqXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGdldEhlYWRlcihib3VuZGFyeSwgbmFtZSwgZmllbGQpIHtcblx0bGV0IGhlYWRlciA9ICcnO1xuXG5cdGhlYWRlciArPSBgJHtkYXNoZXN9JHtib3VuZGFyeX0ke2NhcnJpYWdlfWA7XG5cdGhlYWRlciArPSBgQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPVwiJHtuYW1lfVwiYDtcblxuXHRpZiAoaXNCbG9iKGZpZWxkKSkge1xuXHRcdGNvbnN0IHsgbmFtZSA9ICdibG9iJywgdHlwZSB9ID0gLyoqIEB0eXBlIHtCbG9iICYge25hbWU/OnN0cmluZ319ICovIChmaWVsZCk7XG5cdFx0aGVhZGVyICs9IGA7IGZpbGVuYW1lPVwiJHtuYW1lfVwiJHtjYXJyaWFnZX1gO1xuXHRcdGhlYWRlciArPSBgQ29udGVudC1UeXBlOiAke3R5cGUgfHwgJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSd9YDtcblx0fVxuXG5cdHJldHVybiBgJHtoZWFkZXJ9JHtjYXJyaWFnZS5yZXBlYXQoMil9YDtcbn1cblxuLyoqXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBnZXRCb3VuZGFyeSA9ICgpID0+IHJhbmRvbUJ5dGVzKDgpLnRvU3RyaW5nKCdoZXgnKTtcblxuLyoqXG4gKiBAcGFyYW0ge0Zvcm1EYXRhfSBmb3JtXG4gKiBAcGFyYW0ge3N0cmluZ30gYm91bmRhcnlcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uICogZm9ybURhdGFJdGVyYXRvcihmb3JtLCBib3VuZGFyeSkge1xuXHRjb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5cdGZvciAoY29uc3QgW25hbWUsIHZhbHVlXSBvZiBmb3JtKSB7XG5cdFx0eWllbGQgZW5jb2Rlci5lbmNvZGUoZ2V0SGVhZGVyKGJvdW5kYXJ5LCBuYW1lLCB2YWx1ZSkpO1xuXG5cdFx0aWYgKGlzQmxvYih2YWx1ZSkpIHtcblx0XHRcdC8vIEB0cy1pZ25vcmUgLSB3ZSBrbm93IG91ciBzdHJlYW1zIGltcGxlbWVudCBheXNuYyBpdGVyYXRpb25cblx0XHRcdHlpZWxkICogdmFsdWUuc3RyZWFtKCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHlpZWxkIGVuY29kZXIuZW5jb2RlKHZhbHVlKTtcblx0XHR9XG5cblx0XHR5aWVsZCBlbmNvZGVyLmVuY29kZShjYXJyaWFnZSk7XG5cdH1cblxuXHR5aWVsZCBlbmNvZGVyLmVuY29kZShnZXRGb290ZXIoYm91bmRhcnkpKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0Zvcm1EYXRhfSBmb3JtXG4gKiBAcGFyYW0ge3N0cmluZ30gYm91bmRhcnlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEZvcm1EYXRhTGVuZ3RoKGZvcm0sIGJvdW5kYXJ5KSB7XG5cdGxldCBsZW5ndGggPSAwO1xuXG5cdGZvciAoY29uc3QgW25hbWUsIHZhbHVlXSBvZiBmb3JtKSB7XG5cdFx0bGVuZ3RoICs9IEJ1ZmZlci5ieXRlTGVuZ3RoKGdldEhlYWRlcihib3VuZGFyeSwgbmFtZSwgdmFsdWUpKTtcblxuXHRcdGlmIChpc0Jsb2IodmFsdWUpKSB7XG5cdFx0XHRsZW5ndGggKz0gdmFsdWUuc2l6ZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bGVuZ3RoICs9IEJ1ZmZlci5ieXRlTGVuZ3RoKFN0cmluZyh2YWx1ZSkpO1xuXHRcdH1cblxuXHRcdGxlbmd0aCArPSBjYXJyaWFnZUxlbmd0aDtcblx0fVxuXG5cdGxlbmd0aCArPSBCdWZmZXIuYnl0ZUxlbmd0aChnZXRGb290ZXIoYm91bmRhcnkpKTtcblxuXHRyZXR1cm4gbGVuZ3RoO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7Qm9keSAmIHtoZWFkZXJzPzpIZWFkZXJzfX0gc291cmNlXG4gKi9cbmV4cG9ydCBjb25zdCB0b0Zvcm1EYXRhID0gYXN5bmMgKHNvdXJjZSkgPT4ge1xuICBsZXQgeyBib2R5LCBoZWFkZXJzIH0gPSBzb3VyY2U7XG4gIGNvbnN0IGNvbnRlbnRUeXBlID0gaGVhZGVycz8uZ2V0KCdDb250ZW50LVR5cGUnKSB8fCAnJ1xuXG4gIGlmIChjb250ZW50VHlwZS5zdGFydHNXaXRoKCdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnKSAmJiBib2R5ICE9IG51bGwpIHtcblx0Y29uc3QgZm9ybSA9IG5ldyBGb3JtRGF0YSgpO1xuXHRsZXQgYm9keVRleHQgPSBhd2FpdCBzb3VyY2UudGV4dCgpO1xuXHRuZXcgVVJMU2VhcmNoUGFyYW1zKGJvZHlUZXh0KS5mb3JFYWNoKCh2LCBrKSA9PiBmb3JtLmFwcGVuZChrLCB2KSk7XG5cdHJldHVybiBmb3JtO1xuICB9XG5cbiAgY29uc3QgW3R5cGUsIGJvdW5kYXJ5XSA9IGNvbnRlbnRUeXBlLnNwbGl0KC9cXHMqO1xccypib3VuZGFyeT0vKVxuICBpZiAodHlwZSA9PT0gJ211bHRpcGFydC9mb3JtLWRhdGEnICYmIGJvdW5kYXJ5ICE9IG51bGwgJiYgYm9keSAhPSBudWxsKSB7XG4gICAgY29uc3QgZm9ybSA9IG5ldyBGb3JtRGF0YSgpXG4gICAgY29uc3QgcGFydHMgPSBpdGVyYXRlTXVsdGlwYXJ0KGJvZHksIGJvdW5kYXJ5KVxuICAgIGZvciBhd2FpdCAoY29uc3QgeyBuYW1lLCBkYXRhLCBmaWxlbmFtZSwgY29udGVudFR5cGUgfSBvZiBwYXJ0cykge1xuICAgICAgaWYgKHR5cGVvZiBmaWxlbmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZm9ybS5hcHBlbmQobmFtZSwgbmV3IEZpbGUoW2RhdGFdLCBmaWxlbmFtZSwgeyB0eXBlOiBjb250ZW50VHlwZSB9KSlcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGZpbGVuYW1lICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBmb3JtLmFwcGVuZChuYW1lLCBuZXcgRmlsZShbXSwgJycsIHsgdHlwZTogY29udGVudFR5cGUgfSkpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmb3JtLmFwcGVuZChuYW1lLCBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoZGF0YSksIGZpbGVuYW1lKVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZm9ybVxuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0NvdWxkIG5vdCBwYXJzZSBjb250ZW50IGFzIEZvcm1EYXRhLicpXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/utils/form-data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/utils/get-search.js":
/*!*************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/get-search.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSearch: () => (/* binding */ getSearch)\n/* harmony export */ });\n/**\n * @param {URL} parsedURL \n * @returns {string}\n */\nconst getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2dldC1zZWFyY2guanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2dldC1zZWFyY2guanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAcGFyYW0ge1VSTH0gcGFyc2VkVVJMIFxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZXhwb3J0IGNvbnN0IGdldFNlYXJjaCA9IHBhcnNlZFVSTCA9PiB7XG5cdGlmIChwYXJzZWRVUkwuc2VhcmNoKSB7XG5cdFx0cmV0dXJuIHBhcnNlZFVSTC5zZWFyY2g7XG5cdH1cblxuXHRjb25zdCBsYXN0T2Zmc2V0ID0gcGFyc2VkVVJMLmhyZWYubGVuZ3RoIC0gMTtcblx0Y29uc3QgaGFzaCA9IHBhcnNlZFVSTC5oYXNoIHx8IChwYXJzZWRVUkwuaHJlZltsYXN0T2Zmc2V0XSA9PT0gJyMnID8gJyMnIDogJycpO1xuXHRyZXR1cm4gcGFyc2VkVVJMLmhyZWZbbGFzdE9mZnNldCAtIGhhc2gubGVuZ3RoXSA9PT0gJz8nID8gJz8nIDogJyc7XG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/utils/get-search.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/utils/is-redirect.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/is-redirect.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isRedirect: () => (/* binding */ isRedirect)\n/* harmony export */ });\nconst redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nconst isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2lzLXJlZGlyZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2lzLXJlZGlyZWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlZGlyZWN0U3RhdHVzID0gbmV3IFNldChbMzAxLCAzMDIsIDMwMywgMzA3LCAzMDhdKTtcblxuLyoqXG4gKiBSZWRpcmVjdCBjb2RlIG1hdGNoaW5nXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IGNvZGUgLSBTdGF0dXMgY29kZVxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzUmVkaXJlY3QgPSBjb2RlID0+IHtcblx0cmV0dXJuIHJlZGlyZWN0U3RhdHVzLmhhcyhjb2RlKTtcbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/utils/is-redirect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/utils/is.js":
/*!*****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/is.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAbortSignal: () => (/* binding */ isAbortSignal),\n/* harmony export */   isBlob: () => (/* binding */ isBlob),\n/* harmony export */   isFormData: () => (/* binding */ isFormData),\n/* harmony export */   isIterable: () => (/* binding */ isIterable),\n/* harmony export */   isMultipartFormDataStream: () => (/* binding */ isMultipartFormDataStream),\n/* harmony export */   isReadableStream: () => (/* binding */ isReadableStream),\n/* harmony export */   isURLSearchParameters: () => (/* binding */ isURLSearchParameters)\n/* harmony export */ });\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n\n\n/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n *\n * @param  {any} object\n * @return {obj is URLSearchParams}\n */\nconst isURLSearchParameters = (object) => {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\ttypeof object.append === \"function\" &&\n\t\ttypeof object.delete === \"function\" &&\n\t\ttypeof object.get === \"function\" &&\n\t\ttypeof object.getAll === \"function\" &&\n\t\ttypeof object.has === \"function\" &&\n\t\ttypeof object.set === \"function\" &&\n\t\ttypeof object.sort === \"function\" &&\n\t\tobject[NAME] === \"URLSearchParams\"\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n *\n * @param  {*} object\n * @return {object is Blob}\n */\nconst isBlob = (object) => {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\ttypeof object.arrayBuffer === \"function\" &&\n\t\ttypeof object.type === \"string\" &&\n\t\ttypeof object.stream === \"function\" &&\n\t\ttypeof object.constructor === \"function\" &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is a spec-compliant `FormData` object\n *\n * @param {*} object\n * @return {object is FormData}\n */\nfunction isFormData(object) {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\ttypeof object.append === \"function\" &&\n\t\ttypeof object.set === \"function\" &&\n\t\ttypeof object.get === \"function\" &&\n\t\ttypeof object.getAll === \"function\" &&\n\t\ttypeof object.delete === \"function\" &&\n\t\ttypeof object.keys === \"function\" &&\n\t\ttypeof object.values === \"function\" &&\n\t\ttypeof object.entries === \"function\" &&\n\t\ttypeof object.constructor === \"function\" &&\n\t\tobject[NAME] === \"FormData\"\n\t);\n}\n\n/**\n * Detect form data input from form-data module\n *\n * @param {any} value\n * @returns {value is Stream & {getBoundary():string, hasKnownLength():boolean, getLengthSync():number|null}}\n */\nconst isMultipartFormDataStream = (value) => {\n\treturn (\n\t\tvalue instanceof stream__WEBPACK_IMPORTED_MODULE_0__ === true &&\n\t\ttypeof value.getBoundary === \"function\" &&\n\t\ttypeof value.hasKnownLength === \"function\" &&\n\t\ttypeof value.getLengthSync === \"function\"\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n *\n * @param  {any} object\n * @return {obj is AbortSignal}\n */\nconst isAbortSignal = (object) => {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\t(object[NAME] === \"AbortSignal\" || object[NAME] === \"EventTarget\")\n\t);\n};\n\n/**\n * Check if `value` is a ReadableStream.\n *\n * @param {*} value\n * @returns {value is ReadableStream}\n */\nconst isReadableStream = (value) => {\n\treturn (\n\t\ttypeof value === \"object\" &&\n\t\ttypeof value.getReader === \"function\" &&\n\t\ttypeof value.cancel === \"function\" &&\n\t\ttypeof value.tee === \"function\"\n\t);\n};\n\n/**\n *\n * @param {any} value\n * @returns {value is Iterable<unknown>}\n */\nconst isIterable = (value) => value && Symbol.iterator in value;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2lzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTRCOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxLQUFLO0FBQ2pCLFlBQVk7QUFDWjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVksR0FBRztBQUNmLFlBQVk7QUFDWjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLFlBQVk7QUFDWjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYSxtQkFBbUI7QUFDaEM7QUFDTztBQUNQO0FBQ0EsbUJBQW1CLG1DQUFNO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWSxLQUFLO0FBQ2pCLFlBQVk7QUFDWjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ08iLCJzb3VyY2VzIjpbIi9ob21lL2FsdGNvaW4tZGFkZHkvRG93bmxvYWRzL293bmx5L25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9mZXRjaC9zcmMvdXRpbHMvaXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN0cmVhbSBmcm9tIFwic3RyZWFtXCI7XG5cbi8qKlxuICogSXMuanNcbiAqXG4gKiBPYmplY3QgdHlwZSBjaGVja3MuXG4gKi9cblxuY29uc3QgTkFNRSA9IFN5bWJvbC50b1N0cmluZ1RhZztcblxuLyoqXG4gKiBDaGVjayBpZiBgb2JqYCBpcyBhIFVSTFNlYXJjaFBhcmFtcyBvYmplY3RcbiAqIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL25vZGUtZmV0Y2gvbm9kZS1mZXRjaC9pc3N1ZXMvMjk2I2lzc3VlY29tbWVudC0zMDc1OTgxNDNcbiAqXG4gKiBAcGFyYW0gIHthbnl9IG9iamVjdFxuICogQHJldHVybiB7b2JqIGlzIFVSTFNlYXJjaFBhcmFtc31cbiAqL1xuZXhwb3J0IGNvbnN0IGlzVVJMU2VhcmNoUGFyYW1ldGVycyA9IChvYmplY3QpID0+IHtcblx0cmV0dXJuIChcblx0XHR0eXBlb2Ygb2JqZWN0ID09PSBcIm9iamVjdFwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5hcHBlbmQgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuZGVsZXRlID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2Ygb2JqZWN0LmdldCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5nZXRBbGwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuaGFzID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2Ygb2JqZWN0LnNldCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5zb3J0ID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHRvYmplY3RbTkFNRV0gPT09IFwiVVJMU2VhcmNoUGFyYW1zXCJcblx0KTtcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgYG9iamVjdGAgaXMgYSBXM0MgYEJsb2JgIG9iamVjdCAod2hpY2ggYEZpbGVgIGluaGVyaXRzIGZyb20pXG4gKlxuICogQHBhcmFtICB7Kn0gb2JqZWN0XG4gKiBAcmV0dXJuIHtvYmplY3QgaXMgQmxvYn1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzQmxvYiA9IChvYmplY3QpID0+IHtcblx0cmV0dXJuIChcblx0XHR0eXBlb2Ygb2JqZWN0ID09PSBcIm9iamVjdFwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5hcnJheUJ1ZmZlciA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC50eXBlID09PSBcInN0cmluZ1wiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5zdHJlYW0gPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuY29uc3RydWN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdC9eKEJsb2J8RmlsZSkkLy50ZXN0KG9iamVjdFtOQU1FXSlcblx0KTtcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgYG9iamAgaXMgYSBzcGVjLWNvbXBsaWFudCBgRm9ybURhdGFgIG9iamVjdFxuICpcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0XG4gKiBAcmV0dXJuIHtvYmplY3QgaXMgRm9ybURhdGF9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0Zvcm1EYXRhKG9iamVjdCkge1xuXHRyZXR1cm4gKFxuXHRcdHR5cGVvZiBvYmplY3QgPT09IFwib2JqZWN0XCIgJiZcblx0XHR0eXBlb2Ygb2JqZWN0LmFwcGVuZCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5zZXQgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuZ2V0ID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2Ygb2JqZWN0LmdldEFsbCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5kZWxldGUgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3Qua2V5cyA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC52YWx1ZXMgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuZW50cmllcyA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5jb25zdHJ1Y3RvciA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0b2JqZWN0W05BTUVdID09PSBcIkZvcm1EYXRhXCJcblx0KTtcbn1cblxuLyoqXG4gKiBEZXRlY3QgZm9ybSBkYXRhIGlucHV0IGZyb20gZm9ybS1kYXRhIG1vZHVsZVxuICpcbiAqIEBwYXJhbSB7YW55fSB2YWx1ZVxuICogQHJldHVybnMge3ZhbHVlIGlzIFN0cmVhbSAmIHtnZXRCb3VuZGFyeSgpOnN0cmluZywgaGFzS25vd25MZW5ndGgoKTpib29sZWFuLCBnZXRMZW5ndGhTeW5jKCk6bnVtYmVyfG51bGx9fVxuICovXG5leHBvcnQgY29uc3QgaXNNdWx0aXBhcnRGb3JtRGF0YVN0cmVhbSA9ICh2YWx1ZSkgPT4ge1xuXHRyZXR1cm4gKFxuXHRcdHZhbHVlIGluc3RhbmNlb2YgU3RyZWFtID09PSB0cnVlICYmXG5cdFx0dHlwZW9mIHZhbHVlLmdldEJvdW5kYXJ5ID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgdmFsdWUuaGFzS25vd25MZW5ndGggPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiB2YWx1ZS5nZXRMZW5ndGhTeW5jID09PSBcImZ1bmN0aW9uXCJcblx0KTtcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgYG9iamAgaXMgYW4gaW5zdGFuY2Ugb2YgQWJvcnRTaWduYWwuXG4gKlxuICogQHBhcmFtICB7YW55fSBvYmplY3RcbiAqIEByZXR1cm4ge29iaiBpcyBBYm9ydFNpZ25hbH1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzQWJvcnRTaWduYWwgPSAob2JqZWN0KSA9PiB7XG5cdHJldHVybiAoXG5cdFx0dHlwZW9mIG9iamVjdCA9PT0gXCJvYmplY3RcIiAmJlxuXHRcdChvYmplY3RbTkFNRV0gPT09IFwiQWJvcnRTaWduYWxcIiB8fCBvYmplY3RbTkFNRV0gPT09IFwiRXZlbnRUYXJnZXRcIilcblx0KTtcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgYHZhbHVlYCBpcyBhIFJlYWRhYmxlU3RyZWFtLlxuICpcbiAqIEBwYXJhbSB7Kn0gdmFsdWVcbiAqIEByZXR1cm5zIHt2YWx1ZSBpcyBSZWFkYWJsZVN0cmVhbX1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzUmVhZGFibGVTdHJlYW0gPSAodmFsdWUpID0+IHtcblx0cmV0dXJuIChcblx0XHR0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiZcblx0XHR0eXBlb2YgdmFsdWUuZ2V0UmVhZGVyID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgdmFsdWUuY2FuY2VsID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgdmFsdWUudGVlID09PSBcImZ1bmN0aW9uXCJcblx0KTtcbn07XG5cbi8qKlxuICpcbiAqIEBwYXJhbSB7YW55fSB2YWx1ZVxuICogQHJldHVybnMge3ZhbHVlIGlzIEl0ZXJhYmxlPHVua25vd24+fVxuICovXG5leHBvcnQgY29uc3QgaXNJdGVyYWJsZSA9ICh2YWx1ZSkgPT4gdmFsdWUgJiYgU3ltYm9sLml0ZXJhdG9yIGluIHZhbHVlO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/utils/is.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/utils/utf8.js":
/*!*******************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/utf8.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! util */ \"util\");\n\n\nconst encoder = new util__WEBPACK_IMPORTED_MODULE_0__.TextEncoder();\nconst decoder = new util__WEBPACK_IMPORTED_MODULE_0__.TextDecoder();\n\n/**\n * @param {string} text\n */\nconst encode = text => encoder.encode(text);\n\n/**\n * @param {Uint8Array} bytes\n */\nconst decode = bytes => decoder.decode(bytes);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL3V0ZjguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThDOztBQUU5QyxvQkFBb0IsNkNBQVc7QUFDL0Isb0JBQW9CLDZDQUFXOztBQUUvQjtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNPOztBQUVQO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ08iLCJzb3VyY2VzIjpbIi9ob21lL2FsdGNvaW4tZGFkZHkvRG93bmxvYWRzL293bmx5L25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9mZXRjaC9zcmMvdXRpbHMvdXRmOC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1RleHRFbmNvZGVyLCBUZXh0RGVjb2Rlcn0gZnJvbSAndXRpbCc7XG5cbmNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbmNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gdGV4dFxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlID0gdGV4dCA9PiBlbmNvZGVyLmVuY29kZSh0ZXh0KTtcblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gKi9cbmV4cG9ydCBjb25zdCBkZWNvZGUgPSBieXRlcyA9PiBkZWNvZGVyLmRlY29kZShieXRlcyk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/utils/utf8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/file/src/file.js":
/*!************************************************!*\
  !*** ./node_modules/@web-std/file/src/file.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   File: () => (/* binding */ File)\n/* harmony export */ });\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/file/src/package.js\");\n\n\n/**\n * @implements {globalThis.File}\n */\nclass File extends _package_js__WEBPACK_IMPORTED_MODULE_0__.Blob {\n  /**\n   *\n   * @param {BlobPart[]} init\n   * @param {string} name - A USVString representing the file name or the path\n   * to the file.\n   * @param {FilePropertyBag} [options]\n   */\n  constructor(\n    init,\n    name = panic(new TypeError(\"File constructor requires name argument\")),\n    options = {}\n  ) {\n    super(init, options)\n    // Per File API spec https://w3c.github.io/FileAPI/#file-constructor\n    // Every \"/\" character of file name must be replaced with a \":\".\n    /** @private */\n    this._name = name\n    // It appears that browser do not follow the spec here.\n    // String(name).replace(/\\//g, \":\")\n    /** @private */\n    this._lastModified = options.lastModified || Date.now()\n  }\n\n  /**\n   * The name of the file referenced by the File object.\n   * @type {string}\n   */\n  get name() {\n    return this._name\n  }\n\n  /**\n   * The path the URL of the File is relative to.\n   * @type {string}\n   */\n  get webkitRelativePath() {\n    return \"\"\n  }\n\n  /**\n   * Returns the last modified time of the file, in millisecond since the UNIX\n   * epoch (January 1st, 1970 at Midnight).\n   * @returns {number}\n   */\n  get lastModified() {\n    return this._lastModified\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"File\"\n  }\n}\n\n/**\n * @param {*} error\n * @returns {never}\n */\nconst panic = error => {\n  throw error\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmlsZS9zcmMvZmlsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtQzs7QUFFbkM7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDTyxtQkFBbUIsNkNBQUk7QUFDOUI7QUFDQTtBQUNBLGFBQWEsWUFBWTtBQUN6QixhQUFhLFFBQVE7QUFDckI7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmlsZS9zcmMvZmlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCbG9iIH0gZnJvbSBcIi4vcGFja2FnZS5qc1wiXG5cbi8qKlxuICogQGltcGxlbWVudHMge2dsb2JhbFRoaXMuRmlsZX1cbiAqL1xuZXhwb3J0IGNsYXNzIEZpbGUgZXh0ZW5kcyBCbG9iIHtcbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSB7QmxvYlBhcnRbXX0gaW5pdFxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIEEgVVNWU3RyaW5nIHJlcHJlc2VudGluZyB0aGUgZmlsZSBuYW1lIG9yIHRoZSBwYXRoXG4gICAqIHRvIHRoZSBmaWxlLlxuICAgKiBAcGFyYW0ge0ZpbGVQcm9wZXJ0eUJhZ30gW29wdGlvbnNdXG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICBpbml0LFxuICAgIG5hbWUgPSBwYW5pYyhuZXcgVHlwZUVycm9yKFwiRmlsZSBjb25zdHJ1Y3RvciByZXF1aXJlcyBuYW1lIGFyZ3VtZW50XCIpKSxcbiAgICBvcHRpb25zID0ge31cbiAgKSB7XG4gICAgc3VwZXIoaW5pdCwgb3B0aW9ucylcbiAgICAvLyBQZXIgRmlsZSBBUEkgc3BlYyBodHRwczovL3czYy5naXRodWIuaW8vRmlsZUFQSS8jZmlsZS1jb25zdHJ1Y3RvclxuICAgIC8vIEV2ZXJ5IFwiL1wiIGNoYXJhY3RlciBvZiBmaWxlIG5hbWUgbXVzdCBiZSByZXBsYWNlZCB3aXRoIGEgXCI6XCIuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgdGhpcy5fbmFtZSA9IG5hbWVcbiAgICAvLyBJdCBhcHBlYXJzIHRoYXQgYnJvd3NlciBkbyBub3QgZm9sbG93IHRoZSBzcGVjIGhlcmUuXG4gICAgLy8gU3RyaW5nKG5hbWUpLnJlcGxhY2UoL1xcLy9nLCBcIjpcIilcbiAgICAvKiogQHByaXZhdGUgKi9cbiAgICB0aGlzLl9sYXN0TW9kaWZpZWQgPSBvcHRpb25zLmxhc3RNb2RpZmllZCB8fCBEYXRlLm5vdygpXG4gIH1cblxuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGZpbGUgcmVmZXJlbmNlZCBieSB0aGUgRmlsZSBvYmplY3QuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqL1xuICBnZXQgbmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fbmFtZVxuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBwYXRoIHRoZSBVUkwgb2YgdGhlIEZpbGUgaXMgcmVsYXRpdmUgdG8uXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqL1xuICBnZXQgd2Via2l0UmVsYXRpdmVQYXRoKCkge1xuICAgIHJldHVybiBcIlwiXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgbGFzdCBtb2RpZmllZCB0aW1lIG9mIHRoZSBmaWxlLCBpbiBtaWxsaXNlY29uZCBzaW5jZSB0aGUgVU5JWFxuICAgKiBlcG9jaCAoSmFudWFyeSAxc3QsIDE5NzAgYXQgTWlkbmlnaHQpLlxuICAgKiBAcmV0dXJucyB7bnVtYmVyfVxuICAgKi9cbiAgZ2V0IGxhc3RNb2RpZmllZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fbGFzdE1vZGlmaWVkXG4gIH1cblxuICBnZXQgW1N5bWJvbC50b1N0cmluZ1RhZ10oKSB7XG4gICAgcmV0dXJuIFwiRmlsZVwiXG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0geyp9IGVycm9yXG4gKiBAcmV0dXJucyB7bmV2ZXJ9XG4gKi9cbmNvbnN0IHBhbmljID0gZXJyb3IgPT4ge1xuICB0aHJvdyBlcnJvclxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/file/src/file.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/file/src/lib.node.js":
/*!****************************************************!*\
  !*** ./node_modules/@web-std/file/src/lib.node.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.Blob),\n/* harmony export */   File: () => (/* binding */ File)\n/* harmony export */ });\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/file/src/package.js\");\n/* harmony import */ var _file_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./file.js */ \"(ssr)/./node_modules/@web-std/file/src/file.js\");\n\n\n;\n\n\n// Electron-renderer should get the browser implementation instead of node\n// Browser configuration is not enough\n\n// Marking export as a DOM File object instead of custom class.\n/** @type {typeof globalThis.File} */\nconst File = typeof globalThis.File === \"function\" ? globalThis.File : _file_js__WEBPACK_IMPORTED_MODULE_1__.File\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmlsZS9zcmMvbGliLm5vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFZOztBQUVaLENBQW1DO0FBQ1E7O0FBRTNDO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLHdCQUF3QjtBQUNuQyx1RUFBdUUsMENBQU87O0FBRXpEIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmlsZS9zcmMvbGliLm5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCJcblxuaW1wb3J0IHsgQmxvYiB9IGZyb20gXCIuL3BhY2thZ2UuanNcIlxuaW1wb3J0IHsgRmlsZSBhcyBXZWJGaWxlIH0gZnJvbSBcIi4vZmlsZS5qc1wiXG5cbi8vIEVsZWN0cm9uLXJlbmRlcmVyIHNob3VsZCBnZXQgdGhlIGJyb3dzZXIgaW1wbGVtZW50YXRpb24gaW5zdGVhZCBvZiBub2RlXG4vLyBCcm93c2VyIGNvbmZpZ3VyYXRpb24gaXMgbm90IGVub3VnaFxuXG4vLyBNYXJraW5nIGV4cG9ydCBhcyBhIERPTSBGaWxlIG9iamVjdCBpbnN0ZWFkIG9mIGN1c3RvbSBjbGFzcy5cbi8qKiBAdHlwZSB7dHlwZW9mIGdsb2JhbFRoaXMuRmlsZX0gKi9cbmNvbnN0IEZpbGUgPSB0eXBlb2YgZ2xvYmFsVGhpcy5GaWxlID09PSBcImZ1bmN0aW9uXCIgPyBnbG9iYWxUaGlzLkZpbGUgOiBXZWJGaWxlXG5cbmV4cG9ydCB7IEZpbGUsIEJsb2IgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/file/src/lib.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/file/src/package.js":
/*!***************************************************!*\
  !*** ./node_modules/@web-std/file/src/package.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport safe */ _web_std_blob__WEBPACK_IMPORTED_MODULE_0__.Blob)\n/* harmony export */ });\n/* harmony import */ var _web_std_blob__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web-std/blob */ \"(ssr)/./node_modules/@web-std/blob/src/lib.node.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmlsZS9zcmMvcGFja2FnZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvQyIsInNvdXJjZXMiOlsiL2hvbWUvYWx0Y29pbi1kYWRkeS9Eb3dubG9hZHMvb3dubHkvbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2ZpbGUvc3JjL3BhY2thZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgQmxvYiB9IGZyb20gXCJAd2ViLXN0ZC9ibG9iXCJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/file/src/package.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/form-data/src/form-data.js":
/*!**********************************************************!*\
  !*** ./node_modules/@web-std/form-data/src/form-data.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FormData: () => (/* binding */ FormData)\n/* harmony export */ });\n/**\n * @implements {globalThis.FormData}\n */\nclass FormData {\n  /**\n   * @param {HTMLFormElement} [form]\n   */\n  constructor(form) {\n    /**\n     * @private\n     * @readonly\n     * @type {Array<[string, FormDataEntryValue]>}\n     */\n    this._entries = []\n\n    Object.defineProperty(this, \"_entries\", { enumerable: false })\n\n    if (isHTMLFormElement(form)) {\n      for (const element of form.elements) {\n        if (isSelectElement(element)) {\n          for (const option of element.options) {\n            if (option.selected) {\n              this.append(element.name, option.value);\n            }\n          }\n        } else if (\n          isInputElement(element) &&\n          (element.checked || ![\"radio\", \"checkbox\"].includes(element.type)) &&\n          element.name\n        ) {\n          this.append(element.name, element.value);\n        }\n      }\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return \"FormData\"\n  }\n\n  /**\n   * Appends a new value onto an existing key inside a FormData object, or adds\n   * the key if it does not already exist.\n   *\n   * The difference between `set` and `append` is that if the specified key\n   * already exists, `set` will overwrite all existing values with the new one,\n   * whereas `append` will append the new value onto the end of the existing\n   * set of values.\n   *\n   * @param {string} name\n   * @param {string|Blob|File} value - The name of the field whose data is\n   * contained in value.\n   * @param {string} [filename] - The filename reported to the server, when a\n   * value is a `Blob` or a `File`. The default filename for a `Blob` objects is\n   * `\"blob\"`. The default filename for a `File` is the it's name.\n   */\n  append(\n    name,\n    value = panic(\n      new TypeError(\"FormData.append: requires at least 2 arguments\")\n    ),\n    filename\n  ) {\n    this._entries.push([name, toEntryValue(value, filename)])\n  }\n\n  /**\n   * Deletes a key and all its values from a FormData object.\n   *\n   * @param {string} name\n   */\n  delete(\n    name = panic(new TypeError(\"FormData.delete: requires string argument\"))\n  ) {\n    const entries = this._entries\n    let index = 0\n    while (index < entries.length) {\n      const [entryName] = /** @type {[string, FormDataEntryValue]}*/ (\n        entries[index]\n      )\n      if (entryName === name) {\n        entries.splice(index, 1)\n      } else {\n        index++\n      }\n    }\n  }\n\n  /**\n   * Returns the first value associated with a given key from within a\n   * FormData object.\n   *\n   * @param {string} name\n   * @returns {FormDataEntryValue|null}\n   */\n\n  get(name = panic(new TypeError(\"FormData.get: requires string argument\"))) {\n    for (const [entryName, value] of this._entries) {\n      if (entryName === name) {\n        return value\n      }\n    }\n    return null\n  }\n\n  /**\n   * Returns an array of all the values associated with a given key from within\n   * a FormData.\n   *\n   * @param {string} name\n   * @returns {FormDataEntryValue[]}\n   */\n  getAll(\n    name = panic(new TypeError(\"FormData.getAll: requires string argument\"))\n  ) {\n    const values = []\n    for (const [entryName, value] of this._entries) {\n      if (entryName === name) {\n        values.push(value)\n      }\n    }\n    return values\n  }\n\n  /**\n   * Returns a boolean stating whether a FormData object contains a certain key.\n   *\n   * @param {string} name\n   */\n\n  has(name = panic(new TypeError(\"FormData.has: requires string argument\"))) {\n    for (const [entryName] of this._entries) {\n      if (entryName === name) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * Sets a new value for an existing key inside a FormData object, or adds the\n   * key/value if it does not already exist.\n   *\n   * @param {string} name\n   * @param {string|Blob|File} value\n   * @param {string} [filename]\n   */\n\n  set(\n    name,\n    value = panic(new TypeError(\"FormData.set: requires at least 2 arguments\")),\n    filename\n  ) {\n    let index = 0\n    const { _entries: entries } = this\n    const entryValue = toEntryValue(value, filename)\n    let wasSet = false\n    while (index < entries.length) {\n      const entry = /** @type {[string, FormDataEntryValue]}*/ (entries[index])\n      if (entry[0] === name) {\n        if (wasSet) {\n          entries.splice(index, 1)\n        } else {\n          wasSet = true\n          entry[1] = entryValue\n          index++\n        }\n      } else {\n        index++\n      }\n    }\n\n    if (!wasSet) {\n      entries.push([name, entryValue])\n    }\n  }\n\n  /**\n   * Method returns an iterator allowing to go through all key/value pairs\n   * contained in this object.\n   */\n  entries() {\n    return this._entries.values()\n  }\n\n  /**\n   * Returns an iterator allowing to go through all keys of the key/value pairs\n   * contained in this object.\n   *\n   * @returns {IterableIterator<string>}\n   */\n  *keys() {\n    for (const [name] of this._entries) {\n      yield name\n    }\n  }\n\n  /**\n   * Returns an iterator allowing to go through all values contained in this\n   * object.\n   *\n   * @returns {IterableIterator<FormDataEntryValue>}\n   */\n  *values() {\n    for (const [_, value] of this._entries) {\n      yield value\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this._entries.values()\n  }\n\n  /**\n   * @param {(value: FormDataEntryValue, key: string, parent: globalThis.FormData) => void} fn\n   * @param {any} [thisArg]\n   * @returns {void}\n   */\n  forEach(fn, thisArg) {\n    for (const [key, value] of this._entries) {\n      fn.call(thisArg, value, key, this)\n    }\n  }\n}\n\n/**\n * @param {any} value\n * @returns {value is HTMLFormElement}\n */\nconst isHTMLFormElement = value =>\n  Object.prototype.toString.call(value) === \"[object HTMLFormElement]\"\n\n/**\n * @param {string|Blob|File} value\n * @param {string} [filename]\n * @returns {FormDataEntryValue}\n */\nconst toEntryValue = (value, filename) => {\n  if (isFile(value)) {\n    return filename != null ? new BlobFile([value], filename, value) : value\n  } else if (isBlob(value)) {\n    return new BlobFile([value], filename != null ? filename : \"blob\")\n  } else {\n    if (filename != null && filename != \"\") {\n      throw new TypeError(\n        \"filename is only supported when value is Blob or File\"\n      )\n    }\n    return `${value}`\n  }\n}\n\n/**\n * @param {any} value\n * @returns {value is File}\n */\nconst isFile = value =>\n  Object.prototype.toString.call(value) === \"[object File]\" &&\n  typeof value.name === \"string\"\n\n/**\n * @param {any} value\n * @returns {value is Blob}\n */\nconst isBlob = value =>\n  Object.prototype.toString.call(value) === \"[object Blob]\"\n\n/**\n * Simple `File` implementation that just wraps a given blob.\n * @implements {globalThis.File}\n */\nconst BlobFile = class File {\n  /**\n   * @param {[Blob]} parts\n   * @param {string} name\n   * @param {FilePropertyBag} [options]\n   */\n  constructor([blob], name, { lastModified = Date.now() } = {}) {\n    this.blob = blob\n    this.name = name\n    this.lastModified = lastModified\n  }\n  get webkitRelativePath() {\n    return \"\"\n  }\n  get size() {\n    return this.blob.size\n  }\n  get type() {\n    return this.blob.type\n  }\n  /**\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [contentType]\n   */\n  slice(start, end, contentType) {\n    return this.blob.slice(start, end, contentType)\n  }\n  stream() {\n    return this.blob.stream()\n  }\n  text() {\n    return this.blob.text()\n  }\n  arrayBuffer() {\n    return this.blob.arrayBuffer()\n  }\n  get [Symbol.toStringTag]() {\n    return \"File\"\n  }\n}\n\n/**\n * @param {*} error\n * @returns {never}\n */\nconst panic = error => {\n  throw error\n}\n\n/**\n *\n * @param {Element} element\n * @returns {element is HTMLSelectElement}\n */\nfunction isSelectElement(element) {\n  return element.tagName === \"SELECT\";\n}\n\n/**\n *\n * @param {Element} element\n * @returns {element is HTMLInputElement}\n */\nfunction isInputElement(element) {\n  return element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/form-data/src/form-data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/form-data/src/lib.node.js":
/*!*********************************************************!*\
  !*** ./node_modules/@web-std/form-data/src/lib.node.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FormData: () => (/* binding */ FormData)\n/* harmony export */ });\n/* harmony import */ var _form_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form-data.js */ \"(ssr)/./node_modules/@web-std/form-data/src/form-data.js\");\n// @ts-check\n\n\n;\n\n// Electron-renderer should get the browser implementation instead of node\n// which is why we check global first.\nconst FormData =\n  typeof globalThis.FormData === \"function\"\n    ? globalThis.FormData\n    : _form_data_js__WEBPACK_IMPORTED_MODULE_0__.FormData\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZm9ybS1kYXRhL3NyYy9saWIubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ1k7O0FBRVosQ0FBMEM7O0FBRTFDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxNQUFNLG1EQUFpQiIsInNvdXJjZXMiOlsiL2hvbWUvYWx0Y29pbi1kYWRkeS9Eb3dubG9hZHMvb3dubHkvbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2Zvcm0tZGF0YS9zcmMvbGliLm5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLWNoZWNrXG5cInVzZSBzdHJpY3RcIlxuXG5pbXBvcnQgKiBhcyBwb2x5ZmlsbCBmcm9tIFwiLi9mb3JtLWRhdGEuanNcIlxuXG4vLyBFbGVjdHJvbi1yZW5kZXJlciBzaG91bGQgZ2V0IHRoZSBicm93c2VyIGltcGxlbWVudGF0aW9uIGluc3RlYWQgb2Ygbm9kZVxuLy8gd2hpY2ggaXMgd2h5IHdlIGNoZWNrIGdsb2JhbCBmaXJzdC5cbmV4cG9ydCBjb25zdCBGb3JtRGF0YSA9XG4gIHR5cGVvZiBnbG9iYWxUaGlzLkZvcm1EYXRhID09PSBcImZ1bmN0aW9uXCJcbiAgICA/IGdsb2JhbFRoaXMuRm9ybURhdGFcbiAgICA6IHBvbHlmaWxsLkZvcm1EYXRhXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/form-data/src/lib.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/stream/src/lib.node.js":
/*!******************************************************!*\
  !*** ./node_modules/@web-std/stream/src/lib.node.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ByteLengthQueuingStrategy: () => (/* binding */ ByteLengthQueuingStrategy),\n/* harmony export */   CountQueuingStrategy: () => (/* binding */ CountQueuingStrategy),\n/* harmony export */   ReadableByteStreamController: () => (/* binding */ ReadableByteStreamController),\n/* harmony export */   ReadableStream: () => (/* binding */ ReadableStream),\n/* harmony export */   ReadableStreamBYOBReader: () => (/* binding */ ReadableStreamBYOBReader),\n/* harmony export */   ReadableStreamBYOBRequest: () => (/* binding */ ReadableStreamBYOBRequest),\n/* harmony export */   ReadableStreamDefaultController: () => (/* binding */ ReadableStreamDefaultController),\n/* harmony export */   ReadableStreamDefaultReader: () => (/* binding */ ReadableStreamDefaultReader),\n/* harmony export */   TextDecoderStream: () => (/* binding */ TextDecoderStream),\n/* harmony export */   TextEncoderStream: () => (/* binding */ TextEncoderStream),\n/* harmony export */   TransformStream: () => (/* binding */ TransformStream),\n/* harmony export */   TransformStreamDefaultController: () => (/* binding */ TransformStreamDefaultController),\n/* harmony export */   WritableStream: () => (/* binding */ WritableStream),\n/* harmony export */   WritableStreamDefaultController: () => (/* binding */ WritableStreamDefaultController),\n/* harmony export */   WritableStreamDefaultWriter: () => (/* binding */ WritableStreamDefaultWriter)\n/* harmony export */ });\n/* harmony import */ var _stream_cjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stream.cjs */ \"(ssr)/./node_modules/@web-std/stream/src/stream.cjs\");\n// @ts-ignore\n\nconst {\n  ReadableStream,\n  ReadableStreamDefaultReader,\n  ReadableStreamBYOBReader,\n  ReadableStreamBYOBRequest,\n  ReadableByteStreamController,\n  ReadableStreamDefaultController,\n  TransformStream,\n  TransformStreamDefaultController,\n  WritableStream,\n  WritableStreamDefaultWriter,\n  WritableStreamDefaultController,\n  ByteLengthQueuingStrategy,\n  CountQueuingStrategy,\n  TextEncoderStream,\n  TextDecoderStream,\n} = _stream_cjs__WEBPACK_IMPORTED_MODULE_0__\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvc3RyZWFtL3NyYy9saWIubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDa0M7QUFDM0I7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLEVBQUUsd0NBQU8iLCJzb3VyY2VzIjpbIi9ob21lL2FsdGNvaW4tZGFkZHkvRG93bmxvYWRzL293bmx5L25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9zdHJlYW0vc3JjL2xpYi5ub2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1pZ25vcmVcbmltcG9ydCBzdHJlYW1zIGZyb20gXCIuL3N0cmVhbS5janNcIlxuZXhwb3J0IGNvbnN0IHtcbiAgUmVhZGFibGVTdHJlYW0sXG4gIFJlYWRhYmxlU3RyZWFtRGVmYXVsdFJlYWRlcixcbiAgUmVhZGFibGVTdHJlYW1CWU9CUmVhZGVyLFxuICBSZWFkYWJsZVN0cmVhbUJZT0JSZXF1ZXN0LFxuICBSZWFkYWJsZUJ5dGVTdHJlYW1Db250cm9sbGVyLFxuICBSZWFkYWJsZVN0cmVhbURlZmF1bHRDb250cm9sbGVyLFxuICBUcmFuc2Zvcm1TdHJlYW0sXG4gIFRyYW5zZm9ybVN0cmVhbURlZmF1bHRDb250cm9sbGVyLFxuICBXcml0YWJsZVN0cmVhbSxcbiAgV3JpdGFibGVTdHJlYW1EZWZhdWx0V3JpdGVyLFxuICBXcml0YWJsZVN0cmVhbURlZmF1bHRDb250cm9sbGVyLFxuICBCeXRlTGVuZ3RoUXVldWluZ1N0cmF0ZWd5LFxuICBDb3VudFF1ZXVpbmdTdHJhdGVneSxcbiAgVGV4dEVuY29kZXJTdHJlYW0sXG4gIFRleHREZWNvZGVyU3RyZWFtLFxufSA9IHN0cmVhbXNcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/stream/src/lib.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/stream/src/stream.cjs":
/*!*****************************************************!*\
  !*** ./node_modules/@web-std/stream/src/stream.cjs ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("try {\n  module.exports = __webpack_require__(/*! stream/web */ \"stream/web\")\n} catch (error) {\n  module.exports = __webpack_require__(/*! web-streams-polyfill/ponyfill */ \"(ssr)/./node_modules/web-streams-polyfill/dist/ponyfill.mjs\")\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvc3RyZWFtL3NyYy9zdHJlYW0uY2pzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsRUFBRSxvRUFBc0M7QUFDeEMsRUFBRTtBQUNGLEVBQUUsd0lBQXlEO0FBQzNEIiwic291cmNlcyI6WyIvaG9tZS9hbHRjb2luLWRhZGR5L0Rvd25sb2Fkcy9vd25seS9ub2RlX21vZHVsZXMvQHdlYi1zdGQvc3RyZWFtL3NyYy9zdHJlYW0uY2pzIl0sInNvdXJjZXNDb250ZW50IjpbInRyeSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInN0cmVhbS93ZWJcIilcbn0gY2F0Y2ggKGVycm9yKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIndlYi1zdHJlYW1zLXBvbHlmaWxsL3BvbnlmaWxsXCIpXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/stream/src/stream.cjs\n");

/***/ })

};
;